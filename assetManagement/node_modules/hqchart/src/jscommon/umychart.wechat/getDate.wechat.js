/**
 * 获取开始日期 shaoshiyu
 * today 当前时间的最近多少天：值null表示获取的是当前时间的最近多少天；指定日期的最近多少天：today格式为yy/mm/dd
 * addDayCount 表示增加的事件，如最近一月，-1；最近一周为-7
 * str  有值的，d（日），m（月），y（年）
 * 出参格式 YYMMDD
 * */
function startDate(today, addDayCount, str) {
  var dd;
  if (today) {
    dd = new Date(today);
  } else {
    dd = new Date();
  }
  var y, m, d;

  switch (str) {
    case "d":
      dd.setDate(dd.getDate() + addDayCount);//获取AddDayCount天后的日期
      break;
    case "m":
      dd.setMonth(dd.getMonth()+ addDayCount);//获取AddDayCount天后的日期
      break;
    case "y":
      // return (dd.getFullYear() * 10000 + 101).toString();
      dd.setFullYear(dd.getFullYear() + addDayCount);
      break;
  }
  var value = dd.getFullYear() * 10000 + (dd.getMonth() + 1) * 100 + dd.getDate();
  return value.toString();
}

/**
 * 获取结束日期,即当前时间
 * 出参格式 YYMMDD
 **/
function endTime() {
  var now = new Date();
  var value = now.getFullYear() * 10000 + (now.getMonth() + 1) * 100 + now.getDate();
  return value.toString();
}

/* 
 * 获取指定日期的最近天数
 * 调用规则 : 
 * 第一个入参格式支持字符串："2017/11/26"、"2017.10.27"、"20171027"、"2017-10-27"
 * 指定日期n天前日期：date_getPointDate("2017/11/26", -30)
 * 指定日期n天后日期：date_getPointDate("2017.10.27", 30)
 */
function date_getPointDate (currDate, num) {  //num表示天数，接受正负数
  // console.log("currDate", currDate);
  if (!num) {//做num简单验证
    return currDate;
  }
  num = Math.floor(num);
  this.symbol = '';  //需要什么格式出参自己定义

  // console.log("currDate", currDate);
  if(currDate.indexOf('-') > -1) //格式yy-mm-dd
  {
    currDate = currDate.replace(/-/g, '/');
  } 
  else if (currDate.indexOf('.') > -1) //格式yy.mm.dd
  {
    currDate = currDate.replace(/\./g, '/');
  }
  else 
  {
    currDate = currDate.substring(0, 4) + "/" + currDate.substring(4, 6) + "/" + currDate.substring(6, 8);
  }

  //到这一步前，currDate格式要为YY/MM/DD
  var myDate = new Date(currDate),
    lw = new Date(Number(myDate) + 1000 * 60 * 60 * 24 * num), //num天数
    lastY = lw.getFullYear(),
    lastM = lw.getMonth() + 1,
    lastD = lw.getDate(),
    startdate = lastY + this.symbol + (lastM < 10 ? "0" + lastM : lastM) + this.symbol + (lastD < 10 ? "0" + lastD : lastD);
  // console.log("currDate", currDate, startdate);
  return startdate;
}


module.exports ={
  JSCommonDate:
  {
    startDate: startDate,
    endTime: endTime,
    date_getPointDate: date_getPointDate
  }
};