/*
    用户日志,积分等信息提交后台
*/


/*
积分：
https://opensource.zealink.com/api/userpoint
Post:
    {
    "appname":"测试",
    "userid":"testuser",
    "operator":"创建账户",
    "refereeid":"testuser2",
    "module":{"name":"注册","id":"12345"}
    }
*/
var Cache = new Set(); //历史的日志, 数据提交前检查下是否已经提交过, 1页面的操作只能获取1次积分, 多次提交无效

function ZUserResource() {
  this.Domain = "https://opensource.zealink.com"; //API域名
  this.CacheDomain = "https://opensourcecache.zealink.com"; //缓存域名
  this.WeiChart = "https://apitest.zealink.com"; //测试API域名
}

var g_ZUserResource = new ZUserResource();

function UserPoint() {
  this.UserID; //用户id
  this.currentAppName = "A股探雷器"; //小程序名字 
  this.Session = ""; //用户的Session,后期需要验证session,防止盗刷
  this.pageName = ""; //当前页面name
  this.pageID = ""; //当前页面id
  this.ConsumeAction = "";//	行为   查询（10 不会扣除积分）  消费（20  会扣除积分）
  //'https://opensource.zealink.com/api/SP_UserPointOp_V2';
  this.ApiUrl = g_ZUserResource.Domain + "/api/SP_UserPointOp_V2";
  this.ConsumeApiUrl = g_ZUserResource.Domain + "/api/SP_UserPointConsume";

  //注册积分 10   注册的积分直接写在了登录注册接口中，页面不需要调取
  this.Registered = function(refereeID)     
  {
    // var data={RefereeId:refereeID, Operator:'注册', Module:{Name:"注册", ID:"Registered"}};
    var data = {
      "AppName": this.currentAppName,
      "UserId": this.UserID,
      "Session": this.Session,
      "Operator": 10,
      "RefereeId": refereeID,
      "Module": {
        "Name": this.pageName,
        "Id": this.pageID
      }
    }
    this.Request(data);
  }

  this.SignIn = function(refereeID) //签到  20
  {
    // var data = { RefereeId: refereeID, Operator:'签到', Module:{Name:'签到', ID:"SignIn"}};
    var data = {
      "AppName": this.currentAppName,
      "UserId": this.UserID,
      "Session": this.Session,
      "Operator": 20,
      "RefereeId": refereeID, //推荐人
      "Module": {
        "Name": this.pageName,
        "Id": this.pageID
      }
    }
    // this.Request(data); //如果积分没有做完，需要屏蔽这个
  }

  /*
  *页面访问 30 
  *不是每个页面访问都会算积分的。在文档里面有id字段的才会算
  *页面访问时，当前用户不增加积分，只是给当前用户的注册推荐者加积分，接口会判断当前用户永无注册推荐者，自己计算积分
  */
  this.OpenPage = function(refereeID) 
  {
    // var data={RefereeId:refereeID, Operator:'访问页面', Module:{Name:pageName, ID:PageID}};
    var data = {
      "AppName": this.currentAppName,
      "UserId": this.UserID,
      "RefereeId": refereeID,
      "Module": {
        "Name": this.pageName,
        "Id": this.pageID
      }
    }

    this.Request(data);//如果积分没有做完，需要屏蔽这个
  }

  //分享页面 30  和上一个页面访问一样，废弃不用
  this.SharePage = function(refereeID) 
  {
    // var data={Operator:'分享页面', Module:{Name:pageName, ID:pageID}};
    var data = {
      "AppName": this.AppName,
      "UserId": this.UserID,
      "Session": this.Session,
      "Operator": 30,
      "RefereeId": refereeID,
      "Module": {
        "Name": this.pageName,
        "Id": this.pageID
      }
    }

    // this.Request(data);
  }

  //data.RefereeId  邀请人id   data.Module.Name 页面名字  data.Module.ID 页面id  data.Operator 操作
  this.Request = function(data) {
    console.log('[UserPoint::Request]', data, this.UserID);
    if (!this.UserID) return;

    var date = new Date();
    var nDate = date.getFullYear() * 10000 + date.getMonth() * 100 + date.getDay();

    //key 用户ID-日期—页面ID-类型-推荐人id
    var key = this.UserID + '|' + nDate.toString() + '|' + data.Module.Id + "|" + data.Operator + "|" + data.RefereeId;
    console.log('[UserPoint::Request] Key=' + key + ' cache=' + Cache.has(key) + ' cache size=' + Cache.size);
    if (Cache.has(key)) {
      return; //已提交过了, 重复无效
    } else {
      Cache.add(key);
    }

    var self = this;
    this.Data = {};

    //把data数据发给后台
    wx.request({
      url: this.ApiUrl,
      data: data,
      method: "POST",
      dataType: "json",
      success: function(res) {
        self.RecvData(res);
      },
      error: function(request) {
        self.RecvError(request);
      }
    })
  }

  this.RecvData = function(recvdata) {
    // console.log(recvdata,"积分recvdata")
    var data = recvdata.data;

    if (data.code != 0) return this.InvokeCallback();

    this.Data.Addpoint = data.addpoint; //本次增加积分
    this.Data.Totalpoint = data.totalpoint; //总积分
    // this.Data.Message = data.message; //提示信息
    // this.Data.Operator = data.operator; //本次操作
    // if (data.event) this.Data.Event = data.event;  

    if (data.code == 0 && data.addpoint > 0) {
      wx.showToast({
        title: '签到成功+' + data.addpoint,
        icon: 'success',
        duration: 1500
      })
    }

    this.InvokeCallback();
  }

  this.RecvError = function(request) {
    console.log(request);
  };

  //积分消费
  this.Consume = function ()
  {
    //先查询当前用户是否有积分可以使用，在扣除积分
    var data = {
      "AppName": this.currentAppName,//this.AppName,
      "UserId": this.UserID,
      "Module": {
        "Name": this.pageName,
        "Id": this.pageID
      },
      "Action": this.ConsumeAction,
      "ConsumeType":10//消费类型   服务（10）
    };
    // this.ConsumeRequest(data);//如果积分没有做完，需要屏蔽这个
  }

  this.ConsumeRequest = function(data){
    if (!this.UserID) return;

    var date = new Date();
    var nDate = date.getFullYear() * 10000 + date.getMonth() * 100 + date.getDay();

    var self = this;
    this.Data = {};

    //把data数据发给后台
    wx.request({
      url: this.ConsumeApiUrl,
      data: data,
      method: "POST",
      dataType: "json",
      success: function (res) {
        self.ConsumeRecvData(res);
      },
      error: function (request) {
        self.RecvError(request);
      }
    })
  }

  this.ConsumeRecvData = function (recvdata){
    console.log("消费", recvdata);
    var data = recvdata.data;
    this.Data = data;

    if (data.code != 0) return this.InvokeCallback();

    //对消费结果进行处理
    this.InvokeCallback();
  }

  this.InvokeCallback = function() {
    if (typeof(this.UpdateUICallback) != 'function') return;

    if (this.UpdateUICallback) this.UpdateUICallback(this);
  };
}


module.exports = {
  JSUserLog: {
    UserPoint: UserPoint,
  }
};