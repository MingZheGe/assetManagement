{"ast":null,"code":"export default {\n  //name: \"Test\",\n  components: {},\n  props: ['text', 'eventType', 'product', 'time', 'title', 'range', 'productType', 'company', 'dataFrom', 'area', 'trigger', 'method'],\n  data() {\n    return {\n      value: 0,\n      /*\r\n      tableData: [\r\n        { id: 1, label: '事件类型: ', value: this.eventType},\r\n        { id: 2, label: '调价产品: ', value: this.product},\r\n        { id: 3, label: '调价时间: ', value: this.time},\r\n        { id: 4, label: '调价方式: ', value: this.method},\r\n        { id: 5, label: '', value: ''},\r\n        { id: 6, label: '', value: ''},\r\n      ],\r\n      */\n      EventTypeTableData: [{\n        company: '获批产品所在公司',\n        product: '获批产品',\n        time: '获批时间',\n        range: '获批产品类别',\n        type: '获批产品作用范围'\n      }, {\n        method: '调价方式',\n        product: '调价产品',\n        time: '调价时间',\n        rigion: '调价地区'\n      }]\n    };\n  },\n  created() {\n    this.value = this.dataFrom; //从哪个界面传过来的\n  },\n\n  computed: {\n    //表格换行\n    firstRowItems() {\n      // 返回前三个元素\n      return this.computedTableData.slice(0, 3);\n    },\n    secondRowItems() {\n      // 返回后三个元素\n      return this.computedTableData.slice(3);\n    },\n    computedTableData() {\n      // 根据 value 来动态生成 tableData\n      const tableData = [\n      //EventTypeTableData[0]获批 EventTypeTableData[1]调价\n      {\n        id: 1,\n        label: \"事件类型\",\n        value: this.eventType\n      }, {\n        id: 2,\n        label: this.eventType === \"获批事件\" ? this.EventTypeTableData[0].product : this.EventTypeTableData[1].product,\n        value: this.product\n      }, {\n        id: 3,\n        label: this.eventType === \"获批事件\" ? this.EventTypeTableData[0].time : this.EventTypeTableData[1].time,\n        value: this.time\n      }, {\n        id: 4,\n        label: this.eventType === \"获批事件\" ? this.EventTypeTableData[0].range : this.EventTypeTableData[1].rigion,\n        value: this.range\n      }, {\n        id: 5,\n        label: this.eventType === \"获批事件\" ? this.EventTypeTableData[0].company : this.EventTypeTableData[1].method,\n        value: this.productType\n      }, {\n        id: 6,\n        label: '',\n        value: ''\n      } //差一个获批产品作用范围没地方写\n      ];\n\n      return tableData;\n    }\n  }\n};","map":{"version":3,"names":["components","props","data","value","EventTypeTableData","company","product","time","range","type","method","rigion","created","dataFrom","computed","firstRowItems","computedTableData","slice","secondRowItems","tableData","id","label","eventType","productType"],"sources":["src/components/table.vue"],"sourcesContent":["<template>\r\n    <div class=\"Table\">\r\n      \r\n    <div class=\"title5\">{{ this.title }}</div>\r\n\r\n    <div class=\"header\" align=\"center\">\r\n      <div class=\"scrollable-container\" >\r\n        <div class=\"text\" >\r\n          {{ text }}\r\n        </div>\r\n        </div>\r\n      \r\n    <table class=\"Tabll\">\r\n    <tbody>\r\n      \r\n      <tr>\r\n            <td v-for=\"item in firstRowItems\" :key=\"item.id\">\r\n              <b>{{ item.label }}</b>\r\n              {{ item.value }}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td v-for=\"item in secondRowItems\" :key=\"item.id\">\r\n              <b>{{ item.label }}</b>\r\n              {{ item.value }}\r\n            </td>\r\n          </tr>\r\n        \r\n            <!--\r\n        <tr v-for=\"(item, index) in computedTableData\" :key=\"index\">\r\n          <td v-for=\"(value, key) in item\" :key=\"key\">{{ value }}</td>\r\n        </tr>\r\n      -->\r\n    </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    export default {\r\n      //name: \"Test\",\r\n      components: {\r\n      },\r\n      props: ['text','eventType','product','time','title','range','productType','company','dataFrom','area','trigger','method'],\r\n      data() {\r\n        return {\r\n          value:0,\r\n          /*\r\n          tableData: [\r\n            { id: 1, label: '事件类型: ', value: this.eventType},\r\n            { id: 2, label: '调价产品: ', value: this.product},\r\n            { id: 3, label: '调价时间: ', value: this.time},\r\n            { id: 4, label: '调价方式: ', value: this.method},\r\n            { id: 5, label: '', value: ''},\r\n            { id: 6, label: '', value: ''},\r\n          ],\r\n          */\r\n          EventTypeTableData:[\r\n          { company: '获批产品所在公司',product: '获批产品',time:'获批时间',range:'获批产品类别',type:'获批产品作用范围'},\r\n          { method: '调价方式',product: '调价产品',time:'调价时间',rigion:'调价地区'},\r\n          ],\r\n        };\r\n      },\r\n      created() {\r\n        this.value=this.dataFrom//从哪个界面传过来的\r\n        \r\n    \r\n      },\r\n    \r\n      computed: {\r\n\r\n          //表格换行\r\n          firstRowItems() {\r\n          // 返回前三个元素\r\n          return this.computedTableData.slice(0, 3);\r\n        },\r\n        secondRowItems() {\r\n          // 返回后三个元素\r\n          return this.computedTableData.slice(3);\r\n        },\r\n\r\n        computedTableData() {\r\n      // 根据 value 来动态生成 tableData\r\n      const tableData = [//EventTypeTableData[0]获批 EventTypeTableData[1]调价\r\n        { id: 1, label:\"事件类型\", value: this.eventType },\r\n        { id: 2, label: this.eventType === \"获批事件\" ? this.EventTypeTableData[0].product:  this.EventTypeTableData[1].product, \r\n         value: this.product},\r\n        { id: 3, label: this.eventType === \"获批事件\" ? this.EventTypeTableData[0].time:  this.EventTypeTableData[1].time, \r\n        value:  this.time },\r\n        { id: 4, label: this.eventType === \"获批事件\" ? this.EventTypeTableData[0].range:  this.EventTypeTableData[1].rigion, \r\n        value: this.range},\r\n        { id: 5, label: this.eventType === \"获批事件\" ? this.EventTypeTableData[0].company:  this.EventTypeTableData[1].method,\r\n         value:this.productType},\r\n        { id: 6, label: '',\r\n        value: ''},//差一个获批产品作用范围没地方写\r\n          \r\n      ];\r\n\r\n      return tableData;\r\n    },\r\n\r\n\r\n  \r\n      },\r\n    };\r\n    \r\n    </script>\r\n    \r\n    \r\n    <style lang=\"less\">\r\n    .scrollable-container {\r\n  height: 130px; /* 设置容器的固定高度 */\r\n  overflow-y: auto; /* 添加垂直滚动条 */\r\n  //border: 1px solid #ccc; /* 为了可视化，添加边框 */\r\n  width:50%;\r\n  margin-left:-100px;\r\n  //margin-bottom: 100px;\r\n\r\n}\r\n     .Tabll {\r\n    border-collapse: collapse;\r\n    width: 50%;\r\n    margin-bottom: 20px;\r\n   margin-top:10px;\r\n   margin-left:-100px;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    width: 50%;\r\n    margin-bottom: 20px;\r\n \r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #dddddd;\r\n    text-align: left;\r\n    padding: 8px;\r\n    width:50px;\r\n    height:50px;\r\n  }\r\n  \r\n  th {\r\n    background-color: #dddddd;\r\n  }\r\n    \r\n      .title5{\r\n        font-size: 15px;\r\n        font-weight: bold;\r\n        text-transform: uppercase;\r\n        //padding: 10px;\r\n        margin-top: 20px;\r\n        margin-left: 18px;\r\n        color:#000000\r\n      }\r\n    \r\n      .text{\r\n        font-size:  28 rem;//24rem和之前一样大\r\n        margin-bottom: 15px;\r\n        text-transform: uppercase;\r\n        width:100%;\r\n        text-align: left;\r\n      \r\n      }\r\n\r\n      .Table{\r\n        background-color: #ffffff;\r\n       // margin-left: 10%;\r\n    \r\n      }\r\n    \r\n      \r\n    \r\n      \r\n    \r\n\r\n   \r\n      \r\n      </style>"],"mappings":"AAwCA;EACA;EACAA,UAAA,GACA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACAC,kBAAA,GACA;QAAAC,OAAA;QAAAC,OAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAC,MAAA;QAAAJ,OAAA;QAAAC,IAAA;QAAAI,MAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAT,KAAA,QAAAU,QAAA;EAGA;;EAEAC,QAAA;IAEA;IACAC,cAAA;MACA;MACA,YAAAC,iBAAA,CAAAC,KAAA;IACA;IACAC,eAAA;MACA;MACA,YAAAF,iBAAA,CAAAC,KAAA;IACA;IAEAD,kBAAA;MACA;MACA,MAAAG,SAAA;MAAA;MACA;QAAAC,EAAA;QAAAC,KAAA;QAAAlB,KAAA,OAAAmB;MAAA,GACA;QAAAF,EAAA;QAAAC,KAAA,OAAAC,SAAA,mBAAAlB,kBAAA,IAAAE,OAAA,QAAAF,kBAAA,IAAAE,OAAA;QACAH,KAAA,OAAAG;MAAA,GACA;QAAAc,EAAA;QAAAC,KAAA,OAAAC,SAAA,mBAAAlB,kBAAA,IAAAG,IAAA,QAAAH,kBAAA,IAAAG,IAAA;QACAJ,KAAA,OAAAI;MAAA,GACA;QAAAa,EAAA;QAAAC,KAAA,OAAAC,SAAA,mBAAAlB,kBAAA,IAAAI,KAAA,QAAAJ,kBAAA,IAAAO,MAAA;QACAR,KAAA,OAAAK;MAAA,GACA;QAAAY,EAAA;QAAAC,KAAA,OAAAC,SAAA,mBAAAlB,kBAAA,IAAAC,OAAA,QAAAD,kBAAA,IAAAM,MAAA;QACAP,KAAA,OAAAoB;MAAA,GACA;QAAAH,EAAA;QAAAC,KAAA;QACAlB,KAAA;MAAA;MAAA,CAEA;;MAEA,OAAAgB,SAAA;IACA;EAIA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}