{"ast":null,"code":"import 'jsmind/style/jsmind.css';\nimport jsMind from 'jsmind/js/jsmind.js';\nwindow.jsMind = jsMind;\nrequire('jsmind/js/jsmind.draggable.js');\nrequire('jsmind/js/jsmind.screenshot.js');\nexport default {\n  props: {\n    showBar: {\n      // 是否显示工具栏，显示启用编辑\n      type: Boolean,\n      default: true\n    },\n    theme: {\n      // 主题\n      type: String,\n      default: 'info'\n    },\n    lineColor: {\n      // 线条颜色\n      type: String,\n      default: 'skyblue'\n    }\n  },\n  data() {\n    return {\n      mind: {},\n      jm: null,\n      isZoomIn: false,\n      isZoomOut: false,\n      level: 0,\n      nodeOptions: [{\n        value: 1,\n        label: '展开到一级节点'\n      }, {\n        value: 2,\n        label: '展开到二级节点'\n      }, {\n        value: 3,\n        label: '展开到三级节点'\n      }, {\n        value: 0,\n        label: '展开全部节点'\n      }, {\n        value: -1,\n        label: '隐藏全部节点'\n      }],\n      themeOptions: [{\n        value: 'default',\n        label: 'default'\n      }, {\n        value: 'primary',\n        label: 'primary'\n      }, {\n        value: 'warning',\n        label: 'warning'\n      }, {\n        value: 'danger',\n        label: 'danger'\n      }, {\n        value: 'success',\n        label: 'success'\n      }, {\n        value: 'info',\n        label: 'info'\n      }, {\n        value: 'greensea',\n        label: 'greensea'\n      }, {\n        value: 'nephrite',\n        label: 'nephrite'\n      }, {\n        value: 'belizehole',\n        label: 'belizehole'\n      }, {\n        value: 'wisteria',\n        label: 'wisteria'\n      }, {\n        value: 'asphalt',\n        label: 'asphalt'\n      }, {\n        value: 'orange',\n        label: 'orange'\n      }, {\n        value: 'pumpkin',\n        label: 'pumpkin'\n      }, {\n        value: 'pomegranate',\n        label: 'pomegranate'\n      }, {\n        value: 'clouds',\n        label: 'clouds'\n      }, {\n        value: 'asbestos',\n        label: 'asbestos'\n      }],\n      localTheme: this.theme,\n      dialogVisible: false,\n      nodeOption: {\n        content: '',\n        bgColor: '',\n        fontColor: '',\n        fontSize: '',\n        fontWeight: '',\n        fontStyle: ''\n      }\n    };\n  },\n  created() {},\n  mounted() {\n    this.getData();\n    this.mouseWheel();\n  },\n  methods: {\n    beforeUpload(file) {\n      // 上传文件之前钩子\n      if (file) {\n        jsMind.util.file.read(file, jsmindData => {\n          const mind = jsMind.util.json.string2json(jsmindData);\n          if (mind) {\n            this.jm.show(mind);\n            this.$message({\n              type: 'success',\n              message: '打开成功'\n            });\n          } else {\n            this.prompt_info('不能打开mindmap文件');\n          }\n        });\n      } else {\n        this.prompt_info('请先选择文件');\n        return false;\n      }\n    },\n    upload() {},\n    getData() {\n      this.$API({\n        name: 'getMind'\n      }).then(res => {\n        this.mind = res.data;\n        this.open_empty();\n      }).catch(error => {\n        this.$message.error(error);\n      });\n    },\n    open_empty() {\n      const options = {\n        container: 'jsmind_container',\n        // 必选，容器ID\n        editable: this.showBar,\n        // 可选，是否启用编辑\n        theme: this.localTheme,\n        // 可选，主题\n        view: {\n          line_width: 2,\n          // 思维导图线条的粗细\n          line_color: this.lineColor // 思维导图线条的颜色\n        },\n\n        shortcut: {\n          enable: true // 禁用快捷键\n        },\n\n        layout: {\n          hspace: 50,\n          // 节点之间的水平间距\n          vspace: 20,\n          // 节点之间的垂直间距\n          pspace: 13 // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\n        },\n\n        mode: 'side' // 显示模式，子节点只分布在根节点右侧\n      };\n\n      this.jm = jsMind.show(options, this.mind);\n      // 改变窗口大小重置画布\n      window.onresize = () => {\n        this.jm.resize();\n      };\n    },\n    save_nodearray_file() {\n      const mindData = this.jm.get_data('node_array');\n      const mindName = mindData.meta.name;\n      const mindStr = jsMind.util.json.json2string(mindData);\n      jsMind.util.file.save(mindStr, 'text/jsmind', mindName + '.jm');\n    },\n    screen_shot() {\n      this.jm.screenshot.shootDownload();\n    },\n    expand_all() {\n      this.jm.expand_all();\n    },\n    collapse_all() {\n      this.jm.collapse_all();\n    },\n    expand_to_level(num) {\n      switch (num) {\n        case -1:\n          this.collapse_all();\n          break;\n        case 0:\n          this.expand_all();\n          break;\n        default:\n          this.jm.expand_to_depth(num);\n          break;\n      }\n    },\n    zoomIn() {\n      if (this.jm.view.zoomIn()) {\n        this.isZoomOut = false;\n      } else {\n        this.isZoomIn = true;\n      }\n    },\n    zoomOut() {\n      if (this.jm.view.zoomOut()) {\n        this.isZoomIn = false;\n      } else {\n        this.isZoomOut = true;\n      }\n    },\n    prompt_info(msg) {\n      this.$message({\n        type: 'warning',\n        message: msg\n      });\n    },\n    get_nodearray_data() {\n      const mindData = this.jm.get_data('node_array');\n      const mindString = jsMind.util.json.json2string(mindData);\n      this.$message({\n        type: 'info',\n        message: mindString\n      });\n    },\n    set_theme(themeName) {\n      this.jm.set_theme(themeName);\n    },\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      this.jm.resize();\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener('domMouseScroll', this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 新增节点\n    addNode() {\n      let selectedNode = this.jm.get_selected_node();\n      if (!selectedNode) {\n        this.$message({\n          type: 'warning',\n          message: '请先选择一个节点!'\n        });\n        return;\n      }\n      let nodeid = jsMind.util.uuid.newid();\n      let topic = 'new Node';\n      let newNode = this.jm.add_node(selectedNode, nodeid, topic);\n      if (newNode) {\n        this.jm.select_node(nodeid);\n        this.jm.begin_edit(nodeid);\n      }\n    },\n    // 新增兄弟节点\n    addBrotherNode() {\n      let selectedNode = this.jm.get_selected_node();\n      if (!selectedNode) {\n        this.$message({\n          type: 'warning',\n          message: '请先选择一个节点!'\n        });\n        return;\n      } else if (selectedNode.isroot) {\n        this.$message({\n          type: 'warning',\n          message: '不能在根节点添加，请重新选择节点!'\n        });\n        return;\n      }\n      let nodeid = jsMind.util.uuid.newid();\n      let topic = 'new Node';\n      let newNode = this.jm.insert_node_after(selectedNode, nodeid, topic);\n      if (newNode) {\n        this.jm.select_node(nodeid);\n        this.jm.begin_edit(nodeid);\n      }\n    },\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      let selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    // 删除节点\n    removeNode() {\n      let selectedId = this.get_selected_nodeid();\n      if (!selectedId) {\n        this.$message({\n          type: 'warning',\n          message: '请先选择一个节点!'\n        });\n        return;\n      }\n      this.jm.remove_node(selectedId);\n    },\n    // 编辑节点\n    editNode() {\n      let selectedId = this.get_selected_nodeid();\n      if (!selectedId) {\n        this.$message({\n          type: 'warning',\n          message: '请先选择一个节点!'\n        });\n        return;\n      }\n      let nodeObj = this.jm.get_node(selectedId);\n      this.nodeOption.content = nodeObj.topic;\n      this.nodeOption.bgColor = nodeObj.data['background-color'];\n      this.nodeOption.fontColor = nodeObj.data['foreground-color'];\n      this.nodeOption.fontSize = nodeObj.data['font-size'];\n      this.nodeOption.fontWeight = nodeObj.data['font-weight'];\n      this.nodeOption.fontStyle = nodeObj.data['font-style'];\n      this.dialogVisible = true;\n    },\n    sureEditNode() {\n      let selectedId = this.get_selected_nodeid();\n      this.jm.update_node(selectedId, this.nodeOption.content);\n      this.jm.set_node_font_style(selectedId, this.nodeOption.fontSize, this.nodeOption.fontWeight, this.nodeOption.fontStyle);\n      this.jm.set_node_color(selectedId, this.nodeOption.bgColor, this.nodeOption.fontColor);\n      this.nodeOption = {\n        content: '',\n        bgColor: '',\n        fontColor: '',\n        fontSize: '',\n        fontWeight: '',\n        fontStyle: ''\n      };\n      this.dialogVisible = false;\n    }\n  },\n  beforeDestroy() {\n    document.removeEventListener('domMouseScroll', this.scrollFunc, false);\n  }\n};","map":{"version":3,"names":["jsMind","window","require","props","showBar","type","Boolean","default","theme","String","lineColor","data","mind","jm","isZoomIn","isZoomOut","level","nodeOptions","value","label","themeOptions","localTheme","dialogVisible","nodeOption","content","bgColor","fontColor","fontSize","fontWeight","fontStyle","created","mounted","getData","mouseWheel","methods","beforeUpload","file","util","read","jsmindData","json","string2json","show","$message","message","prompt_info","upload","$API","name","then","res","open_empty","catch","error","options","container","editable","view","line_width","line_color","shortcut","enable","layout","hspace","vspace","pspace","mode","onresize","resize","save_nodearray_file","mindData","get_data","mindName","meta","mindStr","json2string","save","screen_shot","screenshot","shootDownload","expand_all","collapse_all","expand_to_level","num","expand_to_depth","zoomIn","zoomOut","msg","get_nodearray_data","mindString","set_theme","themeName","scrollFunc","e","event","wheelDelta","detail","document","addEventListener","$refs","onmousewheel","addNode","selectedNode","get_selected_node","nodeid","uuid","newid","topic","newNode","add_node","select_node","begin_edit","addBrotherNode","isroot","insert_node_after","get_selected_nodeid","id","removeNode","selectedId","remove_node","editNode","nodeObj","get_node","sureEditNode","update_node","set_node_font_style","set_node_color","beforeDestroy","removeEventListener"],"sources":["src/components/nodeTree.vue"],"sourcesContent":["<template>\r\n    <!-- 普通菜单 -->\r\n    <div class=\"jsmind_layout\">\r\n      <div class=\"jsmind_toolbar\" v-if=\"showBar\">\r\n        <el-upload\r\n          class=\"pad\"\r\n          :multiple=\"false\"\r\n          ref=\"upload\"\r\n          action=\"action\"\r\n          :before-upload=\"beforeUpload\"\r\n          :http-request=\"upload\">\r\n          <el-button type=\"primary\" size=\"medium\">导入</el-button>\r\n        </el-upload>\r\n        <el-button @click=\"save_nodearray_file\" size=\"medium\">保存</el-button>\r\n        <el-button @click=\"screen_shot\" size=\"medium\">下载导图</el-button>\r\n        <el-button @click=\"get_nodearray_data\" size=\"medium\">获取数据</el-button>\r\n        <el-button @click=\"addNode\" size=\"medium\">新增节点</el-button>\r\n        <el-button @click=\"addBrotherNode\" size=\"medium\">新增兄弟节点</el-button>\r\n        <el-button @click=\"editNode\" size=\"medium\">编辑节点</el-button>\r\n        <el-button @click=\"removeNode\" size=\"medium\">删除节点</el-button>\r\n        <el-button @click=\"zoomIn\" size=\"medium\" :disabled=\"isZoomIn\">放大</el-button>\r\n        <el-button @click=\"zoomOut\" size=\"medium\" :disabled=\"isZoomOut\" class=\"pad\">缩小</el-button>\r\n        <span>展开：</span>\r\n        <el-select v-model=\"level\" placeholder=\"展开节点\" @change=\"expand_to_level\" class=\"pad pad-left\" size=\"medium\">\r\n          <el-option\r\n            v-for=\"item in nodeOptions\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n        <span>主题：</span>\r\n        <el-select v-model=\"localTheme\" placeholder=\"选择主题\" @change=\"set_theme\" size=\"medium\">\r\n          <el-option\r\n            v-for=\"item in themeOptions\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n      </div>\r\n      <div id=\"jsmind_container\" ref=\"container\">\r\n      </div>\r\n      <el-drawer\r\n        title=\"编辑节点\"\r\n        :visible.sync=\"dialogVisible\"\r\n        size=\"500px\">\r\n        <el-form label-width=\"80px\" class=\"form-con\">\r\n          <el-form-item label=\"字体大小\">\r\n            <el-input-number controls-position=\"right\" v-model.number=\"nodeOption.fontSize\" class=\"ele-width\" :min=\"1\" :max=\"30\" maxLength=\"2\"></el-input-number>\r\n          </el-form-item>\r\n          <el-form-item label=\"字体粗细\">\r\n            <el-select v-model=\"nodeOption.fontWeight\" class=\"ele-width\">\r\n              <el-option value=\"normal\" label=\"常规\"></el-option>\r\n              <el-option value=\"bold\" label=\"粗体\"></el-option>\r\n              <el-option value=\"bolder\" label=\"更粗\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"字体样式\">\r\n            <el-select v-model=\"nodeOption.fontStyle\" class=\"ele-width\">\r\n              <el-option value=\"normal\" label=\"标准\"></el-option>\r\n              <el-option value=\"italic\" label=\"斜体\"></el-option>\r\n              <el-option value=\"oblique\" label=\"倾斜\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-row>\r\n            <el-col :span=\"12\">\r\n              <el-form-item label=\"背景颜色\">\r\n                <el-color-picker v-model=\"nodeOption.bgColor\" show-alpha size=\"mini\"></el-color-picker>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <el-form-item label=\"字体颜色\">\r\n                <el-color-picker v-model=\"nodeOption.fontColor\" show-alpha size=\"mini\"></el-color-picker>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n          <el-form-item label=\"节点内容\">\r\n            <el-input type=\"textarea\" :rows=\"2\" v-model=\"nodeOption.content\" class=\"ele-width\" maxLength=\"64\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <template v-slot:footer>\r\n          <div class=\"right mr-10\">\r\n            <el-button type=\"primary\" class=\"common-btn\" @click=\"sureEditNode\" size=\"medium\">确 定</el-button>\r\n          </div>\r\n        </template>\r\n      </el-drawer>\r\n    </div>\r\n  </template>\r\n\r\n\r\n<script>\r\nimport 'jsmind/style/jsmind.css'\r\nimport jsMind from 'jsmind/js/jsmind.js'\r\nwindow.jsMind = jsMind\r\n\r\nrequire('jsmind/js/jsmind.draggable.js')\r\nrequire('jsmind/js/jsmind.screenshot.js')\r\nexport default {\r\n  props: {\r\n    showBar: { // 是否显示工具栏，显示启用编辑\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    theme: { // 主题\r\n      type: String,\r\n      default: 'info'\r\n    },\r\n    lineColor: { // 线条颜色\r\n      type: String,\r\n      default: 'skyblue'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      mind: {},\r\n      jm: null,\r\n      isZoomIn: false,\r\n      isZoomOut: false,\r\n      level: 0,\r\n      nodeOptions: [\r\n        { value: 1, label: '展开到一级节点' },\r\n        { value: 2, label: '展开到二级节点' },\r\n        { value: 3, label: '展开到三级节点' },\r\n        { value: 0, label: '展开全部节点' },\r\n        { value: -1, label: '隐藏全部节点' }\r\n      ],\r\n      themeOptions: [\r\n        { value: 'default', label: 'default' },\r\n        { value: 'primary', label: 'primary' },\r\n        { value: 'warning', label: 'warning' },\r\n        { value: 'danger', label: 'danger' },\r\n        { value: 'success', label: 'success' },\r\n        { value: 'info', label: 'info' },\r\n        { value: 'greensea', label: 'greensea' },\r\n        { value: 'nephrite', label: 'nephrite' },\r\n        { value: 'belizehole', label: 'belizehole' },\r\n        { value: 'wisteria', label: 'wisteria' },\r\n        { value: 'asphalt', label: 'asphalt' },\r\n        { value: 'orange', label: 'orange' },\r\n        { value: 'pumpkin', label: 'pumpkin' },\r\n        { value: 'pomegranate', label: 'pomegranate' },\r\n        { value: 'clouds', label: 'clouds' },\r\n        { value: 'asbestos', label: 'asbestos' }\r\n      ],\r\n      localTheme: this.theme,\r\n      dialogVisible: false,\r\n      nodeOption: {\r\n        content: '',\r\n        bgColor: '',\r\n        fontColor: '',\r\n        fontSize: '',\r\n        fontWeight: '',\r\n        fontStyle: ''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.getData()\r\n    this.mouseWheel()\r\n  },\r\n  methods: {\r\n    beforeUpload (file) { // 上传文件之前钩子\r\n      if (file) {\r\n        jsMind.util.file.read(file, (jsmindData) => {\r\n          const mind = jsMind.util.json.string2json(jsmindData)\r\n          if (mind) {\r\n            this.jm.show(mind)\r\n            this.$message({ type: 'success', message: '打开成功' })\r\n          } else {\r\n            this.prompt_info('不能打开mindmap文件')\r\n          }\r\n        })\r\n      } else {\r\n        this.prompt_info('请先选择文件')\r\n        return false\r\n      }\r\n    },\r\n    upload() {},\r\n    getData() {\r\n      this.$API({\r\n        name: 'getMind'\r\n      }).then(res => {\r\n        this.mind = res.data\r\n        this.open_empty()\r\n      }).catch(error => {\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    open_empty() {\r\n      const options = {\r\n        container: 'jsmind_container', // 必选，容器ID\r\n        editable: this.showBar, // 可选，是否启用编辑\r\n        theme: this.localTheme, // 可选，主题\r\n        view: {\r\n          line_width: 2, // 思维导图线条的粗细\r\n          line_color: this.lineColor // 思维导图线条的颜色\r\n        },\r\n        shortcut: {\r\n          enable: true // 禁用快捷键\r\n        },\r\n        layout: {\r\n          hspace: 50, // 节点之间的水平间距\r\n          vspace: 20, // 节点之间的垂直间距\r\n          pspace: 13 // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\r\n        },\r\n        mode: 'side' // 显示模式，子节点只分布在根节点右侧\r\n      }\r\n      this.jm = jsMind.show(options, this.mind)\r\n      // 改变窗口大小重置画布\r\n      window.onresize = () => {\r\n        this.jm.resize()\r\n      }\r\n    },\r\n    save_nodearray_file() {\r\n      const mindData = this.jm.get_data('node_array')\r\n      const mindName = mindData.meta.name\r\n      const mindStr = jsMind.util.json.json2string(mindData)\r\n      jsMind.util.file.save(mindStr, 'text/jsmind', mindName + '.jm')\r\n    },\r\n    screen_shot() {\r\n      this.jm.screenshot.shootDownload()\r\n    },\r\n    expand_all() {\r\n      this.jm.expand_all()\r\n    },\r\n    collapse_all() {\r\n      this.jm.collapse_all()\r\n    },\r\n    expand_to_level(num) {\r\n      switch (num) {\r\n        case -1:\r\n          this.collapse_all()\r\n          break\r\n        case 0:\r\n          this.expand_all()\r\n          break\r\n        default:\r\n          this.jm.expand_to_depth(num)\r\n          break\r\n      }\r\n    },\r\n    zoomIn() {\r\n      if (this.jm.view.zoomIn()) {\r\n        this.isZoomOut = false\r\n      } else {\r\n        this.isZoomIn = true\r\n      }\r\n    },\r\n    zoomOut() {\r\n      if (this.jm.view.zoomOut()) {\r\n        this.isZoomIn = false\r\n      } else {\r\n        this.isZoomOut = true\r\n      }\r\n    },\r\n    prompt_info(msg) {\r\n      this.$message({ type: 'warning', message: msg})\r\n    },\r\n    get_nodearray_data() {\r\n      const mindData = this.jm.get_data('node_array')\r\n      const mindString = jsMind.util.json.json2string(mindData)\r\n      this.$message({ type: 'info', message: mindString})\r\n    },\r\n    set_theme(themeName) {\r\n      this.jm.set_theme(themeName)\r\n    },\r\n    scrollFunc(e) {\r\n      e = e || window.event\r\n      if (e.wheelDelta) {\r\n        if (e.wheelDelta > 0) {\r\n          this.zoomIn()\r\n        } else {\r\n          this.zoomOut()\r\n        }\r\n      } else if (e.detail) {\r\n        if (e.detail > 0) {\r\n          this.zoomIn()\r\n        } else {\r\n          this.zoomOut()\r\n        }\r\n      }\r\n      this.jm.resize()\r\n    },\r\n    // 鼠标滚轮放大缩小\r\n    mouseWheel() {\r\n      if (document.addEventListener) {\r\n        document.addEventListener('domMouseScroll', this.scrollFunc, false)\r\n      }\r\n      this.$refs.container.onmousewheel = this.scrollFunc\r\n    },\r\n    // 新增节点\r\n    addNode() {\r\n      let selectedNode = this.jm.get_selected_node()\r\n      if (!selectedNode) {\r\n        this.$message({ type: 'warning', message: '请先选择一个节点!'})\r\n        return\r\n      }\r\n      let nodeid = jsMind.util.uuid.newid()\r\n      let topic = 'new Node'\r\n      let newNode = this.jm.add_node(selectedNode, nodeid, topic)\r\n      if (newNode) {\r\n        this.jm.select_node(nodeid)\r\n        this.jm.begin_edit(nodeid)\r\n      }\r\n    },\r\n    // 新增兄弟节点\r\n    addBrotherNode() {\r\n      let selectedNode = this.jm.get_selected_node()\r\n      if (!selectedNode) {\r\n        this.$message({ type: 'warning', message: '请先选择一个节点!'})\r\n        return\r\n      } else if (selectedNode.isroot) {\r\n        this.$message({ type: 'warning', message: '不能在根节点添加，请重新选择节点!'})\r\n        return\r\n      }\r\n      let nodeid = jsMind.util.uuid.newid()\r\n      let topic = 'new Node'\r\n      let newNode = this.jm.insert_node_after(selectedNode, nodeid, topic)\r\n      if (newNode) {\r\n        this.jm.select_node(nodeid)\r\n        this.jm.begin_edit(nodeid)\r\n      }\r\n    },\r\n    // 获取选中标签的 ID\r\n    get_selected_nodeid () {\r\n      let selectedNode = this.jm.get_selected_node()\r\n      if (selectedNode) {\r\n        return selectedNode.id\r\n      } else {\r\n        return null\r\n      }\r\n    },\r\n    // 删除节点\r\n    removeNode() {\r\n      let selectedId = this.get_selected_nodeid()\r\n      if (!selectedId) {\r\n        this.$message({\r\n          type: 'warning',\r\n          message: '请先选择一个节点!'\r\n        })\r\n        return\r\n      }\r\n      this.jm.remove_node(selectedId)\r\n    },\r\n    // 编辑节点\r\n    editNode () {\r\n      let selectedId = this.get_selected_nodeid()\r\n      if (!selectedId) {\r\n        this.$message({ type: 'warning', message: '请先选择一个节点!'})\r\n        return\r\n      }\r\n      let nodeObj = this.jm.get_node(selectedId)\r\n      this.nodeOption.content = nodeObj.topic\r\n      this.nodeOption.bgColor = nodeObj.data['background-color']\r\n      this.nodeOption.fontColor = nodeObj.data['foreground-color']\r\n      this.nodeOption.fontSize = nodeObj.data['font-size']\r\n      this.nodeOption.fontWeight = nodeObj.data['font-weight']\r\n      this.nodeOption.fontStyle = nodeObj.data['font-style']\r\n      this.dialogVisible = true\r\n    },\r\n    sureEditNode () {\r\n      let selectedId = this.get_selected_nodeid()\r\n      this.jm.update_node(selectedId, this.nodeOption.content)\r\n      this.jm.set_node_font_style(selectedId, this.nodeOption.fontSize, this.nodeOption.fontWeight, this.nodeOption.fontStyle)\r\n      this.jm.set_node_color(selectedId, this.nodeOption.bgColor, this.nodeOption.fontColor)\r\n      this.nodeOption = {\r\n        content: '',\r\n        bgColor: '',\r\n        fontColor: '',\r\n        fontSize: '',\r\n        fontWeight: '',\r\n        fontStyle: ''\r\n      }\r\n      this.dialogVisible = false\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('domMouseScroll', this.scrollFunc, false)\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.jsmind_layout {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n  overflow: hidden;\r\n  .jsmind_toolbar {\r\n    width: 100%;\r\n    padding: 0 10px 10px 10px;\r\n    height: auto;\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    background-color: #f8f9fa;\r\n    box-shadow: 0 0 4px #b8b8b8;\r\n  }\r\n  /deep/ .el-button--medium, /deep/ .el-input--medium {\r\n    margin-top: 10px;\r\n  }\r\n  #jsmind_container {\r\n    flex: 1 1 auto;\r\n  }\r\n  /deep/.jsmind-inner {\r\n    overflow: hidden auto !important;\r\n  }\r\n  /deep/.el-upload-list {\r\n    display: none !important;\r\n  }\r\n  /* 隐藏滚动条 */\r\n  .jsmind-inner::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  .pad {\r\n    margin-right: 10px;\r\n  }\r\n  .pad-left {\r\n    margin-left: 10px;\r\n  }\r\n  /deep/ jmnode.selected {\r\n    background-color: #b9b9b9;\r\n    color: #fff;\r\n    box-shadow: 2px 2px 8px #777;\r\n  }\r\n  /deep/ jmnode:hover {\r\n    box-shadow: 2px 2px 8px #777;\r\n  }\r\n  .form-con {\r\n    padding-top:20px;\r\n  }\r\n  .ele-width {\r\n    width: 96%;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}