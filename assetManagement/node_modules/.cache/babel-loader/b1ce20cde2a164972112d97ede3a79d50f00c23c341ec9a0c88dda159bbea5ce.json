{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      option: {\n        title: {\n          text: '上证指数',\n          left: 0\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        legend: {\n          data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']\n        },\n        grid: {\n          left: '10%',\n          right: '10%',\n          bottom: '15%'\n        },\n        xAxis: {\n          type: 'category',\n          data: data0.categoryData,\n          boundaryGap: false,\n          axisLine: {\n            onZero: false\n          },\n          splitLine: {\n            show: false\n          },\n          min: 'dataMin',\n          max: 'dataMax'\n        },\n        yAxis: {\n          scale: true,\n          splitArea: {\n            show: true\n          }\n        },\n        dataZoom: [{\n          type: 'inside',\n          start: 50,\n          end: 100\n        }, {\n          show: true,\n          type: 'slider',\n          top: '90%',\n          start: 50,\n          end: 100\n        }],\n        series: [{\n          name: '日K',\n          type: 'candlestick',\n          data: data0.values,\n          itemStyle: {\n            color: upColor,\n            color0: downColor,\n            borderColor: upBorderColor,\n            borderColor0: downBorderColor\n          },\n          markPoint: {\n            label: {\n              formatter: function (param) {\n                return param != null ? Math.round(param.value) + '' : '';\n              }\n            },\n            data: [{\n              name: 'Mark',\n              coord: ['2013/5/31', 2300],\n              value: 2300,\n              itemStyle: {\n                color: 'rgb(41,60,85)'\n              }\n            }, {\n              name: 'highest value',\n              type: 'max',\n              valueDim: 'highest'\n            }, {\n              name: 'lowest value',\n              type: 'min',\n              valueDim: 'lowest'\n            }, {\n              name: 'average value on close',\n              type: 'average',\n              valueDim: 'close'\n            }],\n            tooltip: {\n              formatter: function (param) {\n                return param.name + '<br>' + (param.data.coord || '');\n              }\n            }\n          },\n          markLine: {\n            symbol: ['none', 'none'],\n            data: [[{\n              name: 'from lowest to highest',\n              type: 'min',\n              valueDim: 'lowest',\n              symbol: 'circle',\n              symbolSize: 10,\n              label: {\n                show: false\n              },\n              emphasis: {\n                label: {\n                  show: false\n                }\n              }\n            }, {\n              type: 'max',\n              valueDim: 'highest',\n              symbol: 'circle',\n              symbolSize: 10,\n              label: {\n                show: false\n              },\n              emphasis: {\n                label: {\n                  show: false\n                }\n              }\n            }], {\n              name: 'min line on close',\n              type: 'min',\n              valueDim: 'close'\n            }, {\n              name: 'max line on close',\n              type: 'max',\n              valueDim: 'close'\n            }]\n          }\n        }, {\n          name: 'MA5',\n          type: 'line',\n          data: calculateMA(5),\n          smooth: true,\n          lineStyle: {\n            opacity: 0.5\n          }\n        }, {\n          name: 'MA10',\n          type: 'line',\n          data: calculateMA(10),\n          smooth: true,\n          lineStyle: {\n            opacity: 0.5\n          }\n        }, {\n          name: 'MA20',\n          type: 'line',\n          data: calculateMA(20),\n          smooth: true,\n          lineStyle: {\n            opacity: 0.5\n          }\n        }, {\n          name: 'MA30',\n          type: 'line',\n          data: calculateMA(30),\n          smooth: true,\n          lineStyle: {\n            opacity: 0.5\n          }\n        }]\n      }\n    };\n  },\n  components: {},\n  mounted() {\n    //测试二\n    let chartTest2 = this.$echarts.init(document.getElementById(\"chart-test2\"), 'dark');\n    //初始化数据\n    let test2_Data = [];\n    for (let i = 0; i < 10; ++i) {\n      test2_Data.push(Math.round(Math.random() * 200));\n    }\n    this.testOption2.series[0].data = test2_Data; //初始化数据\n    chartTest2.setOption(this.testOption2); //初始化图表\n\n    let that = this;\n    setTimeout(function () {\n      that.getData();\n    }, 0);\n    setInterval(function () {\n      that.getData();\n    }, 3000);\n  },\n  methods: {\n    //模拟获取数据\n    getData() {\n      let chartTest2 = this.$echarts.init(document.getElementById(\"chart-test2\"), 'dark');\n      var data = this.testOption2.series[0].data;\n      for (var i = 0; i < data.length; ++i) {\n        if (Math.random() > 0.9) {\n          data[i] += Math.round(Math.random() * 2000);\n        } else {\n          data[i] += Math.round(Math.random() * 200);\n        }\n      }\n      this.testOption2.series[0].data = data;\n      chartTest2.setOption(this.testOption2); //得到数据后重新渲染图表\n    }\n  }\n};","map":{"version":3,"names":["data","option","title","text","left","tooltip","trigger","axisPointer","type","legend","grid","right","bottom","xAxis","data0","categoryData","boundaryGap","axisLine","onZero","splitLine","show","min","max","yAxis","scale","splitArea","dataZoom","start","end","top","series","name","values","itemStyle","color","upColor","color0","downColor","borderColor","upBorderColor","borderColor0","downBorderColor","markPoint","label","formatter","param","Math","round","value","coord","valueDim","markLine","symbol","symbolSize","emphasis","calculateMA","smooth","lineStyle","opacity","components","mounted","chartTest2","$echarts","init","document","getElementById","test2_Data","i","push","random","testOption2","setOption","that","setTimeout","getData","setInterval","methods","length"],"sources":["src/views/test2.vue"],"sourcesContent":["<template>\r\n  <div id=\"chart-test2\" :style=\"{ height: '500px',width:'1000px'}\"></div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n      data() {\r\n          return {\r\n            option:{\r\n  title: {\r\n    text: '上证指数',\r\n    left: 0\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: {\r\n      type: 'cross'\r\n    }\r\n  },\r\n  legend: {\r\n    data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']\r\n  },\r\n  grid: {\r\n    left: '10%',\r\n    right: '10%',\r\n    bottom: '15%'\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: data0.categoryData,\r\n    boundaryGap: false,\r\n    axisLine: { onZero: false },\r\n    splitLine: { show: false },\r\n    min: 'dataMin',\r\n    max: 'dataMax'\r\n  },\r\n  yAxis: {\r\n    scale: true,\r\n    splitArea: {\r\n      show: true\r\n    }\r\n  },\r\n  dataZoom: [\r\n    {\r\n      type: 'inside',\r\n      start: 50,\r\n      end: 100\r\n    },\r\n    {\r\n      show: true,\r\n      type: 'slider',\r\n      top: '90%',\r\n      start: 50,\r\n      end: 100\r\n    }\r\n  ],\r\n  series: [\r\n    {\r\n      name: '日K',\r\n      type: 'candlestick',\r\n      data: data0.values,\r\n      itemStyle: {\r\n        color: upColor,\r\n        color0: downColor,\r\n        borderColor: upBorderColor,\r\n        borderColor0: downBorderColor\r\n      },\r\n      markPoint: {\r\n        label: {\r\n          formatter: function (param) {\r\n            return param != null ? Math.round(param.value) + '' : '';\r\n          }\r\n        },\r\n        data: [\r\n          {\r\n            name: 'Mark',\r\n            coord: ['2013/5/31', 2300],\r\n            value: 2300,\r\n            itemStyle: {\r\n              color: 'rgb(41,60,85)'\r\n            }\r\n          },\r\n          {\r\n            name: 'highest value',\r\n            type: 'max',\r\n            valueDim: 'highest'\r\n          },\r\n          {\r\n            name: 'lowest value',\r\n            type: 'min',\r\n            valueDim: 'lowest'\r\n          },\r\n          {\r\n            name: 'average value on close',\r\n            type: 'average',\r\n            valueDim: 'close'\r\n          }\r\n        ],\r\n        tooltip: {\r\n          formatter: function (param) {\r\n            return param.name + '<br>' + (param.data.coord || '');\r\n          }\r\n        }\r\n      },\r\n      markLine: {\r\n        symbol: ['none', 'none'],\r\n        data: [\r\n          [\r\n            {\r\n              name: 'from lowest to highest',\r\n              type: 'min',\r\n              valueDim: 'lowest',\r\n              symbol: 'circle',\r\n              symbolSize: 10,\r\n              label: {\r\n                show: false\r\n              },\r\n              emphasis: {\r\n                label: {\r\n                  show: false\r\n                }\r\n              }\r\n            },\r\n            {\r\n              type: 'max',\r\n              valueDim: 'highest',\r\n              symbol: 'circle',\r\n              symbolSize: 10,\r\n              label: {\r\n                show: false\r\n              },\r\n              emphasis: {\r\n                label: {\r\n                  show: false\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          {\r\n            name: 'min line on close',\r\n            type: 'min',\r\n            valueDim: 'close'\r\n          },\r\n          {\r\n            name: 'max line on close',\r\n            type: 'max',\r\n            valueDim: 'close'\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      name: 'MA5',\r\n      type: 'line',\r\n      data: calculateMA(5),\r\n      smooth: true,\r\n      lineStyle: {\r\n        opacity: 0.5\r\n      }\r\n    },\r\n    {\r\n      name: 'MA10',\r\n      type: 'line',\r\n      data: calculateMA(10),\r\n      smooth: true,\r\n      lineStyle: {\r\n        opacity: 0.5\r\n      }\r\n    },\r\n    {\r\n      name: 'MA20',\r\n      type: 'line',\r\n      data: calculateMA(20),\r\n      smooth: true,\r\n      lineStyle: {\r\n        opacity: 0.5\r\n      }\r\n    },\r\n    {\r\n      name: 'MA30',\r\n      type: 'line',\r\n      data: calculateMA(30),\r\n      smooth: true,\r\n      lineStyle: {\r\n        opacity: 0.5\r\n      }\r\n    }\r\n  ]\r\n}\r\n          };\r\n      },\r\n      components: {},\r\n      mounted() {\r\n          //测试二\r\n          let chartTest2 = this.$echarts.init(document.getElementById(\"chart-test2\"), 'dark');\r\n          //初始化数据\r\n          let test2_Data = [];\r\n          for (let i = 0; i < 10; ++i) {\r\n              test2_Data.push(Math.round(Math.random() * 200));\r\n          }\r\n          this.testOption2.series[0].data = test2_Data //初始化数据\r\n          chartTest2.setOption(this.testOption2) //初始化图表\r\n\r\n          let that = this;\r\n          setTimeout(function() {\r\n              that.getData();\r\n          }, 0);\r\n          setInterval(function() {\r\n              that.getData();\r\n          }, 3000);\r\n      },\r\n      methods: {\r\n          //模拟获取数据\r\n          getData() {\r\n              let chartTest2 = this.$echarts.init(document.getElementById(\"chart-test2\"), 'dark');\r\n              var data = this.testOption2.series[0].data;\r\n              for (var i = 0; i < data.length; ++i) {\r\n                  if (Math.random() > 0.9) {\r\n                      data[i] += Math.round(Math.random() * 2000);\r\n                  } else {\r\n                      data[i] += Math.round(Math.random() * 200);\r\n                  }\r\n              }\r\n              this.testOption2.series[0].data = data\r\n              chartTest2.setOption(this.testOption2); //得到数据后重新渲染图表\r\n          }\r\n      }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}