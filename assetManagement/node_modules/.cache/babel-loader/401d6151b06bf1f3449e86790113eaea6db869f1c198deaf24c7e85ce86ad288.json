{"ast":null,"code":"import axios from \"axios\";\nimport highlightabletextarea from \"../components/highlight.vue\";\nexport default {\n  /*\r\n  computed: {\r\n  highlightedContent() {\r\n  //const highlightedText='';\r\n  if (this.copiedContent && this.textareaContent) {\r\n    // 将 copiedContent 中的匹配项高亮显示\r\n    const  highlightedText = this.copiedContent.replace(\r\n      new RegExp(this.textareaContent, 'gi'),\r\n      match => `<span class=\"highlight\">${match}</span>`\r\n    );\r\n    console.log(highlightedText);\r\n    return highlightedText;\r\n  }\r\n  console.log(\"1111\"+this.copiedContent)\r\n  //  console.log(highlightedText)\r\n  return this.copiedContent;\r\n  }\r\n  },\r\n  */\n\n  computed: {\n    highlightedParts() {\n      if (this.copiedContent && this.textareaContent) {\n        const parts = this.copiedContent.split(new RegExp(`(${this.textareaContent})`, 'gi'));\n        return parts.map(part => ({\n          content: part,\n          isHighlighted: part.toLowerCase() === this.textareaContent.toLowerCase()\n        }));\n      }\n      return [{\n        content: this.copiedContent,\n        isHighlighted: false\n      }];\n    }\n  },\n  components: {\n    highlightableTExtarea: highlightabletextarea\n  },\n  data() {\n    return {\n      showOutput: false,\n      showInput: true,\n      testw: '',\n      textareaContent: '',\n      copiedContent: ''\n    };\n  },\n  methods: {\n    triggerFileInput() {\n      // 使用 ref 获取 input 元素的引用\n      const fileInput = this.$refs.fileInput;\n      // 触发 input 元素的点击事件\n      fileInput.click();\n    },\n    handIn() {\n      console.log(this.textareaContent);\n      //this.copiedContent=this.textareaContent;\n      this.textareaContent = \"上调事件\";\n      this.copiedContent = \"这是上调事件qwfegdgf上调事件\";\n      console.log(this.textareaContent);\n      console.log(this.copiedContent);\n      /*\r\n      axios\r\n            .post(\"http://localhost:8086/share\", {\r\n              data:this.textareaContent,\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length) {\r\n              }\r\n              console.log(response.data);\r\n            \r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n            */\n      console.log(\"ooo\");\n      this.testw = \"ooooo\";\n      this.highlightText();\n      this.showOutput = true;\n      this.showInput = false;\n    },\n    handleFileChange(event) {\n      const selectedFile = event.target.files[0];\n      if (selectedFile) {\n        this.readFileContent(selectedFile);\n      }\n    },\n    readFileContent(file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        this.textareaContent = event.target.result;\n      };\n      reader.readAsText(file);\n    },\n    handleFileChange2(file, fileList) {\n      // 在这里处理文件选择逻辑\n      // file 是选中的文件对象，fileList 是文件列表数组\n      console.log('Selected file:', file);\n    },\n    highlightText() {\n      return '上调时间';\n    }\n  }\n};","map":{"version":3,"names":["axios","highlightabletextarea","computed","highlightedParts","copiedContent","textareaContent","parts","split","RegExp","map","part","content","isHighlighted","toLowerCase","components","highlightableTExtarea","data","showOutput","showInput","testw","methods","triggerFileInput","fileInput","$refs","click","handIn","console","log","highlightText","handleFileChange","event","selectedFile","target","files","readFileContent","file","reader","FileReader","onload","result","readAsText","handleFileChange2","fileList"],"sources":["src/components/text2.vue"],"sourcesContent":["<template>\r\n    <div class=\"Table\">\r\n<div class=\"headPart\">\r\n        <div class=\"title3\" >文本内容</div>\r\n      \r\n        <div class=\"button-container\">\r\n      <el-button slot=\"trigger\" type=\"primary\" @click=\"handIn\" class=\"chooseButton\">事件抽取</el-button>\r\n      <el-button type=\"primary\" @click=\"triggerFileInput\" class=\"handInButton\">上传文件</el-button>\r\n    </div>\r\n      </div>\r\n    <input type=\"file\" @change=\"handleFileChange\" ref=\"fileInput\"  class=\"hidden-input\">\r\n <!--   <p v-html=\"testw\" class=\"highlighted\"></p>-->\r\n<!-- <div class=\"output-div\" v-html=\"highlightedContent\"></div>-->\r\n\r\n<div v-if=\"showOutput\" class=\" same output-div\">\r\n      <span v-for=\"highlightedPart in highlightedParts\" :key=\"highlightedPart\">\r\n        <span v-if=\"highlightedPart.isHighlighted\" class=\"highlight\">{{ highlightedPart.content }}</span>\r\n        <span v-else>{{ highlightedPart.content }}</span>\r\n      </span>\r\n    </div>\r\n        <div class=\" same input-container\" v-if=\"showInput\">\r\n            <textarea class=\"product-input2\"   style=\"overflow:visible\" placeholder=\"Enter something\"  v-model=\"textareaContent\" @input=\"highlightText\"></textarea>\r\n            \r\n         \r\n  </div>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    import axios from \"axios\";\r\n    import highlightabletextarea from  \"../components/highlight.vue\";\r\n    export default {\r\n      /*\r\n      computed: {\r\n    highlightedContent() {\r\n      //const highlightedText='';\r\n      if (this.copiedContent && this.textareaContent) {\r\n        // 将 copiedContent 中的匹配项高亮显示\r\n        const  highlightedText = this.copiedContent.replace(\r\n          new RegExp(this.textareaContent, 'gi'),\r\n          match => `<span class=\"highlight\">${match}</span>`\r\n        );\r\n        console.log(highlightedText);\r\n        return highlightedText;\r\n      }\r\n      console.log(\"1111\"+this.copiedContent)\r\n    //  console.log(highlightedText)\r\n      return this.copiedContent;\r\n    }\r\n  },\r\n\r\n  */\r\n\r\n  computed: {\r\n    highlightedParts() {\r\n      if (this.copiedContent && this.textareaContent) {\r\n        const parts = this.copiedContent.split(new RegExp(`(${this.textareaContent})`, 'gi'));\r\n        return parts.map(part => ({\r\n          content: part,\r\n          isHighlighted: part.toLowerCase() === this.textareaContent.toLowerCase()\r\n        }));\r\n      }\r\n      return [{ content: this.copiedContent, isHighlighted: false }];\r\n    }\r\n  },\r\n      components:{\r\n        highlightableTExtarea:highlightabletextarea,\r\n\r\n      },\r\n        data() {\r\n    return {\r\n      showOutput: false,\r\n      showInput: true,\r\n      testw:'',\r\n      textareaContent: '',\r\n      copiedContent: ''\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    triggerFileInput() {\r\n      // 使用 ref 获取 input 元素的引用\r\n      const fileInput = this.$refs.fileInput;\r\n      // 触发 input 元素的点击事件\r\n      fileInput.click();\r\n    },\r\n    handIn(){\r\n      \r\n      console.log(this.textareaContent)\r\n      //this.copiedContent=this.textareaContent;\r\n      this.textareaContent=\"上调事件\"\r\n      this.copiedContent=\"这是上调事件qwfegdgf上调事件\"\r\n      console.log(this.textareaContent);\r\n      console.log(this.copiedContent)\r\n      /*\r\n    axios\r\n            .post(\"http://localhost:8086/share\", {\r\n              data:this.textareaContent,\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length) {\r\n              }\r\n              console.log(response.data);\r\n            \r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n            */\r\n           console.log(\"ooo\");\r\n           this.testw=\"ooooo\";\r\n            this.highlightText();\r\n            this.showOutput = true;\r\n      this.showInput = false;\r\n          },\r\n    handleFileChange(event) {\r\n      const selectedFile = event.target.files[0];\r\n      if (selectedFile) {\r\n        this.readFileContent(selectedFile);\r\n      }\r\n    },\r\n    readFileContent(file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        this.textareaContent = event.target.result;\r\n      };\r\n      reader.readAsText(file);\r\n    },\r\n\r\n    handleFileChange2(file, fileList) {\r\n      // 在这里处理文件选择逻辑\r\n      // file 是选中的文件对象，fileList 是文件列表数组\r\n      console.log('Selected file:', file);\r\n    },\r\n\r\n    highlightText() {\r\n      return '上调时间';\r\n    }\r\n  }\r\n\r\n    \r\n    }\r\n    </script>\r\n    \r\n    \r\n    <style lang=\"less\">\r\n\r\n.highlight {\r\n  background-color: rgb(246, 0, 135); /* 设置高亮文本的背景色 */\r\n  color:white;\r\n}\r\n\r\n.headPart{\r\n  //position: absolute;\r\n  \r\n  //margin-top:20px;\r\n  width:100%;\r\n  height:50px;\r\n  display: flex;\r\n  align-items: flex-end; /* 底部对齐 */\r\n // border-bottom: 2px dashed #b4aeae; /* 下边框样式 */\r\n  align-items: center; /* 垂直居中对齐 */\r\n  justify-content: space-between; /* 水平两端对齐 */\r\n}\r\n.button-container {\r\n  display: flex;\r\n  align-items: center; /* 垂直居中对齐 */\r\n  gap: 10px; /* 按钮之间的水平间距 */\r\n  margin-left: 850px;\r\n  margin-top: 40px;\r\n}\r\n.chooseButton3{\r\n  position: relative;\r\n  //height:30px;\r\n // top:18px;\r\n  right: 0;\r\n // bottom:0;\r\n  margin-right: 150px;\r\n//  margin-bottom: auto;\r\n  //background-color: rgb(255, 255, 255);\r\n  margin-top:10px;\r\n}\r\n\r\n.handInButton {\r\n  position: relative;\r\n  //height:30px;\r\n // top:18px;\r\n  right: 0;\r\n  margin-right: 100px;\r\n // margin-bottom: auto;\r\n  //background-color: rgb(255, 255, 255);\r\n}\r\n\r\n\r\n .same{\r\n  display: flex;\r\n  justify-content: center; /* 水平居中 */\r\n  margin-top: 20px;\r\n }\r\n .input-container {\r\n  display: flex;\r\n  justify-content: center; /* 水平居中 */\r\n  margin-top: 20px;\r\n}\r\n\r\n.product-input2 {\r\n  width: 90%; /* 设置宽度，根据实际需求调整 */\r\n  height:270px;\r\n  padding: 10px;\r\n  //top:10%;\r\n  resize: none; /* 禁止调整大小 */\r\n  overflow-y: auto; /* 允许垂直滚动条 */\r\n//  style=\"overflow-y:visible\"纵向的滚动条\r\n  border: none;\r\n//  border: 1px solid #b5b3b3;\r\n}\r\n\r\n.hidden-input {\r\n  display: none;\r\n}\r\n.title3{\r\n  display: flex;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 10px;\r\n margin-bottom: auto;\r\n // display: flex;\r\n // align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n\r\n\r\n      </style>"],"mappings":"AA6BA,OAAAA,KAAA;AACA,OAAAC,qBAAA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAIAC,QAAA;IACAC,iBAAA;MACA,SAAAC,aAAA,SAAAC,eAAA;QACA,MAAAC,KAAA,QAAAF,aAAA,CAAAG,KAAA,KAAAC,MAAA,UAAAH,eAAA;QACA,OAAAC,KAAA,CAAAG,GAAA,CAAAC,IAAA;UACAC,OAAA,EAAAD,IAAA;UACAE,aAAA,EAAAF,IAAA,CAAAG,WAAA,YAAAR,eAAA,CAAAQ,WAAA;QACA;MACA;MACA;QAAAF,OAAA,OAAAP,aAAA;QAAAQ,aAAA;MAAA;IACA;EACA;EACAE,UAAA;IACAC,qBAAA,EAAAd;EAEA;EACAe,KAAA;IACA;MACAC,UAAA;MACAC,SAAA;MACAC,KAAA;MACAd,eAAA;MACAD,aAAA;IACA;EACA;EAEAgB,OAAA;IACAC,iBAAA;MACA;MACA,MAAAC,SAAA,QAAAC,KAAA,CAAAD,SAAA;MACA;MACAA,SAAA,CAAAE,KAAA;IACA;IACAC,OAAA;MAEAC,OAAA,CAAAC,GAAA,MAAAtB,eAAA;MACA;MACA,KAAAA,eAAA;MACA,KAAAD,aAAA;MACAsB,OAAA,CAAAC,GAAA,MAAAtB,eAAA;MACAqB,OAAA,CAAAC,GAAA,MAAAvB,aAAA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;MACAsB,OAAA,CAAAC,GAAA;MACA,KAAAR,KAAA;MACA,KAAAS,aAAA;MACA,KAAAX,UAAA;MACA,KAAAC,SAAA;IACA;IACAW,iBAAAC,KAAA;MACA,MAAAC,YAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,IAAAF,YAAA;QACA,KAAAG,eAAA,CAAAH,YAAA;MACA;IACA;IACAG,gBAAAC,IAAA;MACA,MAAAC,MAAA,OAAAC,UAAA;MACAD,MAAA,CAAAE,MAAA,GAAAR,KAAA;QACA,KAAAzB,eAAA,GAAAyB,KAAA,CAAAE,MAAA,CAAAO,MAAA;MACA;MACAH,MAAA,CAAAI,UAAA,CAAAL,IAAA;IACA;IAEAM,kBAAAN,IAAA,EAAAO,QAAA;MACA;MACA;MACAhB,OAAA,CAAAC,GAAA,mBAAAQ,IAAA;IACA;IAEAP,cAAA;MACA;IACA;EACA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}