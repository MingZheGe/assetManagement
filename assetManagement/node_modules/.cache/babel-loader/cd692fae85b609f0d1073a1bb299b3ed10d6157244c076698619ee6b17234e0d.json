{"ast":null,"code":"import axios from \"axios\";\nimport highlightabletextarea from \"../components/highlight.vue\";\nexport default {\n  computed: {\n    highlightedParts() {\n      if (this.copiedContent && this.textareaContent) {\n        const parts = this.copiedContent.split(new RegExp(`(${this.textareaContent})`, 'gi'));\n        return parts.map(part => ({\n          content: part,\n          isHighlighted: part.toLowerCase() === this.textareaContent.toLowerCase()\n        }));\n      }\n      return [{\n        content: this.copiedContent,\n        isHighlighted: false\n      }];\n    }\n  },\n  components: {\n    highlightableTExtarea: highlightabletextarea\n  },\n  data() {\n    return {\n      result_text_show: '学校查获禁止垃圾食品，并进行了检查。',\n      showOutput: false,\n      showInput: true,\n      testw: '',\n      textareaContent: '',\n      copiedContent: '',\n      EventType: '',\n      highlightedOutput: []\n    };\n  },\n  methods: {\n    getStringColorReplace() {\n      var show_text = this.textareaContent;\n      console.log(show_text);\n      var replace_text = [\"3月30日\", \"杭州百凯生物医药有限公司\", \"TROP-2\"];\n      var color_dict = {\n        \"3月30日\": \"#f60087\",\n        \"杭州百凯生物医药有限公司\": \"rgb(255,224,129)\",\n        \"TROP-2\": \"rgb(247,151,103)\"\n      };\n      for (var i = 0; i < replace_text.length; i++) {\n        var color_temp = color_dict[replace_text[i]];\n        console.log(\"000\" + color_temp);\n        var replaceString = '<span style=\"color: white; background-color: ' + color_temp + ';\">' + replace_text[i] + \"</span>\";\n        console.log(replaceString);\n        show_text = show_text.replace(RegExp(replace_text[i], 'g'), replaceString);\n      }\n      this.result_text_show = show_text;\n    },\n    triggerFileInput() {\n      // 使用 ref 获取 input 元素的引用\n      const fileInput = this.$refs.fileInput;\n      // 触发 input 元素的点击事件\n      fileInput.click();\n    },\n    handIn() {\n      console.log(this.textareaContent);\n      //this.copiedContent=this.textareaContent;\n      // this.textareaContent=\"TROP-2\"\n      //this.copiedContent=\"这是上调事件qwfegdgf3月30日\"\n      this.copiedContent = \"3月30日，杭州百凯生物医药有限公司（以下称“百凯医药”）宣布其靶向TROP-2的创新抗体偶联药物（ADC）BIO-106的1期临床试验申请（IND）获得美国FDA批准。同日，百凯医药在美国正式启动该临床研究。TROP-2全称为人滋养细胞表面抗原。研究发现，TROP-2在各种人类上皮癌中高度表达，\"; //包括乳腺癌、肺癌、胃癌、结直肠癌、胰腺癌、前列腺癌、宫颈癌、头颈癌和卵巢癌等。TROP-2的过表达在肿瘤生长过程中起着关键作用。在乳腺癌等几种癌症中，TROP-2的高表达还被发现与更具侵袭性的疾病和预后不良相关。例如，在浸润性导管癌乳腺癌患者中，TROP-2 mRNA表达的增加是生存期较差和淋巴结转移的强预测因子。此外，研究还显示，TROP-2高表达的乳腺癌患者生存期明显较短。\"\n\n      this.EventType = \"获批事件\";\n      console.log(this.textareaContent);\n      console.log(this.copiedContent);\n      this.getStringColorReplace();\n      /*\r\n      axios\r\n            .post(\"http://localhost:8086/share\", {\r\n              data:this.textareaContent,\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length) {\r\n              }\r\n              console.log(response.data);\r\n            \r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n            */\n      console.log(\"ooo\");\n      this.testw = \"ooooo\";\n      //  this.highlightText();\n      this.showOutput = true;\n      this.showInput = false;\n      this.getStringColorReplace();\n    },\n    handleFileChange(event) {\n      const selectedFile = event.target.files[0];\n      if (selectedFile) {\n        this.readFileContent(selectedFile);\n      }\n    },\n    readFileContent(file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        this.textareaContent = event.target.result;\n      };\n      reader.readAsText(file);\n    },\n    handleFileChange2(file, fileList) {\n      // 在这里处理文件选择逻辑\n      // file 是选中的文件对象，fileList 是文件列表数组\n      console.log('Selected file:', file);\n    },\n    highlightText() {\n      return '上调时间';\n    }\n  }\n};","map":{"version":3,"names":["axios","highlightabletextarea","computed","highlightedParts","copiedContent","textareaContent","parts","split","RegExp","map","part","content","isHighlighted","toLowerCase","components","highlightableTExtarea","data","result_text_show","showOutput","showInput","testw","EventType","highlightedOutput","methods","getStringColorReplace","show_text","console","log","replace_text","color_dict","i","length","color_temp","replaceString","replace","triggerFileInput","fileInput","$refs","click","handIn","handleFileChange","event","selectedFile","target","files","readFileContent","file","reader","FileReader","onload","result","readAsText","handleFileChange2","fileList","highlightText"],"sources":["src/components/text2.vue"],"sourcesContent":["<template>\r\n    <div class=\"Table\">\r\n<div class=\"headPart\">\r\n    \r\n      <div class=\"titleElement\" >\r\n        当前论元角色：\r\n      </div>\r\n      <div class=\"highlighted-output\">\r\n      <span v-for=\"highlightedPart in highlightedParts\" :key=\"highlightedPart\">\r\n      <span v-if=\"highlightedPart.isHighlighted\" class=\"highlight\">{{ highlightedPart.content }}</span>\r\n      </span>\r\n    </div>\r\n  <div class=\"titleEvent\" >当前事件类型：{{ this.EventType }}</div>\r\n        <div class=\"title3\" >文本内容</div>\r\n      \r\n        <div class=\"button-container\">\r\n      <el-button slot=\"trigger\" type=\"primary\" @click=\"handIn\" class=\"chooseButton\">事件抽取</el-button>\r\n      <el-button type=\"primary\" @click=\"triggerFileInput\" class=\"handInButton\">上传文件</el-button>\r\n    </div>\r\n      </div>\r\n    <input type=\"file\" @change=\"handleFileChange\" ref=\"fileInput\"  class=\"hidden-input\">\r\n <!--   <p v-html=\"testw\" class=\"highlighted\"></p>-->\r\n<!-- <div class=\"output-div\" v-html=\"highlightedContent\"></div>-->\r\n\r\n\r\n<div v-if=\"showOutput\" style=\" white-space: pre-line;\" class=\"same output-div\">\r\n        <div v-html=\"result_text_show\"></div>\r\n    </div>\r\n\r\n<!--\r\n<div v-if=\"showOutput\" class=\" same output-div\">\r\n      <span v-for=\"highlightedPart in highlightedParts\" :key=\"highlightedPart\">\r\n        <span v-if=\"highlightedPart.isHighlighted\" class=\"highlight\">{{ highlightedPart.content }}</span>\r\n        <span v-else>{{ highlightedPart.content }}</span>\r\n      </span>\r\n    </div>\r\n  -->\r\n        <div class=\" same input-container\" v-if=\"showInput\">\r\n            <textarea class=\"product-input2\"   style=\"overflow:visible\" placeholder=\"Enter something\"  v-model=\"textareaContent\" @input=\"highlightText\"></textarea>\r\n            \r\n         \r\n  </div>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    import axios from \"axios\";\r\n    import highlightabletextarea from  \"../components/highlight.vue\";\r\n    export default {\r\n   \r\n\r\n\r\n  computed: {\r\n    highlightedParts() {\r\n      if (this.copiedContent && this.textareaContent) {\r\n        const parts = this.copiedContent.split(new RegExp(`(${this.textareaContent})`, 'gi'));\r\n        return parts.map(part => ({\r\n          content: part,\r\n          isHighlighted: part.toLowerCase() === this.textareaContent.toLowerCase()\r\n\r\n          \r\n        }));\r\n      }\r\n      return [{ content: this.copiedContent, isHighlighted: false }];\r\n    }\r\n  },\r\n      components:{\r\n        highlightableTExtarea:highlightabletextarea,\r\n\r\n      },\r\n        data() {\r\n    return {\r\n      result_text_show:'学校查获禁止垃圾食品，并进行了检查。',\r\n      showOutput: false,\r\n      showInput: true,\r\n      testw:'',\r\n      textareaContent: '',\r\n      copiedContent: '',\r\n      EventType:'',\r\n      highlightedOutput: [],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    getStringColorReplace() {\r\n                var show_text=this.textareaContent;\r\n                console.log(show_text)\r\n                var replace_text= [\"3月30日\",\"杭州百凯生物医药有限公司\",\"TROP-2\"]\r\n                var color_dict = {\"3月30日\":\"#f60087\",\"杭州百凯生物医药有限公司\":\"rgb(255,224,129)\",\"TROP-2\":\"rgb(247,151,103)\"}\r\n                for(var i=0;i<replace_text.length;i++){ \r\n                    var color_temp = color_dict[replace_text[i]];\r\n                    console.log(\"000\"+color_temp);\r\n                    var replaceString = '<span style=\"color: white; background-color: ' + color_temp + ';\">' + replace_text[i] + \"</span>\";\r\n                    console.log(replaceString);\r\n                    show_text = show_text.replace(RegExp(replace_text[i],'g') ,replaceString);\r\n                }\r\n                this.result_text_show = show_text;\r\n            },\r\n\r\n    triggerFileInput() {\r\n      // 使用 ref 获取 input 元素的引用\r\n      const fileInput = this.$refs.fileInput;\r\n      // 触发 input 元素的点击事件\r\n      fileInput.click();\r\n    },\r\n    handIn(){\r\n      \r\n      console.log(this.textareaContent)\r\n      //this.copiedContent=this.textareaContent;\r\n     // this.textareaContent=\"TROP-2\"\r\n      //this.copiedContent=\"这是上调事件qwfegdgf3月30日\"\r\n    this.copiedContent= \"3月30日，杭州百凯生物医药有限公司（以下称“百凯医药”）宣布其靶向TROP-2的创新抗体偶联药物（ADC）BIO-106的1期临床试验申请（IND）获得美国FDA批准。同日，百凯医药在美国正式启动该临床研究。TROP-2全称为人滋养细胞表面抗原。研究发现，TROP-2在各种人类上皮癌中高度表达，\"//包括乳腺癌、肺癌、胃癌、结直肠癌、胰腺癌、前列腺癌、宫颈癌、头颈癌和卵巢癌等。TROP-2的过表达在肿瘤生长过程中起着关键作用。在乳腺癌等几种癌症中，TROP-2的高表达还被发现与更具侵袭性的疾病和预后不良相关。例如，在浸润性导管癌乳腺癌患者中，TROP-2 mRNA表达的增加是生存期较差和淋巴结转移的强预测因子。此外，研究还显示，TROP-2高表达的乳腺癌患者生存期明显较短。\"\r\n\r\n      this.EventType=\"获批事件\"\r\n      console.log(this.textareaContent);\r\n      console.log(this.copiedContent)\r\n      this.getStringColorReplace();\r\n      /*\r\n    axios\r\n            .post(\"http://localhost:8086/share\", {\r\n              data:this.textareaContent,\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length) {\r\n              }\r\n              console.log(response.data);\r\n            \r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n            */\r\n           console.log(\"ooo\");\r\n           this.testw=\"ooooo\";\r\n          //  this.highlightText();\r\n            this.showOutput = true;\r\n      this.showInput = false;\r\n      this.getStringColorReplace();\r\n          },\r\n    handleFileChange(event) {\r\n      const selectedFile = event.target.files[0];\r\n      if (selectedFile) {\r\n        this.readFileContent(selectedFile);\r\n      }\r\n    },\r\n    readFileContent(file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        this.textareaContent = event.target.result;\r\n      };\r\n      reader.readAsText(file);\r\n    },\r\n\r\n    handleFileChange2(file, fileList) {\r\n      // 在这里处理文件选择逻辑\r\n      // file 是选中的文件对象，fileList 是文件列表数组\r\n      console.log('Selected file:', file);\r\n    },\r\n\r\n    highlightText() {\r\n      return '上调时间';\r\n    }\r\n  }\r\n\r\n    \r\n    }\r\n    </script>\r\n    \r\n    \r\n    <style lang=\"less\">\r\n\r\n.highlight {\r\n  background-color: rgb(246, 0, 135); /* 设置高亮文本的背景色 */\r\n  color:white;\r\n}\r\n\r\n.headPart{\r\n  //position: absolute;\r\n  \r\n  //margin-top:20px;\r\n  width:100%;\r\n  height:50px;\r\n  display: flex;\r\n  align-items: flex-end; /* 底部对齐 */\r\n // border-bottom: 2px dashed #b4aeae; /* 下边框样式 */\r\n  align-items: center; /* 垂直居中对齐 */\r\n  justify-content: space-between; /* 水平两端对齐 */\r\n}\r\n.button-container {\r\n  display: flex;\r\n // align-items: center; /* 垂直居中对齐 */\r\n  gap: 10px; /* 按钮之间的水平间距 */\r\n  margin-left: 880px;\r\n  margin-top: 120px;\r\n}\r\n.chooseButton3{\r\n  position: relative;\r\n  //height:30px;\r\n // top:18px;\r\n  right: 0;\r\n // bottom:0;\r\n  margin-right: 80px;\r\n//  margin-bottom: auto;\r\n  //background-color: rgb(255, 255, 255);\r\n  margin-top:10px;\r\n}\r\n\r\n.handInButton {\r\n  position: relative;\r\n  //height:30px;\r\n // top:18px;\r\n  right: 0;\r\n  margin-right: 130px;\r\n // margin-bottom: auto;\r\n  //background-color: rgb(255, 255, 255);\r\n}\r\n\r\n\r\n .same{\r\n  display: flex;\r\n // justify-content: center; /* 水平居中 */\r\n  margin-top: 60px;\r\n }\r\n /*\r\n .input-container {\r\n  display: flex;\r\n  justify-content: center; \r\n  margin-top: 20px;\r\n}\r\n*/\r\n.output-div{\r\n  margin-left: 20px;\r\n  width: 95%; /* 设置宽度，根据实际需求调整 */\r\n  height:240px;\r\n // padding: 10px;\r\n  //top:10%;\r\n  resize: none; /* 禁止调整大小 */\r\n  overflow-y: auto; /* 允许垂直滚动条 */\r\n//  style=\"overflow-y:visible\"纵向的滚动条\r\n  border: none;\r\n}\r\n.product-input2 {\r\n  margin-left: 20px;\r\n  width: 95%; /* 设置宽度，根据实际需求调整 */\r\n  height:240px;\r\n // padding: 10px;\r\n  //top:10%;\r\n  resize: none; /* 禁止调整大小 */\r\n  overflow-y: auto; /* 允许垂直滚动条 */\r\n//  style=\"overflow-y:visible\"纵向的滚动条\r\n  border: none;\r\n//  border: 1px solid #b5b3b3;\r\n}\r\n\r\n.hidden-input {\r\n  display: none;\r\n}\r\n.title3{\r\n  display: flex;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  position: absolute;\r\n  top: 80px;\r\n  left: 18px;\r\n margin-bottom: auto;\r\n color:#000000\r\n // display: flex;\r\n // align-items: center; /* 垂直居中对齐 */\r\n}\r\n.titleEvent{\r\n  display: flex;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 18px;\r\n margin-bottom: auto;\r\n color:#000000\r\n // display: flex;\r\n // align-items: center; /* 垂直居中对齐 */\r\n}\r\n.titleElement{\r\n // display: flex;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  position: absolute;\r\n  top: 50px;\r\n  left: 18px;\r\n margin-bottom: auto;\r\n color:#000000\r\n // display: flex;\r\n // align-items: center; /* 垂直居中对齐 */\r\n}\r\n\r\n.highlighted-output{\r\n  position: absolute;\r\n  top: 50px;\r\n  left: 150px;\r\n}\r\n\r\n      </style>"],"mappings":"AA8CA,OAAAA,KAAA;AACA,OAAAC,qBAAA;AACA;EAIAC,QAAA;IACAC,iBAAA;MACA,SAAAC,aAAA,SAAAC,eAAA;QACA,MAAAC,KAAA,QAAAF,aAAA,CAAAG,KAAA,KAAAC,MAAA,UAAAH,eAAA;QACA,OAAAC,KAAA,CAAAG,GAAA,CAAAC,IAAA;UACAC,OAAA,EAAAD,IAAA;UACAE,aAAA,EAAAF,IAAA,CAAAG,WAAA,YAAAR,eAAA,CAAAQ,WAAA;QAGA;MACA;MACA;QAAAF,OAAA,OAAAP,aAAA;QAAAQ,aAAA;MAAA;IACA;EACA;EACAE,UAAA;IACAC,qBAAA,EAAAd;EAEA;EACAe,KAAA;IACA;MACAC,gBAAA;MACAC,UAAA;MACAC,SAAA;MACAC,KAAA;MACAf,eAAA;MACAD,aAAA;MACAiB,SAAA;MACAC,iBAAA;IACA;EACA;EAEAC,OAAA;IACAC,sBAAA;MACA,IAAAC,SAAA,QAAApB,eAAA;MACAqB,OAAA,CAAAC,GAAA,CAAAF,SAAA;MACA,IAAAG,YAAA;MACA,IAAAC,UAAA;QAAA;QAAA;QAAA;MAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAF,YAAA,CAAAG,MAAA,EAAAD,CAAA;QACA,IAAAE,UAAA,GAAAH,UAAA,CAAAD,YAAA,CAAAE,CAAA;QACAJ,OAAA,CAAAC,GAAA,SAAAK,UAAA;QACA,IAAAC,aAAA,qDAAAD,UAAA,WAAAJ,YAAA,CAAAE,CAAA;QACAJ,OAAA,CAAAC,GAAA,CAAAM,aAAA;QACAR,SAAA,GAAAA,SAAA,CAAAS,OAAA,CAAA1B,MAAA,CAAAoB,YAAA,CAAAE,CAAA,SAAAG,aAAA;MACA;MACA,KAAAhB,gBAAA,GAAAQ,SAAA;IACA;IAEAU,iBAAA;MACA;MACA,MAAAC,SAAA,QAAAC,KAAA,CAAAD,SAAA;MACA;MACAA,SAAA,CAAAE,KAAA;IACA;IACAC,OAAA;MAEAb,OAAA,CAAAC,GAAA,MAAAtB,eAAA;MACA;MACA;MACA;MACA,KAAAD,aAAA;;MAEA,KAAAiB,SAAA;MACAK,OAAA,CAAAC,GAAA,MAAAtB,eAAA;MACAqB,OAAA,CAAAC,GAAA,MAAAvB,aAAA;MACA,KAAAoB,qBAAA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;MACAE,OAAA,CAAAC,GAAA;MACA,KAAAP,KAAA;MACA;MACA,KAAAF,UAAA;MACA,KAAAC,SAAA;MACA,KAAAK,qBAAA;IACA;IACAgB,iBAAAC,KAAA;MACA,MAAAC,YAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,IAAAF,YAAA;QACA,KAAAG,eAAA,CAAAH,YAAA;MACA;IACA;IACAG,gBAAAC,IAAA;MACA,MAAAC,MAAA,OAAAC,UAAA;MACAD,MAAA,CAAAE,MAAA,GAAAR,KAAA;QACA,KAAApC,eAAA,GAAAoC,KAAA,CAAAE,MAAA,CAAAO,MAAA;MACA;MACAH,MAAA,CAAAI,UAAA,CAAAL,IAAA;IACA;IAEAM,kBAAAN,IAAA,EAAAO,QAAA;MACA;MACA;MACA3B,OAAA,CAAAC,GAAA,mBAAAmB,IAAA;IACA;IAEAQ,cAAA;MACA;IACA;EACA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}