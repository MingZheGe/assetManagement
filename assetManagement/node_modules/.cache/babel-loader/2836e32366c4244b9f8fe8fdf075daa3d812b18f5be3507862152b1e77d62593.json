{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport * as echarts from 'echarts';\nimport table from \"../components/table.vue\";\nimport nodeTree from \"../components/nodeTree.vue\";\nconsole.log(\"这里\" + nodeTree);\nconsole.log(nodeTree);\nexport default {\n  components: {\n    tableDemo: table,\n    NodeTree: nodeTree\n  },\n  watch: {\n    \"zoom.value\"(val) {\n      console.log(val);\n      const zoom = this.val3 / 100;\n      this.jmtest.view.setZoom(zoom);\n    },\n    selectTypes(v) {\n      this.loopTreeData(this.mind.data.children, item => {\n        if (v.length) {\n          if (v.includes(item.type)) {\n            //jm.set_node_color(node_id, bg_color, fg_color)\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n        }\n      });\n    }\n  },\n  computed: {\n    pathColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.pathActiveColor : this.structure.pathOrginalColor;\n      };\n    },\n    rectColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.rectActiveColor : this.structure.rectOrginalColor;\n      };\n    }\n  },\n  data() {\n    return {\n      jmtest: '',\n      //子组件传过来的jm\n      val3: '',\n      drawerVisible: false,\n      echartsWidth: 1000,\n      size: 400,\n      lista: [],\n      listb: [],\n      select: false,\n      getData: [],\n      // 根据输入值  查询到的结果\n      remindData: [],\n      input: \"\",\n      treeData: {\n        meta: {\n          name: \"query\",\n          author: \"\",\n          version: \"0.2\"\n        },\n        format: \"node_tree\",\n        data: {\n          id: \"root\",\n          topic: \"新能源汽车\",\n          type: \"2\",\n          expanded: true,\n          children: [{\n            id: \"root1\",\n            // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n            topic: \"公司\",\n            // [必选] 节点上显示的内容\n            direction: \"right\",\n            // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n            expanded: true,\n            // [可选] 该节点是否是展开状态，默认为 true\n            type: \"3\",\n            // [可选]自定义节点类型\n            children: [{\n              id: \"company1\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"东安动力|600178\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }, {\n              id: \"company2\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"申华控股|600653\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }, {\n              id: \"company3\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"北巴传媒|600368\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }, {\n              id: \"company4\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"铜峰电子|600237\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }, {\n              id: \"company5\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"东旭广电|000413\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }]\n          }, {\n            id: \"root2\",\n            // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n            topic: \"下游产品\",\n            // [必选] 节点上显示的内容\n            direction: \"right\",\n            // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n            expanded: true,\n            // [可选] 该节点是否是展开状态，默认为 true\n            type: 3,\n            // [可选]自定义节点类型\n            children: [{\n              id: \"product1\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"充电桩\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\",\n              // [可选]自定义节点类型\n              //产品对应公司\n              children: [{\n                id: \"subcompany1\",\n                // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                topic: \"公司\",\n                // [必选] 节点上显示的内容\n                direction: \"right\",\n                // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                expanded: true,\n                // [可选] 该节点是否是展开状态，默认为 true\n                type: \"3\",\n                // [可选]自定义节点类型\n                //具体公司\n                children: [{\n                  id: \"subcompany1-1\",\n                  // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                  topic: \"华阳新材|600281\",\n                  // [必选] 节点上显示的内容\n                  direction: \"right\",\n                  // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                  expanded: true,\n                  // [可选] 该节点是否是展开状态，默认为 true\n                  type: \"2\" // [可选]自定义节点类型\n                }]\n              }]\n            }, {\n              id: \"product2\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"机动车维修服务\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\",\n              // [可选]自定义节点类型\n\n              //产品对应公司\n              children: [{\n                id: \"subcompany2\",\n                // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                topic: \"公司\",\n                // [必选] 节点上显示的内容\n                direction: \"right\",\n                // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                expanded: true,\n                // [可选] 该节点是否是展开状态，默认为 true\n                type: \"3\",\n                // [可选]自定义节点类型\n                //具体公司\n                children: [{\n                  id: \"subcompany2-1\",\n                  // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                  topic: \"北方股份|600262\",\n                  // [必选] 节点上显示的内容\n                  direction: \"right\",\n                  // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                  expanded: true,\n                  // [可选] 该节点是否是展开状态，默认为 true\n                  type: \"2\" // [可选]自定义节点类型\n                }]\n              }]\n            }, {\n              id: \"product3\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"汽车贸易\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\",\n              // [可选]自定义节点类型\n\n              //产品对应公司\n              children: [{\n                id: \"subcompany3\",\n                // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                topic: \"公司\",\n                // [必选] 节点上显示的内容\n                direction: \"right\",\n                // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                expanded: true,\n                // [可选] 该节点是否是展开状态，默认为 true\n                type: \"3\",\n                // [可选]自定义节点类型\n                //具体公司\n                children: [{\n                  id: \"subcompany3-1\",\n                  // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                  topic: \"国机汽车|600335\",\n                  // [必选] 节点上显示的内容\n                  direction: \"right\",\n                  // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                  expanded: true,\n                  // [可选] 该节点是否是展开状态，默认为 true\n                  type: \"2\" // [可选]自定义节点类型\n                }, {\n                  id: \"subcompany3-2\",\n                  // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                  topic: \"锦江在线|000650\",\n                  // [必选] 节点上显示的内容\n                  direction: \"right\",\n                  // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                  expanded: true,\n                  // [可选] 该节点是否是展开状态，默认为 true\n                  type: \"2\" // [可选]自定义节点类型\n                }]\n              }]\n            }, {\n              id: \"product4\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"汽车美容服务\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\",\n              // [可选]自定义节点类型\n\n              //产品对应公司\n              children: [{\n                id: \"subcompany4\",\n                // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                topic: \"公司\",\n                // [必选] 节点上显示的内容\n                direction: \"right\",\n                // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                expanded: true,\n                // [可选] 该节点是否是展开状态，默认为 true\n                type: \"3\",\n                // [可选]自定义节点类型\n                //具体公司\n                children: [{\n                  id: \"subcompany4-1\",\n                  // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                  topic: \"岭南控股|000524\",\n                  // [必选] 节点上显示的内容\n                  direction: \"right\",\n                  // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                  expanded: true,\n                  // [可选] 该节点是否是展开状态，默认为 true\n                  type: \"2\" // [可选]自定义节点类型\n                }, {\n                  id: \"subcompany4-2\",\n                  // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                  topic: \"*ST中期|000996\",\n                  // [必选] 节点上显示的内容\n                  direction: \"right\",\n                  // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                  expanded: true,\n                  // [可选] 该节点是否是展开状态，默认为 true\n                  type: \"2\" // [可选]自定义节点类型\n                }]\n              }]\n            }, {\n              id: \"product5\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"汽车物流服务\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\",\n              // [可选]自定义节点类型\n\n              //产品对应公司\n              children: [{\n                id: \"subcompany5\",\n                // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                topic: \"公司\",\n                // [必选] 节点上显示的内容\n                direction: \"right\",\n                // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                expanded: true,\n                // [可选] 该节点是否是展开状态，默认为 true\n                type: \"3\",\n                // [可选]自定义节点类型\n                //具体公司\n                children: [{\n                  id: \"subcompany5-1\",\n                  // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                  topic: \"岭南控股|000524\",\n                  // [必选] 节点上显示的内容\n                  direction: \"right\",\n                  // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                  expanded: true,\n                  // [可选] 该节点是否是展开状态，默认为 true\n                  type: \"2\" // [可选]自定义节点类型\n                }, {\n                  id: \"subcompany5-2\",\n                  // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n                  topic: \"*ST中期|000996\",\n                  // [必选] 节点上显示的内容\n                  direction: \"right\",\n                  // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n                  expanded: true,\n                  // [可选] 该节点是否是展开状态，默认为 true\n                  type: \"2\" // [可选]自定义节点类型\n                }]\n              }]\n            }]\n          }]\n        }\n      },\n\n      zoom: {\n        value: 100,\n        // 层级大小\n        min: 10,\n        // 最小层级\n        max: 400 // 最大层级\n      },\n\n      bgMap: {\n        //公司\n        1: {\n          bgcolor: \"#87CEFA \",\n          fgcolor: \" #000\",\n          original: \"#87CEFA\",\n          transparent: \"rgb(25, 144, 255, 0.2)\"\n        },\n        //根节点\n        2: {\n          bgcolor: \"#1E90FF\",\n          fgcolor: \"#fff\",\n          original: \"rgb(100, 201, 53)\",\n          transparent: \"rgb(100, 201, 53, 0.2)\"\n        },\n        3: {\n          //其他\n          bgcolor: \" \",\n          fgcolor: \"#000\"\n        },\n        4: {\n          //人\n          bgcolor: \"#FF7F50\",\n          fgcolor: \"#fff\"\n        },\n        5: [{\n          //发行\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\"\n        }, {\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\"\n        }, {\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\"\n        }],\n        6: {\n          //项目\n          bgcolor: \"#ecb5c9\",\n          fgcolor: \"#fff\"\n        },\n        7: {\n          //发行1\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\"\n        },\n        8: {\n          //发行2\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\"\n        },\n        9: {\n          //发行3\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\"\n        }\n      },\n      structure: {\n        active: \"right\",\n        pathOrginalColor: \"#2B2F36\",\n        pathActiveColor: \"#3370FF\",\n        rectOrginalColor: \"#C3C6CB\",\n        rectActiveColor: \"#BACEFD\"\n      },\n      dialogVisible: false,\n      dialogVisible2: false,\n      selectNodeInfo: {\n        id: null,\n        Name: \"\"\n      },\n      // 选中节点信息\n      tempNodeInfo: null,\n      // 保存修改之前的信息\n      createType: \"\",\n      // 添加平级or子级\n      showMenu: false,\n      // 是否显示右键菜单栏\n      menuStyle: {\n        top: \"\",\n        bottom: \"\",\n        left: \"\",\n        right: \"\"\n      },\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]),\n      // 选中types Set\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"] // 选中types Array\n    };\n  },\n\n  methods: {\n    // zoom2: 0.4,\n\n    handleJMMounted(jm, val2) {\n      // 在这里可以访问子组件传来的 this.jm 对象\n      console.log(jm);\n      console.log(val2);\n      //jm.view.setZoom(zoom2)\n      this.jmtest = jm;\n      this.val3 = val2;\n    },\n    //treeNode组件点击事件,参数类型为jm.node\n    handleChildClick(selectedNode) {\n      // console.log(handleJMMounted)\n      console.log(this.jmtest); //这里可以修改子组件传过来的jm\n      //  this.jmtest.view.setZoom(0.4);\n      // this.handleJMMounted;\n      //this.jm.view.setZoom(0.4)\n      // 在这里处理子组件传递过来的数据\n      console.log('从子组件传递的数据:', selectedNode);\n      if (selectedNode.parent.topic == \"公司\") {\n        this.drawerVisible = true;\n        //在dom渲染之后再加载折线图\n        this.$nextTick(() => {\n          const chart = echarts.init(this.$refs.echartsContainer);\n          chart.setOption({\n            // 数据用于绘制折线图的配置\n            xAxis: {\n              type: 'category',\n              data: ['2月', '3月', '4月', '5月', '6月', '7月']\n            },\n            yAxis: {\n              type: 'value'\n            },\n            legend: {\n              data: [selectedNode.topic],\n              // 将图例名称传入数组中\n              top: 'top'\n            },\n            series: [{\n              name: selectedNode.topic,\n              type: 'line',\n              data: [10, 20, 15, 25, 30, 18]\n            }]\n          });\n        });\n      }\n    },\n    querySearch(queryString, cb) {\n      console.log(queryString);\n      this.remindData = [];\n      if (this.input !== \"\") {\n        axios.post(\"http://localhost:8086//ShareTiShi\", {\n          select_name: queryString\n        }).then(response => {\n          console.log(\"finish\");\n          this.getData = response.data;\n          this.getData.forEach(item => {\n            let obj = {\n              value: \"\"\n            };\n            obj.value = item;\n            this.remindData.push(obj);\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n        let nameTipsArray = this.remindData;\n        // 调用 callback 返回建议列表的数据\n        cb(nameTipsArray);\n      }\n    },\n    handleSelect(item) {\n      let regex = /\\[(.+?)\\]/g;\n      this.input = item.value.match(regex)[0].replace(\"[\", \"\").replace(\"]\", \"\");\n    },\n    search() {\n      this.jm.update_node(\"root\", this.input);\n      const selectedNode1 = this.jm.get_node(\"root1\");\n      this.delChild(selectedNode1);\n      this.add_stock(selectedNode1, this.input);\n    },\n    delChild(node) {\n      if (node.children.length != 0) {\n        console.log(node.children);\n        let len = node.children.length;\n        for (var deli = 0; deli < len;) {\n          console.log(node.children[0]);\n          this.jm.remove_node(node.children[0]);\n          deli = deli + 1;\n        }\n      }\n    },\n    // 重置视图\n    reset() {\n      document.querySelector(\".root\").scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\"\n      });\n    },\n    // 缩小\n    zoomOut() {\n      this.jmtest.view.zoomOut();\n      this.zoom.value = parseInt(this.jmtest.view.actualZoom * 100);\n      console.log(this.zoom.value);\n    },\n    // 放大\n    zoomIn() {\n      this.jmtest.view.zoomIn();\n      this.zoom.value = parseInt(this.jmtest.view.actualZoom * 100);\n    },\n    // 循环树结构\n    loopTreeData(list, callback) {\n      (function doOneFloor(list) {\n        if (Array.isArray(list)) {\n          for (let i = 0; i < list.length; i++) {\n            const item = list[i];\n            callback(item, i);\n            if (item.children && item.children.length > 0) {\n              doOneFloor(item.children);\n            }\n          }\n        }\n      })(list);\n    },\n    // 设置背景颜色\n    setColor() {\n      this.jm.set_node_color(\"root\", this.bgMap[2].bgcolor, this.bgMap[2].fgcolor);\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\n      this.loopTreeData(this.mind.data.children, item => {\n        if (this.selectTypes.length) {\n          if (this.selectTypes.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n        }\n      });\n    },\n    // 初始化配置\n    init() {\n      this.drawer = false;\n      this.jm.view.minZoom = 0.1;\n      this.jm.view.maxZoom = 5;\n      const element = document.querySelector('.jsmind-inner');\n      const style = window.getComputedStyle(element);\n      while (style.overflow === 'hidden') {\n        // 内容发生了溢出\n        console.log(1111);\n      }\n      if (style.overflow != 'hidden') {\n        this.zoomOut();\n        console.log(2222);\n      }\n      if (style.overflow === 'hidden') {\n        // 内容发生了溢出\n        this.zoomOut();\n      }\n      this.setColor();\n\n      //右键菜单\n      this.jm.view.add_event(this.editor, \"contextmenu\", e => {\n        console.log(\"A\");\n        const selectedNode = this.jm.get_selected_node();\n        console.log(selectedNode);\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\n          e.preventDefault();\n          const el = document.querySelector(\".context-menu .el-menu-item\");\n          const width = parseFloat(window.getComputedStyle(el).width);\n          const height = parseFloat(window.getComputedStyle(el).height) * 3 + 12;\n          const windowHeight = window.innerHeight;\n          const windowWidth = window.innerWidth;\n\n          // 极限位置 避免越界\n          if (e.clientY + height > windowHeight) {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = \"unset\";\n            this.menuStyle.bottom = 0;\n          } else if (e.clientX + width > windowWidth) {\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.left = \"unset\";\n            this.menuStyle.right = 0;\n          } else {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.bottom = \"unset\";\n          }\n          this.showMenu = true;\n          if (selectedNode.topic == \"下游产品\") {\n            this.select = true;\n          } else {\n            this.select = false;\n          }\n        } else {\n          this.showMenu = false;\n        }\n      });\n    },\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    sureEditNode() {},\n    // 拖拽\n    handleDrop(draggingNode, dropNode) {\n      // 前一个兄弟节点\n      const prevNode = this.jm.find_node_before(dropNode);\n      // 获取移动后的node\n      const dragForm = {\n        modelId: \"\",\n        treeNum: !prevNode ? draggingNode : prevNode.id,\n        thisTreeNum: dropNode\n      };\n      //console.log(\"dragForm\", dragForm);\n\n      // TODO 调接口\n    },\n\n    add_company(addnode, company) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"董事长\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"董事长\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"总裁\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"总裁\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"首席运营官\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"首席运营官\"\n        }).then(response => {\n          //console.log(\"生产公司\" + response);\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"监事\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"监事\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"董事会秘书\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"董事会秘书\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"发行\") {\n        axios.post(\"http://localhost:8086/faxing\", {\n          select_name: company,\n          relation: \"发行\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i].ChiName;\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              let num = 7 + this.lista[i].Stock;\n              newNode1.type = num;\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"参股公司\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"参股公司\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"控股股东\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"控股股东\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"大股东\") {\n        axios.post(\"http://localhost:8086/gudong\", {\n          select_name: company\n          //relation: \"大股东\",\n        }).then(response => {\n          if ((response.data.company.length == 0 || !response.data.person.length == 0) && addnode.parent.id != \"root\") {\n            console.log(response.data.company.length);\n            this.jm.remove_node(addnode.id);\n          } else {\n            console.log(response.data);\n            this.lista = response.data.person;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n            this.listb = response.data.company;\n            console.log(\"b:\" + this.listb);\n            for (var i = 0; i < this.listb.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.listb[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"投资\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"投资\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"6\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    add_person(addnode, person) {\n      if (addnode.data && addnode.topic == \"担任董事长\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任董事长\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          }\n          this.lista = response.data;\n          var len = this.lista.length;\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n            newNode1.type = \"1\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任总裁\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任总裁\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任首席运营官\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任首席运营官\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任监事\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任监事\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任董事会秘书\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任董事会秘书\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"实际控制人\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"实际控制人\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\" + addnode.topic);\n      }\n      this.jm.collapse_node(addnode);\n    },\n    add_stock(addnode, share) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"发行公司\") {\n        axios.post(\"http://localhost:8086/share\", {\n          select_name: share,\n          relation: \"发行公司\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          }\n          this.lista = response.data;\n          console.log(this.lista);\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n            newNode1.type = \"1\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    color_conditional() {\n      this.dialogVisible2 = true;\n      this.showMenu = false;\n    },\n    nodeClick() {\n      this.showMenu = false;\n      const selectedNode = this.jm.get_selected_node();\n      console.log(selectedNode.id);\n      //let newNode1 = this.jm.add_node(selectedNode, \"table1\", \"topic1\");*/\n      if (!selectedNode) return;\n      //console.log(selectedNode.type)\n      if (selectedNode) {\n        console.log(selectedNode); // 打印selectedNode对象，查看其中的内容\n        console.log(selectedNode.data.type);\n      }\n      if (selectedNode.data) {\n        console.log(selectedNode.type);\n        if (selectedNode.parent.topic == \"公司\") {\n          this.drawerVisible = true;\n          //在dom渲染之后再加载折线图\n          this.$nextTick(() => {\n            const chart = echarts.init(this.$refs.echartsContainer);\n            chart.setOption({\n              // 数据用于绘制折线图的配置\n              xAxis: {\n                type: 'category',\n                data: ['2月', '3月', '4月', '5月', '6月', '7月']\n              },\n              yAxis: {\n                type: 'value'\n              },\n              legend: {\n                data: [selectedNode.topic],\n                // 将图例名称传入数组中\n                top: 'top'\n              },\n              series: [{\n                name: selectedNode.topic,\n                type: 'line',\n                data: [10, 20, 15, 25, 30, 18]\n              }]\n            });\n          });\n        }\n        if (selectedNode.children.length != 0) {\n          this.jm.toggle_node(selectedNode);\n        } else if (selectedNode.type == 1) {\n          console.log(\"type=1\");\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let nodeid7 = jsMind.util.uuid.newid();\n          let nodeid8 = jsMind.util.uuid.newid();\n          let nodeid9 = jsMind.util.uuid.newid();\n          let nodeid10 = jsMind.util.uuid.newid();\n          let topic1 = \"董事长\";\n          let topic2 = \"总裁\";\n          let topic3 = \"首席运营官\";\n          let topic4 = \"监事\";\n          let topic5 = \"董事会秘书\";\n          let topic6 = \"发行\";\n          let topic7 = \"参股公司\";\n          let topic8 = \"控股股东\";\n          let topic9 = \"大股东\";\n          let topic10 = \"投资\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          let newNode7 = this.jm.add_node(selectedNode, nodeid7, topic7);\n          let newNode8 = this.jm.add_node(selectedNode, nodeid8, topic8);\n          let newNode9 = this.jm.add_node(selectedNode, nodeid9, topic9);\n          let newNode10 = this.jm.add_node(selectedNode, nodeid10, topic10);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          newNode7.type = \"3\";\n          newNode8.type = \"3\";\n          newNode9.type = \"3\";\n          newNode10.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          this.jm.set_node_color(newNode3.id, this.bgMap[newNode3.type].bgcolor, this.bgMap[newNode3.type].fgcolor);\n          this.jm.set_node_color(newNode4.id, this.bgMap[newNode4.type].bgcolor, this.bgMap[newNode4.type].fgcolor);\n          this.jm.set_node_color(newNode5.id, this.bgMap[newNode5.type].bgcolor, this.bgMap[newNode5.type].fgcolor);\n          this.jm.set_node_color(newNode6.id, this.bgMap[newNode6.type].bgcolor, this.bgMap[newNode6.type].fgcolor);\n          this.jm.set_node_color(newNode7.id, this.bgMap[newNode7.type].bgcolor, this.bgMap[newNode7.type].fgcolor);\n          this.jm.set_node_color(newNode8.id, this.bgMap[newNode8.type].bgcolor, this.bgMap[newNode8.type].fgcolor);\n          this.jm.set_node_color(newNode9.id, this.bgMap[newNode9.type].bgcolor, this.bgMap[newNode9.type].fgcolor);\n          this.jm.set_node_color(newNode10.id, this.bgMap[newNode10.type].bgcolor, this.bgMap[newNode10.type].fgcolor);\n          this.add_company(newNode1, selectedNode.topic);\n          this.add_company(newNode2, selectedNode.topic);\n          this.add_company(newNode3, selectedNode.topic);\n          this.add_company(newNode4, selectedNode.topic);\n          this.add_company(newNode5, selectedNode.topic);\n          this.add_company(newNode6, selectedNode.topic);\n          this.add_company(newNode7, selectedNode.topic);\n          this.add_company(newNode8, selectedNode.topic);\n          this.add_company(newNode9, selectedNode.topic);\n          this.add_company(newNode10, selectedNode.topic);\n        } else if (selectedNode.type == 4) {\n          console.log(\"type=4\");\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let topic1 = \"担任董事长\";\n          let topic2 = \"担任总裁\";\n          let topic3 = \"担任首席运营官\";\n          let topic4 = \"担任监事\";\n          let topic5 = \"担任董事会秘书\";\n          let topic6 = \"实际控制人\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          this.jm.set_node_color(newNode3.id, this.bgMap[newNode3.type].bgcolor, this.bgMap[newNode3.type].fgcolor);\n          this.jm.set_node_color(newNode4.id, this.bgMap[newNode4.type].bgcolor, this.bgMap[newNode4.type].fgcolor);\n          this.jm.set_node_color(newNode5.id, this.bgMap[newNode5.type].bgcolor, this.bgMap[newNode5.type].fgcolor);\n          this.jm.set_node_color(newNode6.id, this.bgMap[newNode6.type].bgcolor, this.bgMap[newNode6.type].fgcolor);\n          this.add_person(newNode1, selectedNode.topic);\n          this.add_person(newNode2, selectedNode.topic);\n          this.add_person(newNode3, selectedNode.topic);\n          this.add_person(newNode4, selectedNode.topic);\n          this.add_person(newNode5, selectedNode.topic);\n          this.add_person(newNode6, selectedNode.topic);\n        } else if (selectedNode.type == 5) {\n          console.log(\"type=5\");\n          let nodeid1 = jsMind.util.uuid.newid();\n          let topic1 = \"发行公司\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          newNode1.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.add_stock(newNode1, selectedNode.topic);\n        } else {\n          console.log(\"type=无\");\n          console.log(selectedNode.type);\n          this.$message({\n            showClose: true\n            //   message: \"没有\" + selectedNode.topic,\n          });\n        }\n      } else {\n        this.$message.error(\"wrong\");\n      }\n    },\n    delCard() {\n      const selectedNode = this.jmtest.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jmtest.remove_node(selectedNode.id);\n        // 获取数据\n        console.log(this.jmtest.get_data(\"node_tree\"));\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 滚轮缩放\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      e.preventDefault();\n      this.jmtest.resize();\n    },\n    // 更改颜色\n    changecolor() {\n      console.log(this.bgMap[4].bgcolor);\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type || 3].bgcolor, this.bgMap[item.type || 3].fgcolor));\n      this.dialogVisible2 = false;\n    },\n    // 导出图片\n    screen_shot() {\n      // 去除透明度\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type || 3].bgcolor, this.bgMap[item.type || 3].fgcolor));\n      try {\n        this.jm.screenshot.shootDownload();\n      } catch (error) {\n        console.log(error);\n      }\n      setTimeout(() => {\n        this.setColor();\n      }, 1000);\n    },\n    // 鼠标拖拽\n    mouseDrag() {\n      // 里层\n      const el = document.querySelector(\".jsmind-inner\");\n      // 选中节点\n      let selected;\n      el.onmousedown = ev => {\n        // 选中节点\n        selected = this.jmtest.get_selected_node();\n        // 标识 是否拖拽节点 避免冲突\n        this.dragNodeFlag = !!selected;\n        const disX = ev.clientX;\n        const disY = ev.clientY;\n        const originalScrollLeft = el.scrollLeft;\n        const originalScrollTop = el.scrollTop;\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\n        const originalPointerEvents = el.style[\"pointer-events\"];\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\n        el.style[\"scroll-behavior\"] = \"auto\";\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\n        document.onmousemove = ev => {\n          if (this.dragNodeFlag) return;\n          this.drag = false;\n          ev.preventDefault();\n          // 计算拖拽的偏移距离\n          const distanceX = ev.clientX - disX;\n          const distanceY = ev.clientY - disY;\n          el.scrollTo(originalScrollLeft - distanceX, originalScrollTop - distanceY);\n\n          // 在鼠标拖动的时候将点击事件屏蔽掉\n          el.style[\"pointer-events\"] = \"none\";\n          el.style.cursor = \"grabbing\";\n        };\n        document.onmouseup = () => {\n          if (!this.dragNodeFlag) {\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\n            el.style[\"pointer-events\"] = originalPointerEvents;\n            el.style.cursor = \"grab\";\n          }\n          document.onmousemove = document.onmouseup = null;\n        };\n      };\n    }\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\n  }\n};","map":{"version":3,"names":["axios","echarts","table","nodeTree","console","log","components","tableDemo","NodeTree","watch","zoom.value","val","zoom","val3","jmtest","view","setZoom","selectTypes","v","loopTreeData","mind","data","children","item","length","includes","type","jm","set_node_color","id","bgMap","bgcolor","fgcolor","transparent","computed","pathColor","structure","active","pathActiveColor","pathOrginalColor","rectColor","rectActiveColor","rectOrginalColor","drawerVisible","echartsWidth","size","lista","listb","select","getData","remindData","input","treeData","meta","name","author","version","format","topic","expanded","direction","value","min","max","original","dialogVisible","dialogVisible2","selectNodeInfo","Name","tempNodeInfo","createType","showMenu","menuStyle","top","bottom","left","right","typeQueue","Set","methods","handleJMMounted","val2","handleChildClick","selectedNode","parent","$nextTick","chart","init","$refs","echartsContainer","setOption","xAxis","yAxis","legend","series","querySearch","queryString","cb","post","select_name","then","response","forEach","obj","push","catch","error","nameTipsArray","handleSelect","regex","match","replace","search","update_node","selectedNode1","get_node","delChild","add_stock","node","len","deli","remove_node","reset","document","querySelector","scrollIntoView","block","behavior","zoomOut","parseInt","actualZoom","zoomIn","list","callback","doOneFloor","Array","isArray","i","setColor","set_node_font_style","drawer","minZoom","maxZoom","element","style","window","getComputedStyle","overflow","add_event","editor","e","get_selected_node","preventDefault","el","width","parseFloat","height","windowHeight","innerHeight","windowWidth","innerWidth","clientY","clientX","get_selected_nodeid","sureEditNode","handleDrop","draggingNode","dropNode","prevNode","find_node_before","dragForm","modelId","treeNum","thisTreeNum","add_company","addnode","company","relation","nodeid","jsMind","util","uuid","newid","newNode1","add_node","ChiName","num","Stock","person","$message","collapse_node","add_person","share","query_conditional","color_conditional","nodeClick","toggle_node","nodeid1","nodeid2","nodeid3","nodeid4","nodeid5","nodeid6","nodeid7","nodeid8","nodeid9","nodeid10","topic1","topic2","topic3","topic4","topic5","topic6","topic7","topic8","topic9","topic10","newNode2","newNode3","newNode4","newNode5","newNode6","newNode7","newNode8","newNode9","newNode10","showClose","delCard","get_data","mouseWheel","addEventListener","scrollFunc","container","onmousewheel","event","wheelDelta","detail","resize","changecolor","screen_shot","screenshot","shootDownload","setTimeout","mouseDrag","selected","onmousedown","ev","dragNodeFlag","disX","disY","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","originalScrollBehavior","originalPointerEvents","onmousemove","drag","distanceX","distanceY","scrollTo","cursor","onmouseup","beforeDestroy","removeEventListener"],"sources":["src/views/query.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"jsmind\" >\r\n    <div>\r\n     <el-drawer :visible.sync=\"drawerVisible\" >\r\n      <div class=\"echarts-container\" ref=\"echartsContainer\" style=\"{ width: echartsWidth + 'px'}\"></div>\r\n     </el-drawer>\r\n    </div>\r\n    <tableDemo\r\n      text=\"2022年新能源汽车补贴标准在2021年基础上退坡30%，这也在一定程度上导致了新能源汽车价格上涨\"\r\n      eventType=\"调价\" \r\n      product=\"新能源汽车\" \r\n      time=\"2022年\" \r\n      method=\"上涨\">\r\n    </tableDemo>\r\n\r\n    <NodeTree :mind=\"treeData\" @child-clicked=\"handleChildClick\" @jmMounted=\"handleJMMounted\" ></NodeTree>\r\n \r\n    <div class=\"toolbar\">\r\n      <ul class=\"toolbar-list\">\r\n        <li class=\"item\">\r\n          <span\r\n            size=\"16\"\r\n            class=\"percent\"\r\n            style=\"font-size: 14px; color: rgb(29, 29, 31)\"\r\n            @click=\"zoom.value = 100\"\r\n            >{{ zoom.value }}%\r\n          </span>\r\n          <div class=\"scale-slide\">\r\n            <ul>\r\n              <li class=\"normal-item\" title=\"缩小\" @click=\"zoomOut\">\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-5.66 1.22a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7zM4.76 6.6h5.12c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36z\"\r\n                    fill=\"#2B2F36\"\r\n                    fill-rule=\"nonzero\"\r\n                  ></path>\r\n                </svg>\r\n              </li>\r\n\r\n              <li class=\"slider\">\r\n                <el-slider\r\n                  v-model=\"zoom.value\"\r\n                  :show-tooltip=\"false\"\r\n                  :min=\"zoom.min\"\r\n                  :max=\"zoom.max\"\r\n                ></el-slider>\r\n              </li>\r\n\r\n              <li class=\"normal-item\" title=\"画布放大\" @click=\"zoomIn\">\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-6.4-5.36V4.76c0-.2.17-.37.37-.37h.73c.2 0 .37.16.37.37v1.83h1.83c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H8.05v1.83c0 .2-.16.37-.37.37h-.73a.37.37 0 01-.36-.37V8.05H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36h1.83zm.74 6.58a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7z\"\r\n                    fill=\"#2B2F36\"\r\n                    fill-rule=\"nonzero\"\r\n                  ></path>\r\n                </svg>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <div class=\"layout item\" @click=\"color_conditional\">\r\n          <svg\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M12.56 4.06c1.41 0 2.8.28 4.05.8l-.99 1.21a9.3 9.3 0 00-2.67-.5l-.4-.01h-.43a9.14 9.14 0 00-5.28 2c-.72.61-1.3 1.32-1.69 2.09a5.1 5.1 0 000 4.82c.39.74.95 1.41 1.68 2 .73.59 1.59 1.06 2.55 1.39a9.75 9.75 0 004.5.42l.44-.06.53-.11.06-.02c.07-.03.14-.1.2-.2a.8.8 0 00.1-.47l-.03-.12-.03-.1-.05-.22a3.32 3.32 0 01.46-2.53c.52-.8 1.36-1.3 2.27-1.36H19.45l.1-.01c.48-.07.87-.53.96-1.1l.02-.14v-.25l-.02-.22-.05-.29a5.6 5.6 0 00-1.13-2.4l.96-1.2a7.08 7.08 0 011.63 3.34l.06.34.04.34v.37c-.08 1.45-1.12 2.6-2.4 2.7H18.02c-.48 0-.94.26-1.23.7-.22.34-.32.75-.28 1.16l.02.18.07.27a2.3 2.3 0 01-.2 1.75c-.24.41-.6.72-1 .86l-.17.05-.57.12c-.42.08-.84.13-1.26.16l-.42.03h-.44c-1.26 0-2.5-.2-3.65-.6a9.85 9.85 0 01-3-1.63 7.91 7.91 0 01-2.07-2.47 6.58 6.58 0 010-6.19A8.24 8.24 0 015.9 6.42a9.85 9.85 0 013-1.72c.92-.32 1.86-.53 2.81-.6l.41-.02.43-.01h.02zM7.4 12.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm12.29-9.01a.5.5 0 01.63-.13l.07.05.4.31c.18.16.23.42.12.63l-.05.08-7.69 9.6-1.14.51a.2.2 0 01-.28-.17v-.05L12 13l7.69-9.61zM8.4 8.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm4.2-1.5a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2z\"\r\n              fill=\"#2B2F36\"\r\n              fill-rule=\"evenodd\"\r\n            ></path>\r\n          </svg>\r\n        </div>\r\n        <div\r\n          class=\"reset item normal-item\"\r\n          title=\"定位到中心主题\"\r\n          @click=\"reset\"\r\n        >\r\n          <svg\r\n            width=\"16\"\r\n            height=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M.77 0h3.46c.21 0 .38.17.38.38v.77c0 .22-.17.39-.38.39h-2.7v2.7c0 .2-.16.38-.38.38H.38A.38.38 0 010 4.23V.77C0 .34.34 0 .77 0zm14.45 16h-3.46a.38.38 0 01-.38-.39v-.76c0-.22.17-.39.38-.39h2.7v-2.7c0-.2.17-.38.38-.38h.77c.21 0 .38.18.38.39v3.46c0 .43-.34.77-.77.77zM0 15.23v-3.46c0-.21.17-.39.38-.39h.77c.22 0 .39.18.39.39v2.7h2.69c.21 0 .38.16.38.38v.77c0 .2-.17.38-.38.38H.77a.77.77 0 01-.77-.77zM16 .78v3.46c0 .21-.17.38-.38.38h-.77a.38.38 0 01-.39-.38v-2.7h-2.69a.38.38 0 01-.38-.38V.4c0-.2.17-.38.38-.38h3.46c.43 0 .77.34.77.77zm-8 9.99a2.77 2.77 0 110-5.54 2.77 2.77 0 010 5.54z\"\r\n              fill=\"#2B2F36\"\r\n              fill-rule=\"nonzero\"\r\n            ></path>\r\n          </svg>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n  \r\n     <!--\r\n      <div\r\n        id=\"jsmind_container2\"\r\n        ref=\"container\"\r\n        @click=\"nodeClick\"\r\n        @contextmenu.prevent=\"\"\r\n      ></div>\r\n      -->\r\n\r\n\r\n     \r\n\r\n          \r\n      <div class=\"title2\">  相关公司</div>\r\n         \r\n      <el-dialog\r\n        :title=\"'颜色选择器'\"\r\n        :visible.sync=\"dialogVisible2\"\r\n        width=\"600px\"\r\n        @closed=\"form = {}\"\r\n        :destroy-on-close=\"true\"\r\n        :lock-scroll=\"false\"\r\n        :append-to-body=\"true\"\r\n        v-if=\"selectNodeInfo\"\r\n      >\r\n        <el-row>\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-tag>人</el-tag>\r\n            </div></el-col\r\n          >\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-tag>公司</el-tag>\r\n            </div></el-col\r\n          >\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-tag>项目</el-tag>\r\n            </div></el-col\r\n          >\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[4].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[1].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[6].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n        </el-row>\r\n        <br />\r\n        <el-row>\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-tag>A股</el-tag>\r\n            </div></el-col\r\n          >\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-tag>B股</el-tag>\r\n            </div></el-col\r\n          >\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-tag>C股</el-tag>\r\n            </div></el-col\r\n          >\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[7].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[8].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[9].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n        </el-row>\r\n\r\n        <template v-slot:footer>\r\n          <div class=\"right mr-10\">\r\n            <el-button\r\n              type=\"primary\"\r\n              class=\"common-btn\"\r\n              @click=\"changecolor\"\r\n              size=\"medium\"\r\n              >确 定</el-button\r\n            >\r\n          </div>\r\n        </template>\r\n      </el-dialog>\r\n   \r\n    <!-- 右键菜单 -->\r\n    <el-menu\r\n      class=\"context-menu\"\r\n      v-show=\"showMenu\"\r\n      :style=\"{\r\n        left: menuStyle.left,\r\n        top: menuStyle.top,\r\n        bottom: menuStyle.bottom,\r\n        right: menuStyle.right,\r\n      }\"\r\n      ref=\"context\"\r\n    >\r\n      <slot>\r\n        <el-menu-item @click=\"delCard\">隐藏节点</el-menu-item>\r\n      </slot>\r\n    </el-menu>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as echarts from 'echarts'\r\nimport table from \"../components/table.vue\";\r\nimport nodeTree from \"../components/nodeTree.vue\";\r\nconsole.log(\"这里\"+nodeTree);\r\nconsole.log(nodeTree);\r\nexport default {\r\n\r\n  components: {\r\n  tableDemo:table,\r\n  NodeTree:nodeTree,\r\n\r\n},\r\n\r\n  watch: {\r\n    \"zoom.value\"(val) {\r\n      console.log(val);\r\n      const zoom = this.val3 / 100;\r\n      this.jmtest.view.setZoom(zoom);\r\n    },\r\n    selectTypes(v) {\r\n      this.loopTreeData(this.mind.data.children, (item) => {\r\n        if (v.length) {\r\n          if (v.includes(item.type)) {//jm.set_node_color(node_id, bg_color, fg_color)\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].bgcolor,\r\n              this.bgMap[item.type].fgcolor\r\n            );\r\n          } else {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].transparent,\r\n              this.bgMap[item.type].fgcolor\r\n            );\r\n          }\r\n        } else {\r\n          this.jm.set_node_color(\r\n            item.id,\r\n            this.bgMap[item.type].transparent,\r\n            this.bgMap[item.type].fgcolor\r\n          );\r\n        }\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    pathColor() {\r\n      return function (type) {\r\n        return this.structure.active === type\r\n          ? this.structure.pathActiveColor\r\n          : this.structure.pathOrginalColor;\r\n      };\r\n    },\r\n    rectColor() {\r\n      return function (type) {\r\n        return this.structure.active === type\r\n          ? this.structure.rectActiveColor\r\n          : this.structure.rectOrginalColor;\r\n      };\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      jmtest:'',//子组件传过来的jm\r\n      val3:'',\r\n\r\n      drawerVisible: false,\r\n      echartsWidth: 1000,\r\n      size: 400,\r\n      lista: [],\r\n      listb: [],\r\n      select: false,\r\n      getData: [], // 根据输入值  查询到的结果\r\n      remindData: [],\r\n      input: \"\",\r\n    \r\n      treeData: {\r\n        meta: {\r\n          name: \"query\",\r\n          author: \"\",\r\n          version: \"0.2\",\r\n        },\r\n        format: \"node_tree\",\r\n        data: {\r\n          id: \"root\",\r\n          topic: \"新能源汽车\",\r\n          type: \"2\",\r\n          expanded: true,\r\n          children: [\r\n            {\r\n              id: \"root1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"公司\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"3\", // [可选]自定义节点类型\r\n              children: [\r\n            {\r\n              id: \"company1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"东安动力|600178\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n            {\r\n              id: \"company2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"申华控股|600653\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n            {\r\n              id: \"company3\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"北巴传媒|600368\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n            {\r\n              id: \"company4\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"铜峰电子|600237\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n            {\r\n              id: \"company5\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"东旭广电|000413\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n          ]\r\n            },\r\n            {\r\n              id: \"root2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"下游产品\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: 3, // [可选]自定义节点类型\r\n              children: [\r\n            {\r\n              id: \"product1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"充电桩\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"4\", // [可选]自定义节点类型\r\n              //产品对应公司\r\n              children: [\r\n            {\r\n              id: \"subcompany1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"公司\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"3\", // [可选]自定义节点类型\r\n              //具体公司\r\n              children: [\r\n            {\r\n              id: \"subcompany1-1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"华阳新材|600281\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n          ]\r\n            },\r\n          ]\r\n\r\n            },\r\n            {\r\n              id: \"product2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"机动车维修服务\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"4\", // [可选]自定义节点类型\r\n\r\n                  //产品对应公司\r\n                  children: [\r\n            {\r\n              id: \"subcompany2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"公司\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"3\", // [可选]自定义节点类型\r\n              //具体公司\r\n              children: [\r\n            {\r\n              id: \"subcompany2-1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"北方股份|600262\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n          ]\r\n            },\r\n          ]\r\n\r\n            },\r\n            {\r\n              id: \"product3\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"汽车贸易\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"4\", // [可选]自定义节点类型\r\n\r\n                  //产品对应公司\r\n                  children: [\r\n            {\r\n              id: \"subcompany3\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"公司\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"3\", // [可选]自定义节点类型\r\n              //具体公司\r\n              children: [\r\n            {\r\n              id: \"subcompany3-1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"国机汽车|600335\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n            {\r\n              id: \"subcompany3-2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"锦江在线|000650\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n          ]\r\n            },\r\n          ]\r\n\r\n            },\r\n            {\r\n              id: \"product4\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"汽车美容服务\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"4\", // [可选]自定义节点类型\r\n\r\n              //产品对应公司\r\n              children: [\r\n            {\r\n              id: \"subcompany4\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"公司\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"3\", // [可选]自定义节点类型\r\n              //具体公司\r\n              children: [\r\n            {\r\n              id: \"subcompany4-1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"岭南控股|000524\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n            {\r\n              id: \"subcompany4-2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"*ST中期|000996\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n          ]\r\n            },\r\n          ]\r\n            },\r\n            {\r\n              id: \"product5\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"汽车物流服务\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"4\", // [可选]自定义节点类型\r\n\r\n                 //产品对应公司\r\n                 children: [\r\n            {\r\n              id: \"subcompany5\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"公司\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"3\", // [可选]自定义节点类型\r\n              //具体公司\r\n              children: [\r\n            {\r\n              id: \"subcompany5-1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"岭南控股|000524\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n            {\r\n              id: \"subcompany5-2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n              topic: \"*ST中期|000996\", // [必选] 节点上显示的内容\r\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n              type: \"2\", // [可选]自定义节点类型\r\n            },\r\n          ]\r\n            },\r\n          ]\r\n            },\r\n          ]\r\n            },\r\n           \r\n          ],\r\n        },\r\n      },\r\n\r\n\r\n \r\n      \r\n      zoom: {\r\n        value: 100, // 层级大小\r\n        min: 10, // 最小层级\r\n        max: 400, // 最大层级\r\n      },\r\n      bgMap: {\r\n        //公司\r\n        1: {\r\n          bgcolor: \"#87CEFA \",\r\n          fgcolor: \" #000\",\r\n          original: \"#87CEFA\",\r\n          transparent: \"rgb(25, 144, 255, 0.2)\",\r\n        },\r\n        //根节点\r\n        2: {\r\n          bgcolor: \"#1E90FF\",\r\n          fgcolor: \"#fff\",\r\n          original: \"rgb(100, 201, 53)\",\r\n          transparent: \"rgb(100, 201, 53, 0.2)\",\r\n        },\r\n        3: {\r\n          //其他\r\n          bgcolor: \" \",\r\n          fgcolor: \"#000\",\r\n        },\r\n        4: {\r\n          //人\r\n          bgcolor: \"#FF7F50\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n        5: [\r\n          {\r\n            //发行\r\n            bgcolor: \"#FF6347\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n          {\r\n            bgcolor: \"#fa8072\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n          {\r\n            bgcolor: \"#ff7f50\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n        ],\r\n        6: {\r\n          //项目\r\n          bgcolor: \"#ecb5c9\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n        7: {\r\n          //发行1\r\n          bgcolor: \"#FF6347\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n        8: {\r\n          //发行2\r\n          bgcolor: \"#fa8072\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n        9: {\r\n          //发行3\r\n          bgcolor: \"#ff7f50\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n      },\r\n    \r\n      structure: {\r\n        active: \"right\",\r\n        pathOrginalColor: \"#2B2F36\",\r\n        pathActiveColor: \"#3370FF\",\r\n        rectOrginalColor: \"#C3C6CB\",\r\n        rectActiveColor: \"#BACEFD\",\r\n      },\r\n      dialogVisible: false,\r\n      dialogVisible2: false,\r\n      selectNodeInfo: {\r\n        id: null,\r\n        Name: \"\",\r\n      }, // 选中节点信息\r\n      tempNodeInfo: null, // 保存修改之前的信息\r\n      createType: \"\", // 添加平级or子级\r\n      showMenu: false, // 是否显示右键菜单栏\r\n      menuStyle: {\r\n        top: \"\",\r\n        bottom: \"\",\r\n        left: \"\",\r\n        right: \"\",\r\n      },\r\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]), // 选中types Set\r\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"], // 选中types Array\r\n    };\r\n  },\r\n\r\n  methods: {\r\n   // zoom2: 0.4,\r\n\r\n    handleJMMounted(jm,val2) {\r\n      // 在这里可以访问子组件传来的 this.jm 对象\r\n      console.log(jm);\r\n      console.log(val2);\r\n      //jm.view.setZoom(zoom2)\r\n      this.jmtest=jm;\r\n      this.val3=val2;\r\n    },\r\n\r\n//treeNode组件点击事件,参数类型为jm.node\r\n    handleChildClick(selectedNode) {\r\n     // console.log(handleJMMounted)\r\n      console.log(this.jmtest)//这里可以修改子组件传过来的jm\r\n    //  this.jmtest.view.setZoom(0.4);\r\n    // this.handleJMMounted;\r\n      //this.jm.view.setZoom(0.4)\r\n      // 在这里处理子组件传递过来的数据\r\n      console.log('从子组件传递的数据:', selectedNode);\r\n\r\n      if (selectedNode.parent.topic == \"公司\") \r\n        {\r\n          this.drawerVisible=true\r\n//在dom渲染之后再加载折线图\r\n          this.$nextTick(() => {\r\n    const chart = echarts.init(this.$refs.echartsContainer);\r\n        chart.setOption({\r\n      // 数据用于绘制折线图的配置\r\n      xAxis: {\r\n        type: 'category',\r\n        data: ['2月','3月','4月','5月','6月','7月'],\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n      },\r\n      legend: {\r\n      data: [selectedNode.topic], // 将图例名称传入数组中\r\n      top: 'top',\r\n    },\r\nseries: [\r\n      {\r\n        name: selectedNode.topic,\r\n        type: 'line',\r\n        data: [10, 20, 15, 25, 30, 18],\r\n      },\r\n    ],\r\n    });\r\n  });\r\n        }\r\n\r\n    },\r\n\r\n    querySearch(queryString, cb) {\r\n      console.log(queryString);\r\n      this.remindData = [];\r\n      if (this.input !== \"\") {\r\n        axios\r\n          .post(\"http://localhost:8086//ShareTiShi\", {\r\n            select_name: queryString,\r\n          })\r\n          .then((response) => {\r\n            console.log(\"finish\");\r\n            this.getData = response.data;\r\n            this.getData.forEach((item) => {\r\n              let obj = { value: \"\" };\r\n              obj.value = item;\r\n              this.remindData.push(obj);\r\n            });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        let nameTipsArray = this.remindData;\r\n        // 调用 callback 返回建议列表的数据\r\n        cb(nameTipsArray);\r\n      }\r\n    },\r\n\r\n    handleSelect(item) {\r\n      let regex = /\\[(.+?)\\]/g;\r\n      this.input = item.value.match(regex)[0].replace(\"[\", \"\").replace(\"]\", \"\");\r\n    },\r\n\r\n    search() {\r\n      this.jm.update_node(\"root\", this.input);\r\n      const selectedNode1 = this.jm.get_node(\"root1\");\r\n      this.delChild(selectedNode1);\r\n      this.add_stock(selectedNode1, this.input);\r\n    },\r\n    delChild(node) {\r\n      if (node.children.length != 0) {\r\n        console.log(node.children);\r\n        let len = node.children.length;\r\n        for (var deli = 0; deli < len; ) {\r\n          console.log(node.children[0]);\r\n          this.jm.remove_node(node.children[0]);\r\n          deli = deli + 1;\r\n        }\r\n      }\r\n    },\r\n    // 重置视图\r\n    reset() {\r\n      document.querySelector(\".root\").scrollIntoView({\r\n        block: \"center\",\r\n        behavior: \"smooth\",\r\n      });\r\n    },\r\n\r\n    // 缩小\r\n    zoomOut() {\r\n      this.jmtest.view.zoomOut();\r\n      this.zoom.value = parseInt(this.jmtest.view.actualZoom * 100);\r\n      console.log(this.zoom.value)\r\n    },\r\n    // 放大\r\n    zoomIn() {\r\n      this.jmtest.view.zoomIn();\r\n      this.zoom.value = parseInt(this.jmtest.view.actualZoom * 100);\r\n    },\r\n\r\n    // 循环树结构\r\n    loopTreeData(list, callback) {\r\n      (function doOneFloor(list) {\r\n        if (Array.isArray(list)) {\r\n          for (let i = 0; i < list.length; i++) {\r\n            const item = list[i];\r\n            callback(item, i);\r\n            if (item.children && item.children.length > 0) {\r\n              doOneFloor(item.children);\r\n            }\r\n          }\r\n        }\r\n      })(list);\r\n    },\r\n\r\n    // 设置背景颜色\r\n    setColor() {\r\n      this.jm.set_node_color(\r\n        \"root\",\r\n        this.bgMap[2].bgcolor,\r\n        this.bgMap[2].fgcolor\r\n      );\r\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\r\n      this.loopTreeData(this.mind.data.children, (item) => {\r\n        if (this.selectTypes.length) {\r\n          if (this.selectTypes.includes(item.type)) {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].bgcolor,\r\n              this.bgMap[item.type].fgcolor\r\n            );\r\n          } else {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].transparent,\r\n              \"#fff\"\r\n            );\r\n          }\r\n        } else {\r\n          this.jm.set_node_color(\r\n            item.id,\r\n            this.bgMap[item.type].transparent,\r\n            \"#fff\"\r\n          );\r\n        }\r\n      });\r\n    },\r\n\r\n    // 初始化配置\r\n    init() {\r\n      this.drawer=false;\r\n      this.jm.view.minZoom = 0.1;\r\n      this.jm.view.maxZoom = 5;\r\n\r\n      const element = document.querySelector('.jsmind-inner');\r\n      const style = window.getComputedStyle(element);\r\n      while (style.overflow === 'hidden') {\r\n// 内容发生了溢出\r\nconsole.log(1111)\r\n} \r\nif (style.overflow != 'hidden')\r\n{\r\n  this.zoomOut();\r\n  console.log(2222)\r\n}\r\n\r\nif (style.overflow === 'hidden') {\r\n// 内容发生了溢出\r\nthis.zoomOut();\r\n} \r\n\r\n      this.setColor();\r\n\r\n      //右键菜单\r\n      this.jm.view.add_event(this.editor, \"contextmenu\", (e) => {\r\n        console.log(\"A\");\r\n        const selectedNode = this.jm.get_selected_node();\r\n        console.log(selectedNode);\r\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\r\n          e.preventDefault();\r\n          const el = document.querySelector(\".context-menu .el-menu-item\");\r\n          const width = parseFloat(window.getComputedStyle(el).width);\r\n          const height =\r\n            parseFloat(window.getComputedStyle(el).height) * 3 + 12;\r\n          const windowHeight = window.innerHeight;\r\n          const windowWidth = window.innerWidth;\r\n\r\n          // 极限位置 避免越界\r\n          if (e.clientY + height > windowHeight) {\r\n            this.menuStyle.left = e.clientX + \"px\";\r\n            this.menuStyle.top = \"unset\";\r\n            this.menuStyle.bottom = 0;\r\n          } else if (e.clientX + width > windowWidth) {\r\n            this.menuStyle.top = e.clientY + \"px\";\r\n            this.menuStyle.left = \"unset\";\r\n            this.menuStyle.right = 0;\r\n          } else {\r\n            this.menuStyle.left = e.clientX + \"px\";\r\n            this.menuStyle.top = e.clientY + \"px\";\r\n            this.menuStyle.bottom = \"unset\";\r\n          }\r\n          this.showMenu = true;\r\n          if (selectedNode.topic == \"下游产品\") {\r\n            this.select = true;\r\n          } else {\r\n            this.select = false;\r\n          }\r\n        } else {\r\n          this.showMenu = false;\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    // 获取选中标签的 ID\r\n    get_selected_nodeid() {\r\n      const selectedNode = this.jm.get_selected_node();\r\n      if (selectedNode) {\r\n        return selectedNode.id;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    sureEditNode() {},\r\n    // 拖拽\r\n    handleDrop(draggingNode, dropNode) {\r\n      // 前一个兄弟节点\r\n      const prevNode = this.jm.find_node_before(dropNode);\r\n      // 获取移动后的node\r\n      const dragForm = {\r\n        modelId: \"\",\r\n        treeNum: !prevNode ? draggingNode : prevNode.id,\r\n        thisTreeNum: dropNode,\r\n      };\r\n      //console.log(\"dragForm\", dragForm);\r\n\r\n      // TODO 调接口\r\n    },\r\n\r\n    add_company(addnode, company) {\r\n      //console.log(addnode);\r\n      if (addnode.data && addnode.topic == \"董事长\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"董事长\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"总裁\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"总裁\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"首席运营官\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"首席运营官\",\r\n          })\r\n          .then((response) => {\r\n            //console.log(\"生产公司\" + response);\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"监事\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"监事\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"董事会秘书\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"董事会秘书\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"发行\") {\r\n        axios\r\n          .post(\"http://localhost:8086/faxing\", {\r\n            select_name: company,\r\n            relation: \"发行\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i].ChiName;\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                let num = 7 + this.lista[i].Stock;\r\n                newNode1.type = num;\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"参股公司\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"参股公司\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"控股股东\") {\r\n         axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"控股股东\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"大股东\") {\r\n        axios\r\n          .post(\"http://localhost:8086/gudong\", {\r\n            select_name: company,\r\n            //relation: \"大股东\",\r\n          })\r\n          .then((response) => {\r\n            if ((response.data.company.length ==0 || !response.data.person.length == 0) && addnode.parent.id != \"root\") {\r\n              console.log(response.data.company.length)\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              console.log(response.data)\r\n              this.lista = response.data.person;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n              \r\n              this.listb = response.data.company;\r\n              console.log(\"b:\"+ this.listb)\r\n              for (var i = 0; i < this.listb.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.listb[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              \r\n            }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"投资\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"投资\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"6\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.$message.error(\"something wrong\");\r\n      }\r\n      this.jm.collapse_node(addnode);\r\n    },\r\n    add_person(addnode, person) {\r\n      if (addnode.data && addnode.topic == \"担任董事长\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任董事长\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            }\r\n            this.lista = response.data;\r\n            var len = this.lista.length;\r\n\r\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n              let nodeid = jsMind.util.uuid.newid();\r\n              let topic = this.lista[i];\r\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n              newNode1.type = \"1\";\r\n              this.jm.set_node_color(\r\n                newNode1.id,\r\n                this.bgMap[newNode1.type].bgcolor,\r\n                this.bgMap[newNode1.type].fgcolor\r\n              );\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"担任总裁\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任总裁\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"担任首席运营官\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任首席运营官\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"担任监事\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任监事\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"担任董事会秘书\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任董事会秘书\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"实际控制人\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"实际控制人\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.$message.error(\"something wrong\" + addnode.topic);\r\n      }\r\n      this.jm.collapse_node(addnode);\r\n    },\r\n    add_stock(addnode, share) {\r\n      //console.log(addnode);\r\n      if (addnode.data && addnode.topic == \"发行公司\") {\r\n        axios\r\n          .post(\"http://localhost:8086/share\", {\r\n            select_name: share,\r\n            relation: \"发行公司\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            }\r\n            this.lista = response.data;\r\n            console.log(this.lista);\r\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n              let nodeid = jsMind.util.uuid.newid();\r\n              let topic = this.lista[i];\r\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n              newNode1.type = \"1\";\r\n              this.jm.set_node_color(\r\n                newNode1.id,\r\n                this.bgMap[newNode1.type].bgcolor,\r\n                this.bgMap[newNode1.type].fgcolor\r\n              );\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.$message.error(\"something wrong\");\r\n      }\r\n      this.jm.collapse_node(addnode);\r\n    },\r\n    query_conditional() {\r\n      const selectedNode = this.jm.get_selected_node();\r\n      if (selectedNode.data) {\r\n        this.dialogVisible = true;\r\n      } else {\r\n        this.$message.error(\"请选择卡片\");\r\n      }\r\n\r\n      this.showMenu = false;\r\n    },\r\n    query_conditional() {\r\n      const selectedNode = this.jm.get_selected_node();\r\n      if (selectedNode.data) {\r\n        this.dialogVisible = true;\r\n      } else {\r\n        this.$message.error(\"请选择卡片\");\r\n      }\r\n\r\n      this.showMenu = false;\r\n    },\r\n    color_conditional() {\r\n      this.dialogVisible2 = true;\r\n      this.showMenu = false;\r\n    },\r\n    nodeClick() {\r\n      this.showMenu = false;\r\n      const selectedNode = this.jm.get_selected_node();\r\n      console.log(selectedNode.id)\r\n      //let newNode1 = this.jm.add_node(selectedNode, \"table1\", \"topic1\");*/\r\n      if (!selectedNode) return;\r\n      //console.log(selectedNode.type)\r\n      if (selectedNode) {\r\n  console.log(selectedNode); // 打印selectedNode对象，查看其中的内容\r\n  console.log(selectedNode.data.type);\r\n}\r\n      if (selectedNode.data) {\r\n        console.log(selectedNode.type);\r\n\r\n        if (selectedNode.parent.topic == \"公司\") \r\n        {\r\n          this.drawerVisible=true\r\n//在dom渲染之后再加载折线图\r\n          this.$nextTick(() => {\r\n    const chart = echarts.init(this.$refs.echartsContainer);\r\n        chart.setOption({\r\n      // 数据用于绘制折线图的配置\r\n      xAxis: {\r\n        type: 'category',\r\n        data: ['2月','3月','4月','5月','6月','7月'],\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n      },\r\n      legend: {\r\n      data: [selectedNode.topic], // 将图例名称传入数组中\r\n      top: 'top',\r\n    },\r\nseries: [\r\n      {\r\n        name: selectedNode.topic,\r\n        type: 'line',\r\n        data: [10, 20, 15, 25, 30, 18],\r\n      },\r\n    ],\r\n    });\r\n  });\r\n        }\r\n        if (selectedNode.children.length != 0) {\r\n          this.jm.toggle_node(selectedNode);\r\n          \r\n        } else if (selectedNode.type == 1) {\r\n          console.log(\"type=1\");\r\n          let nodeid1 = jsMind.util.uuid.newid();\r\n          let nodeid2 = jsMind.util.uuid.newid();\r\n          let nodeid3 = jsMind.util.uuid.newid();\r\n          let nodeid4 = jsMind.util.uuid.newid();\r\n          let nodeid5 = jsMind.util.uuid.newid();\r\n          let nodeid6 = jsMind.util.uuid.newid();\r\n          let nodeid7 = jsMind.util.uuid.newid();\r\n          let nodeid8 = jsMind.util.uuid.newid();\r\n          let nodeid9 = jsMind.util.uuid.newid();\r\n          let nodeid10 = jsMind.util.uuid.newid();\r\n          let topic1 = \"董事长\";\r\n          let topic2 = \"总裁\";\r\n          let topic3 = \"首席运营官\";\r\n          let topic4 = \"监事\";\r\n          let topic5 = \"董事会秘书\";\r\n          let topic6 = \"发行\";\r\n          let topic7 = \"参股公司\";\r\n          let topic8 = \"控股股东\";\r\n          let topic9 = \"大股东\";\r\n          let topic10 = \"投资\";\r\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\r\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\r\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\r\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\r\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\r\n          let newNode7 = this.jm.add_node(selectedNode, nodeid7, topic7);\r\n          let newNode8 = this.jm.add_node(selectedNode, nodeid8, topic8);\r\n          let newNode9 = this.jm.add_node(selectedNode, nodeid9, topic9);\r\n          let newNode10 = this.jm.add_node(selectedNode, nodeid10, topic10);\r\n          newNode1.type = \"3\";\r\n          newNode2.type = \"3\";\r\n          newNode3.type = \"3\";\r\n          newNode4.type = \"3\";\r\n          newNode5.type = \"3\";\r\n          newNode6.type = \"3\";\r\n          newNode7.type = \"3\";\r\n          newNode8.type = \"3\";\r\n          newNode9.type = \"3\";\r\n          newNode10.type = \"3\";\r\n          this.jm.set_node_color(\r\n            newNode1.id,\r\n            this.bgMap[newNode1.type].bgcolor,\r\n            this.bgMap[newNode1.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode2.id,\r\n            this.bgMap[newNode2.type].bgcolor,\r\n            this.bgMap[newNode2.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode3.id,\r\n            this.bgMap[newNode3.type].bgcolor,\r\n            this.bgMap[newNode3.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode4.id,\r\n            this.bgMap[newNode4.type].bgcolor,\r\n            this.bgMap[newNode4.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode5.id,\r\n            this.bgMap[newNode5.type].bgcolor,\r\n            this.bgMap[newNode5.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode6.id,\r\n            this.bgMap[newNode6.type].bgcolor,\r\n            this.bgMap[newNode6.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode7.id,\r\n            this.bgMap[newNode7.type].bgcolor,\r\n            this.bgMap[newNode7.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode8.id,\r\n            this.bgMap[newNode8.type].bgcolor,\r\n            this.bgMap[newNode8.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode9.id,\r\n            this.bgMap[newNode9.type].bgcolor,\r\n            this.bgMap[newNode9.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode10.id,\r\n            this.bgMap[newNode10.type].bgcolor,\r\n            this.bgMap[newNode10.type].fgcolor\r\n          );\r\n          this.add_company(newNode1, selectedNode.topic);\r\n          this.add_company(newNode2, selectedNode.topic);\r\n          this.add_company(newNode3, selectedNode.topic);\r\n          this.add_company(newNode4, selectedNode.topic);\r\n          this.add_company(newNode5, selectedNode.topic);\r\n          this.add_company(newNode6, selectedNode.topic);\r\n          this.add_company(newNode7, selectedNode.topic);\r\n          this.add_company(newNode8, selectedNode.topic);\r\n          this.add_company(newNode9, selectedNode.topic);\r\n          this.add_company(newNode10, selectedNode.topic);\r\n        } else if (selectedNode.type == 4) {\r\n          console.log(\"type=4\");\r\n          let nodeid1 = jsMind.util.uuid.newid();\r\n          let nodeid2 = jsMind.util.uuid.newid();\r\n          let nodeid3 = jsMind.util.uuid.newid();\r\n          let nodeid4 = jsMind.util.uuid.newid();\r\n          let nodeid5 = jsMind.util.uuid.newid();\r\n          let nodeid6 = jsMind.util.uuid.newid();\r\n          let topic1 = \"担任董事长\";\r\n          let topic2 = \"担任总裁\";\r\n          let topic3 = \"担任首席运营官\";\r\n          let topic4 = \"担任监事\";\r\n          let topic5 = \"担任董事会秘书\";\r\n          let topic6 = \"实际控制人\";\r\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\r\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\r\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\r\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\r\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\r\n          newNode1.type = \"3\";\r\n          newNode2.type = \"3\";\r\n          newNode3.type = \"3\";\r\n          newNode4.type = \"3\";\r\n          newNode5.type = \"3\";\r\n          newNode6.type = \"3\";\r\n          this.jm.set_node_color(\r\n            newNode1.id,\r\n            this.bgMap[newNode1.type].bgcolor,\r\n            this.bgMap[newNode1.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode2.id,\r\n            this.bgMap[newNode2.type].bgcolor,\r\n            this.bgMap[newNode2.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode3.id,\r\n            this.bgMap[newNode3.type].bgcolor,\r\n            this.bgMap[newNode3.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode4.id,\r\n            this.bgMap[newNode4.type].bgcolor,\r\n            this.bgMap[newNode4.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode5.id,\r\n            this.bgMap[newNode5.type].bgcolor,\r\n            this.bgMap[newNode5.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode6.id,\r\n            this.bgMap[newNode6.type].bgcolor,\r\n            this.bgMap[newNode6.type].fgcolor\r\n          );\r\n          this.add_person(newNode1, selectedNode.topic);\r\n          this.add_person(newNode2, selectedNode.topic);\r\n          this.add_person(newNode3, selectedNode.topic);\r\n          this.add_person(newNode4, selectedNode.topic);\r\n          this.add_person(newNode5, selectedNode.topic);\r\n          this.add_person(newNode6, selectedNode.topic);\r\n        } else if (selectedNode.type == 5) {\r\n          console.log(\"type=5\");\r\n          let nodeid1 = jsMind.util.uuid.newid();\r\n          let topic1 = \"发行公司\";\r\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n          newNode1.type = \"3\";\r\n          this.jm.set_node_color(\r\n            newNode1.id,\r\n            this.bgMap[newNode1.type].bgcolor,\r\n            this.bgMap[newNode1.type].fgcolor\r\n          );\r\n          this.add_stock(newNode1, selectedNode.topic);\r\n        } else {\r\n          console.log(\"type=无\");\r\n          console.log(selectedNode.type);\r\n          this.$message({\r\n            showClose: true,\r\n         //   message: \"没有\" + selectedNode.topic,\r\n          });\r\n        }\r\n      } else {\r\n        this.$message.error(\"wrong\");\r\n      }\r\n    },\r\n    delCard() {\r\n      const selectedNode = this.jmtest.get_selected_node();\r\n      if (selectedNode.data) {\r\n        // TODO\r\n        this.jmtest.remove_node(selectedNode.id);\r\n        // 获取数据\r\n        console.log(this.jmtest.get_data(\"node_tree\"));\r\n      } else {\r\n        this.$message.error(\"请选择卡片\");\r\n      }\r\n      this.showMenu = false;\r\n    },\r\n    // 鼠标滚轮放大缩小\r\n    mouseWheel() {\r\n      if (document.addEventListener) {\r\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\r\n      }\r\n      this.$refs.container.onmousewheel = this.scrollFunc;\r\n    },\r\n    // 滚轮缩放\r\n    scrollFunc(e) {\r\n      e = e || window.event;\r\n      if (e.wheelDelta) {\r\n        if (e.wheelDelta > 0) {\r\n          this.zoomIn();\r\n        } else {\r\n          this.zoomOut();\r\n        }\r\n      } else if (e.detail) {\r\n        if (e.detail > 0) {\r\n          this.zoomIn();\r\n        } else {\r\n          this.zoomOut();\r\n        }\r\n      }\r\n      e.preventDefault();\r\n      this.jmtest.resize();\r\n    },\r\n\r\n    // 更改颜色\r\n    changecolor() {\r\n      console.log(this.bgMap[4].bgcolor);\r\n      const node = this.jm.get_node(\"root\");\r\n      this.loopTreeData(node.children, (item) =>\r\n        this.jm.set_node_color(\r\n          item.id,\r\n          this.bgMap[item.type || 3].bgcolor,\r\n          this.bgMap[item.type || 3].fgcolor\r\n        )\r\n      );\r\n      this.dialogVisible2 = false;\r\n    },\r\n    // 导出图片\r\n    screen_shot() {\r\n      // 去除透明度\r\n      const node = this.jm.get_node(\"root\");\r\n      this.loopTreeData(node.children, (item) =>\r\n        this.jm.set_node_color(\r\n          item.id,\r\n          this.bgMap[item.type || 3].bgcolor,\r\n          this.bgMap[item.type || 3].fgcolor\r\n        )\r\n      );\r\n      try {\r\n        this.jm.screenshot.shootDownload();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setTimeout(() => {\r\n        this.setColor();\r\n      }, 1000);\r\n    },\r\n    // 鼠标拖拽\r\n    mouseDrag() {\r\n      // 里层\r\n      const el = document.querySelector(\".jsmind-inner\");\r\n      // 选中节点\r\n      let selected;\r\n\r\n      el.onmousedown = (ev) => {\r\n        // 选中节点\r\n        selected = this.jmtest.get_selected_node();\r\n        // 标识 是否拖拽节点 避免冲突\r\n        this.dragNodeFlag = !!selected;\r\n\r\n        const disX = ev.clientX;\r\n        const disY = ev.clientY;\r\n        const originalScrollLeft = el.scrollLeft;\r\n        const originalScrollTop = el.scrollTop;\r\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\r\n        const originalPointerEvents = el.style[\"pointer-events\"];\r\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\r\n        el.style[\"scroll-behavior\"] = \"auto\";\r\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\r\n        document.onmousemove = (ev) => {\r\n          if (this.dragNodeFlag) return;\r\n          this.drag = false;\r\n          ev.preventDefault();\r\n          // 计算拖拽的偏移距离\r\n          const distanceX = ev.clientX - disX;\r\n          const distanceY = ev.clientY - disY;\r\n\r\n          el.scrollTo(\r\n            originalScrollLeft - distanceX,\r\n            originalScrollTop - distanceY\r\n          );\r\n\r\n          // 在鼠标拖动的时候将点击事件屏蔽掉\r\n          el.style[\"pointer-events\"] = \"none\";\r\n          el.style.cursor = \"grabbing\";\r\n        };\r\n        document.onmouseup = () => {\r\n          if (!this.dragNodeFlag) {\r\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\r\n            el.style[\"pointer-events\"] = originalPointerEvents;\r\n            el.style.cursor = \"grab\";\r\n          }\r\n          document.onmousemove = document.onmouseup = null;\r\n        };\r\n      };\r\n    },\r\n  },\r\n\r\n  beforeDestroy() {\r\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"../assets/css/style.less\";\r\n\r\n.title2{\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  position: absolute;\r\n  top: 30%;\r\n  left: 0%;\r\n}\r\n\r\n.text{\r\n  font-size: 20px;\r\n  margin-bottom: 15px;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.jsmind_layout2 {\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  .jsmind_toolbar {\r\n    width: 100%;\r\n    padding: 0 10px 0px 10px;\r\n    height: auto;\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    background-color: #f8f9fa;\r\n    box-shadow: 0 0 4px #b8b8b8;\r\n  }\r\n\r\n  /deep/ .el-button--medium,\r\n  /deep/ .el-input--medium {\r\n    margin-top: 10px;\r\n  }\r\n\r\n\r\n  #jsmind_container2 {\r\n      //flex: 1 1 auto;\r\nwidth: 100%; /* 设置宽度为父元素宽度的50% */\r\nheight: 100%; /* 设置高度 */\r\nposition: relative;\r\ntop: 0%;\r\nleft: 20%;\r\ntransform: translate(0, 0);\r\n}\r\n\r\n  /deep/.el-upload-list {\r\n    display: none !important;\r\n  }\r\n\r\n  .pad {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .pad-left {\r\n    margin-left: 10px;\r\n  }\r\n\r\n  jmnode {\r\n    max-width: unset;\r\n    color: #fff;\r\n    background-color: #ddd;\r\n\r\n    &.selected {\r\n      color: #fff !important;\r\n      border: 1px solid #777;\r\n      transition: 0s;\r\n    }\r\n  }\r\n\r\n  /deep/ jmnode.selected {\r\n    background-color: #b9b9b9;\r\n    color: #fff;\r\n    box-shadow: 2px 2px 8px #777;\r\n  }\r\n\r\n  /deep/ jmnode:hover {\r\n    box-shadow: 2px 2px 8px #777;\r\n  }\r\n}\r\n\r\n.echarts-container {\r\n  margin-top: 100px;\r\nwidth: 100%;\r\nheight: 300px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n}\r\n/*\r\n.jsmind-inner2 {\r\n    &::-webkit-scrollbar {\r\n    height: 10px;\r\n  }\r\n}\r\n*/\r\n\r\n</style>\r\n"],"mappings":"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kBAAA;kBACA6B,KAAA;kBAAA;kBACAE,SAAA;kBAAA;kBACAD,QAAA;kBAAA;kBACAjC,IAAA;gBACA;cAEA;YAEA,GACA;cACAG,EAAA;cAAA;cACA6B,KAAA;cAAA;cACAE,SAAA;cAAA;cACAD,QAAA;cAAA;cACAjC,IAAA;cAAA;;cAEA;cACAJ,QAAA,GACA;gBACAO,EAAA;gBAAA;gBACA6B,KAAA;gBAAA;gBACAE,SAAA;gBAAA;gBACAD,QAAA;gBAAA;gBACAjC,IAAA;gBAAA;gBACA;gBACAJ,QAAA,GACA;kBACAO,EAAA;kBAAA;kBACA6B,KAAA;kBAAA;kBACAE,SAAA;kBAAA;kBACAD,QAAA;kBAAA;kBACAjC,IAAA;gBACA,GACA;kBACAG,EAAA;kBAAA;kBACA6B,KAAA;kBAAA;kBACAE,SAAA;kBAAA;kBACAD,QAAA;kBAAA;kBACAjC,IAAA;gBACA;cAEA;YAEA;UAEA;QAGA;MACA;;MAKAd,IAAA;QACAiD,KAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;MACA;;MACAjC,KAAA;QACA;QACA;UACAC,OAAA;UACAC,OAAA;UACAgC,QAAA;UACA/B,WAAA;QACA;QACA;QACA;UACAF,OAAA;UACAC,OAAA;UACAgC,QAAA;UACA/B,WAAA;QACA;QACA;UACA;UACAF,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA,IACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA,GACA;UACAD,OAAA;UACAC,OAAA;QACA,GACA;UACAD,OAAA;UACAC,OAAA;QACA,EACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;MACA;MAEAI,SAAA;QACAC,MAAA;QACAE,gBAAA;QACAD,eAAA;QACAI,gBAAA;QACAD,eAAA;MACA;MACAwB,aAAA;MACAC,cAAA;MACAC,cAAA;QACAtC,EAAA;QACAuC,IAAA;MACA;MA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}