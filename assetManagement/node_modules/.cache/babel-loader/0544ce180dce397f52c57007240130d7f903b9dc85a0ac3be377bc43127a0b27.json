{"ast":null,"code":"export default {\n  name: '',\n  data() {\n    return {\n      tabList: ['城市热销', '看了又看', '再看一遍'],\n      tabLen: '',\n      currentIndex: 0,\n      slideLeft: ''\n    };\n  },\n  methods: {\n    // 点击时的下划线跟随效果\n    clickTab(index) {\n      this.currentIndex = index;\n      // 算出一个tab所占屏幕的宽度，除以2是为了让下划线待在tab标签宽度二分之一处，因为css中给line标签样式使用了绝对定位，并且设置了margin负值，所以这个位置可以让line正好在tab标签下面居中\n      const left = 100 / this.tabLen / 2;\n      // 一次滑动二分一tab标签值\n      // 三个标签，可以看成把屏幕分成了6份，每人占2份\n      // 第一个下划线，从第1份的地方开始，是0*2+1\n      // 第二个下划线，从第3份的地方开始，是1*2+1\n      // 第三个下划线，从第5份的地方开始, 是2*2+1\n      this.slideLeft = left * (index * 2 + 1) + '%';\n    },\n    // 刚进入页面没有点击时的下划线设置\n    slideLineLeft() {\n      this.tabLen = this.tabList.length;\n      const left = 100 / this.tabLen / 2;\n      this.slideLeft = left * (this.currentIndex * 2 + 1) + '%';\n    }\n  },\n  mounted() {\n    this.slideLineLeft();\n    // 如果不写这个函数，页面刚加载时默认tab的下划线位置是不对的\n  }\n};","map":{"version":3,"names":["name","data","tabList","tabLen","currentIndex","slideLeft","methods","clickTab","index","left","slideLineLeft","length","mounted"],"sources":["src/components/test.vue"],"sourcesContent":["<template>\r\n    <ul class=\"tabs\">\r\n      <i class=\"line\" :style=\"{left: slideLeft}\"></i>\r\n      <li v-for=\"(item, index) in tabList\" :key=\"index\" class=\"tab\" :class=\"{'tab-current':  index == currentIndex}\" @click=\"clickTab(index)\">{{item}}</li>\r\n    </ul>\r\n\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: '',\r\n    data () {\r\n      return {\r\n        tabList: ['城市热销', '看了又看', '再看一遍'],\r\n        tabLen: '',\r\n        currentIndex: 0,\r\n        slideLeft: ''\r\n      }\r\n    },\r\n    methods: {\r\n      // 点击时的下划线跟随效果\r\n      clickTab (index) {\r\n        this.currentIndex = index\r\n        // 算出一个tab所占屏幕的宽度，除以2是为了让下划线待在tab标签宽度二分之一处，因为css中给line标签样式使用了绝对定位，并且设置了margin负值，所以这个位置可以让line正好在tab标签下面居中\r\n        const left = 100 / this.tabLen / 2\r\n        // 一次滑动二分一tab标签值\r\n        // 三个标签，可以看成把屏幕分成了6份，每人占2份\r\n        // 第一个下划线，从第1份的地方开始，是0*2+1\r\n        // 第二个下划线，从第3份的地方开始，是1*2+1\r\n        // 第三个下划线，从第5份的地方开始, 是2*2+1\r\n        this.slideLeft = left * (index * 2 + 1) + '%'\r\n      },\r\n      // 刚进入页面没有点击时的下划线设置\r\n      slideLineLeft () {\r\n        this.tabLen = this.tabList.length\r\n        const left = 100 / this.tabLen / 2\r\n        this.slideLeft = left * (this.currentIndex * 2 + 1) + '%'\r\n      }\r\n    },\r\n    mounted () {\r\n      this.slideLineLeft()\r\n      // 如果不写这个函数，页面刚加载时默认tab的下划线位置是不对的\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  \r\n  \r\n  <style lang=\"less\">\r\n  .tabs{\r\n display: flex;\r\n justify-content: space-around;\r\n text-align: center;\r\n position: relative;\r\n  }\r\n .tab{\r\n  font-size: .32rem;\r\n  line-height: .88rem;\r\n  color: #c3c6cd;\r\n }\r\n .tab-current\r\n {\r\n  font-weight: 700;\r\n  color: #1c253a;\r\n }\r\n .line{\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: .20rem;\r\n  margin-left: -.4rem;\r\n  transition: all 0.3s;\r\n  height: .08rem;\r\n  border-radius: .04rem;\r\n  background: #fe686c;\r\n }\r\n    </style>"],"mappings":"AASA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,MAAA;MACAC,YAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,SAAAC,KAAA;MACA,KAAAJ,YAAA,GAAAI,KAAA;MACA;MACA,MAAAC,IAAA,cAAAN,MAAA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAE,SAAA,GAAAI,IAAA,IAAAD,KAAA;IACA;IACA;IACAE,cAAA;MACA,KAAAP,MAAA,QAAAD,OAAA,CAAAS,MAAA;MACA,MAAAF,IAAA,cAAAN,MAAA;MACA,KAAAE,SAAA,GAAAI,IAAA,SAAAL,YAAA;IACA;EACA;EACAQ,QAAA;IACA,KAAAF,aAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}