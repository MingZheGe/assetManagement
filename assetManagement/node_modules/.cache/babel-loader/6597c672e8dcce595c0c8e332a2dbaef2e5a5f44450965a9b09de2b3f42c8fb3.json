{"ast":null,"code":"import { mapGetters } from \"vuex\";\nexport default {\n  computed: {\n    ...mapGetters(\"mainStore\", {\n      usuallyRecord: \"usuallyRecord\"\n    }),\n    totalExpenses() {\n      const res = this.usuallyRecord.filter(r => r.type === \"expend\");\n      return res.reduce((acc, cur) => acc + cur.amount, 0).toFixed(2);\n    },\n    averageExpend() {\n      return (this.totalExpenses / new Date().getMonth()).toFixed(2);\n    }\n  },\n  data() {\n    return {\n      //num: Math.floor(Math.random() * 100),\n      num: 34,\n      gongji: \"100\",\n      bishu: \"100\",\n      zhichu: \"100\"\n    };\n  },\n  computed: {\n    line() {\n      return 2 * Math.PI * 26;\n    },\n    dashArrayWidth() {\n      return {\n        start: `0,${this.line}`,\n        end: `${this.line * (this.num / 100)},${this.line * ((100 - this.num) / 100)}`\n      };\n    }\n  },\n  methods: {\n    init() {\n      this.myChart = echarts.init(this.$refs.main);\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          }\n        },\n        xAxis: {\n          data: [\"1月\", \"2月\", \"4月\", \"5月\", \"6月\"],\n          boundaryGap: false\n        },\n        yAxis: {\n          show: false\n        },\n        series: [{\n          data: [100, 200, 160, 80, 300],\n          type: \"line\",\n          smooth: true,\n          lineStyle: {\n            width: 0\n          },\n          showSymbol: false,\n          areaStyle: {\n            opacity: 0.8,\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: \"rgb(128, 255, 165)\"\n            }, {\n              offset: 1,\n              color: \"rgb(1, 191, 236)\"\n            }])\n          }\n        }]\n      };\n      this.myChart.setOption(option);\n    }\n  },\n  created() {\n    this.init();\n  }\n};","map":{"version":3,"names":["mapGetters","computed","usuallyRecord","totalExpenses","res","filter","r","type","reduce","acc","cur","amount","toFixed","averageExpend","Date","getMonth","data","num","gongji","bishu","zhichu","line","Math","PI","dashArrayWidth","start","end","methods","init","myChart","echarts","$refs","main","option","tooltip","trigger","axisPointer","label","backgroundColor","xAxis","boundaryGap","yAxis","show","series","smooth","lineStyle","width","showSymbol","areaStyle","opacity","color","graphic","LinearGradient","offset","setOption","created"],"sources":["src/components/InfoCard.vue"],"sourcesContent":["<template>\r\n  <!-- class=\"info-card\"-->\r\n  <div style=\"display: flex;\">\r\n    <div class=\"info-container\">\r\n      <div class=\"info\">\r\n        <div class=\"info-item\">\r\n          <div>共计支出</div>\r\n          <div class=\"base-amount\">\r\n            <span>{{ this.gongji }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"info-item\">\r\n          <div>记账笔数</div>\r\n          <div class=\"base-amount\">\r\n            {{ this.bishu }}\r\n          </div>\r\n        </div>\r\n        <div class=\"info-item\">\r\n          <div>日均支出</div>\r\n          <div class=\"base-amount\">\r\n            <span>{{ this.zhichu }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"proportion\">\r\n      <div class=\"percentage\">{{ this.num }}%</div>\r\n\r\n      <svg width=\"100px\" height=\"100px\" class=\"svg\">\r\n        <!-- 外圈圆 -->\r\n        <circle\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"30\"\r\n          stroke=\"#daf4ee\"\r\n          stroke-width=\"12\"\r\n          fill=\"none\"\r\n        />\r\n        <!-- 内圈圆，虚线用于展示进度 -->\r\n        <circle\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"26\"\r\n          stroke=\"#3BCEB1\"\r\n          stroke-width=\"12\"\r\n          fill=\"none\"\r\n          :stroke-dasharray=\"dashArrayWidth.end\"\r\n          stroke-linecap=\"round\"\r\n        >\r\n          <!-- svg动画 -->\r\n          <animate\r\n            attributeName=\"stroke-dasharray\"\r\n            :from=\"dashArrayWidth.start\"\r\n            :to=\"dashArrayWidth.end\"\r\n            dur=\".5s\"\r\n          />\r\n          <!-- <animate attributeName=\"stroke\" from=\"#3BCEB1\" to=\"#53d74c\" dur=\"1s\" /> -->\r\n        </circle>\r\n      </svg>\r\n\r\n      <!--\r\n        <div class=\"svg-container\">\r\n          <div class=\"circle-container\">\r\n            <div class=\"circle-outer\"></div>\r\n            <div class=\"circle-inner\" :style=\"{ 'stroke-dasharray': dashArrayWidth.end }\"></div>\r\n          </div>\r\n        </div>\r\n        -->\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapGetters(\"mainStore\", {\r\n      usuallyRecord: \"usuallyRecord\",\r\n    }),\r\n    totalExpenses() {\r\n      const res = this.usuallyRecord.filter((r) => r.type === \"expend\");\r\n      return res.reduce((acc, cur) => acc + cur.amount, 0).toFixed(2);\r\n    },\r\n    averageExpend() {\r\n      return (this.totalExpenses / new Date().getMonth()).toFixed(2);\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      //num: Math.floor(Math.random() * 100),\r\n      num: 34,\r\n      gongji: \"100\",\r\n      bishu: \"100\",\r\n      zhichu: \"100\",\r\n    };\r\n  },\r\n  computed: {\r\n    line() {\r\n      return 2 * Math.PI * 26;\r\n    },\r\n    dashArrayWidth() {\r\n      return {\r\n        start: `0,${this.line}`,\r\n        end: `${this.line * (this.num / 100)},${\r\n          this.line * ((100 - this.num) / 100)\r\n        }`,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.myChart = echarts.init(this.$refs.main);\r\n      const option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n            label: {\r\n              backgroundColor: \"#6a7985\",\r\n            },\r\n          },\r\n        },\r\n        xAxis: {\r\n          data: [\"1月\", \"2月\", \"4月\", \"5月\", \"6月\"],\r\n          boundaryGap: false,\r\n        },\r\n        yAxis: {\r\n          show: false,\r\n        },\r\n        series: [\r\n          {\r\n            data: [100, 200, 160, 80, 300],\r\n            type: \"line\",\r\n            smooth: true,\r\n            lineStyle: {\r\n              width: 0,\r\n            },\r\n            showSymbol: false,\r\n            areaStyle: {\r\n              opacity: 0.8,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: \"rgb(128, 255, 165)\",\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: \"rgb(1, 191, 236)\",\r\n                },\r\n              ]),\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      this.myChart.setOption(option);\r\n    },\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n};\r\n</script>\r\n  \r\n  <style scoped lang=\"less\">\r\n@import \"../styles/common.less\";\r\n.info-card {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  border-radius: 0.2rem;\r\n  //padding: 1rem;\r\n  .info-container {\r\n    flex: 1;\r\n    .info {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      .info-item {\r\n        font-size: 0.8rem;\r\n        color: @gray-1;\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n  .proportion {\r\n    width: 6rem;\r\n    height: 100%;\r\n    position: relative;\r\n    .percentage {\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      width: auto;\r\n      height: auto;\r\n      color: @primary-0;\r\n      font-weight: bold;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n    .svg-container {\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n    .circle-container {\r\n      position: relative;\r\n      width: 100px;\r\n      height: 100px;\r\n      .circle-outer {\r\n        border-radius: 50%;\r\n        width: 100px;\r\n        height: 100px;\r\n        border: 6px solid #daf4ee;\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n      }\r\n      .circle-inner {\r\n        border-radius: 50%;\r\n        width: 100px;\r\n        height: 100px;\r\n        border: 6px solid #3bceb1;\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        transform-origin: center;\r\n        transform: rotate(-90deg);\r\n        stroke-dasharray: 0, 100%;\r\n        stroke-linecap: round;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n  "],"mappings":"AAyEA,SAAAA,UAAA;AAEA;EACAC,QAAA;IACA,GAAAD,UAAA;MACAE,aAAA;IACA;IACAC,cAAA;MACA,MAAAC,GAAA,QAAAF,aAAA,CAAAG,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,IAAA;MACA,OAAAH,GAAA,CAAAI,MAAA,EAAAC,GAAA,EAAAC,GAAA,KAAAD,GAAA,GAAAC,GAAA,CAAAC,MAAA,KAAAC,OAAA;IACA;IACAC,cAAA;MACA,aAAAV,aAAA,OAAAW,IAAA,GAAAC,QAAA,IAAAH,OAAA;IACA;EACA;EACAI,KAAA;IACA;MACA;MACAC,GAAA;MACAC,MAAA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;EACAnB,QAAA;IACAoB,KAAA;MACA,WAAAC,IAAA,CAAAC,EAAA;IACA;IACAC,eAAA;MACA;QACAC,KAAA,YAAAJ,IAAA;QACAK,GAAA,UAAAL,IAAA,SAAAJ,GAAA,WACA,KAAAI,IAAA,gBAAAJ,GAAA,QACA;MACA;IACA;EACA;EACAU,OAAA;IACAC,KAAA;MACA,KAAAC,OAAA,GAAAC,OAAA,CAAAF,IAAA,MAAAG,KAAA,CAAAC,IAAA;MACA,MAAAC,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACA7B,IAAA;YACA8B,KAAA;cACAC,eAAA;YACA;UACA;QACA;QACAC,KAAA;UACAvB,IAAA;UACAwB,WAAA;QACA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,MAAA,GACA;UACA3B,IAAA;UACAT,IAAA;UACAqC,MAAA;UACAC,SAAA;YACAC,KAAA;UACA;UACAC,UAAA;UACAC,SAAA;YACAC,OAAA;YACAC,KAAA,MAAApB,OAAA,CAAAqB,OAAA,CAAAC,cAAA,cACA;cACAC,MAAA;cACAH,KAAA;YACA,GACA;cACAG,MAAA;cACAH,KAAA;YACA,EACA;UACA;QACA;MAEA;MACA,KAAArB,OAAA,CAAAyB,SAAA,CAAArB,MAAA;IACA;EACA;EACAsB,QAAA;IACA,KAAA3B,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}