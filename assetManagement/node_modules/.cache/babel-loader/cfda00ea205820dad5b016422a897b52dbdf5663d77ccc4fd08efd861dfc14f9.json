{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from 'echarts';\nimport { categoryes } from '../types/types'; //只导入特定的属性，变量\nimport dayjs from 'dayjs';\nimport Aside from \"../components/Aside2.vue\";\nimport Topbar from \"../components/Topbar.vue\";\nimport Navbar from \"../components/Navbar.vue\";\nimport BillContainer from \"../components/BillContainer.vue\";\nimport { amountToArray } from '../compute/amountFormat';\nimport { sumCount } from '../compute/amountFormat';\nexport default {\n  components: {\n    Aside,\n    Topbar,\n    Navbar,\n    BillContainer\n  },\n  data() {\n    return {\n      week: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n      income: '',\n      expend: '',\n      myChart: ''\n    };\n  },\n  computed: {\n    totalExpenses() {\n      const res = this.$store.state.mainStore.recordList.usually.filter(r => r.type === 'expend');\n      return res.reduce((acc, cur) => acc + cur.amount, 0);\n    },\n    categoryValue() {\n      const res = [];\n      for (const k in categoryes) {\n        const amount = this.$store.state.mainStore.recordList.usually.reduce((count, item) => {\n          if (item.category === k) count += item.amount;\n          return count;\n        }, 0);\n        res.push({\n          name: categoryes[k].name,\n          value: Math.floor(amount / this.totalExpenses * 100),\n          icon: categoryes[k].icon\n        });\n      }\n      return res;\n    }\n  },\n  methods: {\n    init() {\n      this.$nextTick(() => {\n        // 在 DOM 渲染完成后初始化 ECharts\n        myChart = echarts.init(this.$refs.main);\n        // 其它初始化代码...\n      });\n\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        xAxis: {\n          data: ['1月', '2月', '4月', '5月', '6月'],\n          boundaryGap: false\n        },\n        yAxis: {\n          show: false\n        },\n        series: [{\n          data: [100, 200, 160, 80, 300],\n          type: 'line',\n          smooth: true,\n          lineStyle: {\n            width: 0\n          },\n          showSymbol: false,\n          areaStyle: {\n            opacity: 0.8,\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgb(128, 255, 165)'\n            }, {\n              offset: 1,\n              color: 'rgb(1, 191, 236)'\n            }])\n          }\n        }]\n      };\n      myChart.setOption(option);\n    }\n  },\n  created() {\n    this.init();\n  }\n};","map":{"version":3,"names":["echarts","categoryes","dayjs","Aside","Topbar","Navbar","BillContainer","amountToArray","sumCount","components","data","week","income","expend","myChart","computed","totalExpenses","res","$store","state","mainStore","recordList","usually","filter","r","type","reduce","acc","cur","amount","categoryValue","k","count","item","category","push","name","value","Math","floor","icon","methods","init","$nextTick","$refs","main","option","tooltip","trigger","axisPointer","label","backgroundColor","xAxis","boundaryGap","yAxis","show","series","smooth","lineStyle","width","showSymbol","areaStyle","opacity","color","graphic","LinearGradient","offset","setOption","created"],"sources":["src/views/statistic.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <Topbar title=\"统计\" />\r\n      <Navbar />\r\n      <div class=\"container\">\r\n        <div class=\"flex gap-2 items-end\">\r\n          <div class=\"text-xl color-green\">\r\n            支出\r\n          </div>\r\n          <div>收入</div>\r\n          <div>对比</div>\r\n        </div>\r\n        <div class=\"date flex justify-center\">\r\n          <div class=\"date-item\">5月</div>\r\n          <div class=\"date-item\">6月</div>\r\n          <div class=\"date-item\">7月</div>\r\n          <div class=\"date-item\">8月</div>\r\n          <div class=\"date-item\">9月</div>\r\n          <button class=\"month-select\">月</button>\r\n        </div>\r\n        <div ref=\"main\" class=\"echarts\" style=\"width: 100%; height: 200px;\"></div>\r\n        <!-- <InfoCard />-->\r\n        <div class=\"expenditure-top\">\r\n          <div class=\"base-title\">\r\n            支出排行\r\n          </div>\r\n          <div class=\"item-container\">\r\n            <!--\r\n            <div v-for=\"(i, idx) in categoryValue\" :key=\"idx\" class=\"item\">\r\n              <div class=\"icon\">\r\n                <svg class=\"icon-font\" aria-hidden=\"true\">\r\n                  <use :xlink:href=\"`#icon-${i.icon}`\" />\r\n                </svg>\r\n              </div>\r\n              <div class=\"item-right\">\r\n                <div class=\"base-title\">\r\n                  {{ i.name }}&nbsp;&nbsp;{{ i.value }}%\r\n                </div>\r\n                <div class=\"process-bar\">\r\n                  <div class=\"bar\" :style=\"{ width: i.value + '%' }\">\r\n                    <div></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as echarts from 'echarts'\r\n  import {categoryes} from '../types/types'//只导入特定的属性，变量\r\n  import dayjs from 'dayjs'\r\n  import Aside from \"../components/Aside2.vue\";\r\nimport Topbar from \"../components/Topbar.vue\";\r\nimport Navbar from \"../components/Navbar.vue\";\r\nimport BillContainer from \"../components/BillContainer.vue\";\r\nimport { amountToArray } from '../compute/amountFormat'\r\nimport { sumCount } from '../compute/amountFormat'\r\n\r\n  export default {\r\n    components: {\r\n    Aside,\r\n    Topbar,\r\n    Navbar,\r\n    BillContainer\r\n  },\r\n    data() {\r\n      return {\r\n        week: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\r\n        income: '',\r\n        expend: '',\r\n        myChart:''\r\n      }\r\n    },\r\n    computed: {\r\n      totalExpenses() {\r\n        const res = this.$store.state.mainStore.recordList.usually.filter((r) => r.type === 'expend')\r\n        return res.reduce((acc, cur) => acc + cur.amount, 0)\r\n      },\r\n      categoryValue() {\r\n        const res = []\r\n        for (const k in categoryes) {\r\n          const amount = this.$store.state.mainStore.recordList.usually.reduce((count, item) => {\r\n            if (item.category === k) count += item.amount\r\n            return count\r\n          }, 0)\r\n          res.push({\r\n            name: categoryes[k].name,\r\n            value: Math.floor((amount / this.totalExpenses) * 100),\r\n            icon: categoryes[k].icon,\r\n          })\r\n        }\r\n        return res\r\n      },\r\n    },\r\n    methods: {\r\n      init() {\r\n        this.$nextTick(() => {\r\n        // 在 DOM 渲染完成后初始化 ECharts\r\n        myChart = echarts.init(this.$refs.main)\r\n        // 其它初始化代码...\r\n      })\r\n        const option = {\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'cross',\r\n              label: {\r\n                backgroundColor: '#6a7985',\r\n              },\r\n            },\r\n          },\r\n          xAxis: {\r\n            data: ['1月', '2月', '4月', '5月', '6月'],\r\n            boundaryGap: false,\r\n          },\r\n          yAxis: {\r\n            show: false,\r\n          },\r\n          series: [\r\n            {\r\n              data: [100, 200, 160, 80, 300],\r\n              type: 'line',\r\n              smooth: true,\r\n              lineStyle: {\r\n                width: 0,\r\n              },\r\n              showSymbol: false,\r\n              areaStyle: {\r\n                opacity: 0.8,\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  {\r\n                    offset: 0,\r\n                    color: 'rgb(128, 255, 165)',\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: 'rgb(1, 191, 236)',\r\n                  },\r\n                ]),\r\n              },\r\n            },\r\n          ],\r\n        }\r\n        myChart.setOption(option)\r\n      },\r\n    },\r\n    created() {\r\n      this.init()\r\n    },\r\n  }\r\n  </script>\r\n  \r\n  <style scoped lang=\"less\">\r\n  @import '../styles/common.less';\r\n  .container {\r\n    padding: 1rem;\r\n  \r\n    .date {\r\n      margin: 1rem 0;\r\n      display: flex;\r\n      font-size: small;\r\n      justify-content: space-evenly;\r\n  \r\n      .date-item {\r\n        color: @gray-2;\r\n        padding: .3rem .8rem;\r\n        border-radius: .6rem;\r\n        background-color: rgb(237, 250, 248);\r\n      }\r\n  \r\n      .month-select {\r\n        color: @primary-0;\r\n      }\r\n    }\r\n  \r\n    .echarts {\r\n      width: 100%;\r\n      height: 200px;\r\n    }\r\n  \r\n    .expenditure-top {\r\n      background-color: #fff;\r\n      border-radius: .2rem;\r\n      padding: 1em;\r\n  \r\n      .item-container {\r\n        .item {\r\n          display: flex;\r\n          align-items: center;\r\n          padding-bottom: .4rem;\r\n          gap: .5rem;\r\n  \r\n          .icon {\r\n            border: .5rem;\r\n            background-color: @primary-8;\r\n            border-radius: .5rem;\r\n          }\r\n  \r\n          .item-right {\r\n            flex: 1;\r\n          }\r\n  \r\n          .process-bar {\r\n            position: relative;\r\n            width: 100%;\r\n            height: 10px;\r\n            background-color: @primary-3;\r\n            border-radius: 5px;\r\n  \r\n            .bar {\r\n              height: 100%;\r\n              div {\r\n                width: 100%;\r\n                height: 100%;\r\n                border-radius: 5px;\r\n                background-color: @primary-1;\r\n                animation: load-bar .5s ease-out;\r\n              }\r\n            }\r\n  \r\n            @keyframes load-bar {\r\n              0% {\r\n                width: 0;\r\n              }\r\n  \r\n              100% {\r\n                width: 100%;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":";AAqDA,YAAAA,OAAA;AACA,SAAAC,UAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,MAAA;AACA,OAAAC,MAAA;AACA,OAAAC,aAAA;AACA,SAAAC,aAAA;AACA,SAAAC,QAAA;AAEA;EACAC,UAAA;IACAN,KAAA;IACAC,MAAA;IACAC,MAAA;IACAC;EACA;EACAI,KAAA;IACA;MACAC,IAAA;MACAC,MAAA;MACAC,MAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,cAAA;MACA,MAAAC,GAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,SAAA,CAAAC,UAAA,CAAAC,OAAA,CAAAC,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,IAAA;MACA,OAAAR,GAAA,CAAAS,MAAA,EAAAC,GAAA,EAAAC,GAAA,KAAAD,GAAA,GAAAC,GAAA,CAAAC,MAAA;IACA;IACAC,cAAA;MACA,MAAAb,GAAA;MACA,WAAAc,CAAA,IAAA9B,UAAA;QACA,MAAA4B,MAAA,QAAAX,MAAA,CAAAC,KAAA,CAAAC,SAAA,CAAAC,UAAA,CAAAC,OAAA,CAAAI,MAAA,EAAAM,KAAA,EAAAC,IAAA;UACA,IAAAA,IAAA,CAAAC,QAAA,KAAAH,CAAA,EAAAC,KAAA,IAAAC,IAAA,CAAAJ,MAAA;UACA,OAAAG,KAAA;QACA;QACAf,GAAA,CAAAkB,IAAA;UACAC,IAAA,EAAAnC,UAAA,CAAA8B,CAAA,EAAAK,IAAA;UACAC,KAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAV,MAAA,QAAAb,aAAA;UACAwB,IAAA,EAAAvC,UAAA,CAAA8B,CAAA,EAAAS;QACA;MACA;MACA,OAAAvB,GAAA;IACA;EACA;EACAwB,OAAA;IACAC,KAAA;MACA,KAAAC,SAAA;QACA;QACA7B,OAAA,GAAAd,OAAA,CAAA0C,IAAA,MAAAE,KAAA,CAAAC,IAAA;QACA;MACA;;MACA,MAAAC,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAxB,IAAA;YACAyB,KAAA;cACAC,eAAA;YACA;UACA;QACA;QACAC,KAAA;UACA1C,IAAA;UACA2C,WAAA;QACA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,MAAA,GACA;UACA9C,IAAA;UACAe,IAAA;UACAgC,MAAA;UACAC,SAAA;YACAC,KAAA;UACA;UACAC,UAAA;UACAC,SAAA;YACAC,OAAA;YACAC,KAAA,MAAA/D,OAAA,CAAAgE,OAAA,CAAAC,cAAA,cACA;cACAC,MAAA;cACAH,KAAA;YACA,GACA;cACAG,MAAA;cACAH,KAAA;YACA,EACA;UACA;QACA;MAEA;MACAjD,OAAA,CAAAqD,SAAA,CAAArB,MAAA;IACA;EACA;EACAsB,QAAA;IACA,KAAA1B,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}