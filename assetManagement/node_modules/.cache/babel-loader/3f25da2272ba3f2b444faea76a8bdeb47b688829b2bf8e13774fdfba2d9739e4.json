{"ast":null,"code":"/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n * \n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\n(function ($w) {\n  'use strict';\n\n  console.warn(\"The version is outdated. see details: https://hizzgdev.github.io/jsmind/es6/README.md\");\n  var __name__ = 'jsMind';\n  var jsMind = $w[__name__];\n  if (!jsMind) {\n    return;\n  }\n  if (typeof jsMind.screenshot != 'undefined') {\n    return;\n  }\n  var $d = $w.document;\n  var $c = function (tag) {\n    return $d.createElement(tag);\n  };\n  var css = function (cstyle, property_name) {\n    return cstyle.getPropertyValue(property_name);\n  };\n  var is_visible = function (cstyle) {\n    var visibility = css(cstyle, 'visibility');\n    var display = css(cstyle, 'display');\n    return visibility !== 'hidden' && display !== 'none';\n  };\n  var jcanvas = {};\n  jcanvas.rect = function (ctx, x, y, w, h, r) {\n    if (w < 2 * r) r = w / 2;\n    if (h < 2 * r) r = h / 2;\n    ctx.moveTo(x + r, y);\n    ctx.arcTo(x + w, y, x + w, y + h, r);\n    ctx.arcTo(x + w, y + h, x, y + h, r);\n    ctx.arcTo(x, y + h, x, y, r);\n    ctx.arcTo(x, y, x + w, y, r);\n  };\n  jcanvas.text_multiline = function (ctx, text, x, y, w, h, lineheight) {\n    var line = '';\n    var text_len = text.length;\n    var chars = text.split('');\n    var test_line = null;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'top';\n    for (var i = 0; i < text_len; i++) {\n      test_line = line + chars[i];\n      if (ctx.measureText(test_line).width > w && i > 0) {\n        ctx.fillText(line, x, y);\n        line = chars[i];\n        y += lineheight;\n      } else {\n        line = test_line;\n      }\n    }\n    ctx.fillText(line, x, y);\n  };\n  jcanvas.text_ellipsis = function (ctx, text, x, y, w, h) {\n    var center_y = y + h / 2;\n    var text = jcanvas.fittingString(ctx, text, w);\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(text, x, center_y, w);\n  };\n  jcanvas.fittingString = function (ctx, text, max_width) {\n    var width = ctx.measureText(text).width;\n    var ellipsis = 'â€¦';\n    var ellipsis_width = ctx.measureText(ellipsis).width;\n    if (width <= max_width || width <= ellipsis_width) {\n      return text;\n    } else {\n      var len = text.length;\n      while (width >= max_width - ellipsis_width && len-- > 0) {\n        text = text.substring(0, len);\n        width = ctx.measureText(text).width;\n      }\n      return text + ellipsis;\n    }\n  };\n  jcanvas.image = function (ctx, url, x, y, w, h, r, rotation, callback) {\n    var img = new Image();\n    img.onload = function () {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.save();\n      ctx.beginPath();\n      jcanvas.rect(ctx, 0, 0, w, h, r);\n      ctx.closePath();\n      ctx.clip();\n      ctx.translate(w / 2, h / 2);\n      ctx.rotate(rotation * Math.PI / 180);\n      ctx.drawImage(img, -w / 2, -h / 2);\n      ctx.restore();\n      ctx.restore();\n      !!callback && callback();\n    };\n    img.src = url;\n  };\n  jsMind.screenshot = function (jm) {\n    this.jm = jm;\n    this.canvas_elem = null;\n    this.canvas_ctx = null;\n    this._inited = false;\n  };\n  jsMind.screenshot.prototype = {\n    init: function () {\n      if (this._inited) {\n        return;\n      }\n      console.log('init');\n      var c = $c('canvas');\n      var ctx = c.getContext('2d');\n      this.canvas_elem = c;\n      this.canvas_ctx = ctx;\n      this.jm.view.e_panel.appendChild(c);\n      this._inited = true;\n      this.resize();\n    },\n    shoot: function (callback) {\n      this.init();\n      this._draw(function () {\n        !!callback && callback();\n        this.clean();\n      }.bind(this));\n      this._watermark();\n    },\n    shootDownload: function () {\n      this.shoot(function () {\n        this._download();\n      }.bind(this));\n    },\n    shootAsDataURL: function (callback) {\n      this.shoot(function () {\n        !!callback && callback(this.canvas_elem.toDataURL());\n      }.bind(this));\n    },\n    resize: function () {\n      if (this._inited) {\n        this.canvas_elem.width = this.jm.view.size.w;\n        this.canvas_elem.height = this.jm.view.size.h;\n      }\n    },\n    clean: function () {\n      var c = this.canvas_elem;\n      this.canvas_ctx.clearRect(0, 0, c.width, c.height);\n    },\n    _draw: function (callback) {\n      var ctx = this.canvas_ctx;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'top';\n      this._draw_lines(function () {\n        this._draw_nodes(callback);\n      }.bind(this));\n    },\n    _watermark: function () {\n      var c = this.canvas_elem;\n      var ctx = this.canvas_ctx;\n      ctx.textAlign = 'right';\n      ctx.textBaseline = 'bottom';\n      ctx.fillStyle = '#000';\n      ctx.font = '11px Verdana,Arial,Helvetica,sans-serif';\n      ctx.fillText('github.com/hizzgdev/jsmind', c.width - 5.5, c.height - 2.5);\n      ctx.textAlign = 'left';\n      ctx.fillText($w.location, 5.5, c.height - 2.5);\n    },\n    _draw_lines: function (callback) {\n      this.jm.view.graph.copy_to(this.canvas_ctx, callback);\n    },\n    _draw_nodes: function (callback) {\n      var nodes = this.jm.mind.nodes;\n      var node;\n      for (var nodeid in nodes) {\n        node = nodes[nodeid];\n        this._draw_node(node);\n      }\n      function check_nodes_ready() {\n        console.log('check_node_ready' + new Date());\n        var allOk = true;\n        for (var nodeid in nodes) {\n          node = nodes[nodeid];\n          allOk = allOk & node.ready;\n        }\n        if (!allOk) {\n          $w.setTimeout(check_nodes_ready, 200);\n        } else {\n          $w.setTimeout(callback, 200);\n        }\n      }\n      check_nodes_ready();\n    },\n    _draw_node: function (node) {\n      var ctx = this.canvas_ctx;\n      var view_data = node._data.view;\n      var node_element = view_data.element;\n      var ncs = getComputedStyle(node_element);\n      if (!is_visible(ncs)) {\n        node.ready = true;\n        return;\n      }\n      var bgcolor = css(ncs, 'background-color');\n      var round_radius = parseInt(css(ncs, 'border-top-left-radius'));\n      var color = css(ncs, 'color');\n      var padding_left = parseInt(css(ncs, 'padding-left'));\n      var padding_right = parseInt(css(ncs, 'padding-right'));\n      var padding_top = parseInt(css(ncs, 'padding-top'));\n      var padding_bottom = parseInt(css(ncs, 'padding-bottom'));\n      var text_overflow = css(ncs, 'text-overflow');\n      var font = css(ncs, 'font-style') + ' ' + css(ncs, 'font-variant') + ' ' + css(ncs, 'font-weight') + ' ' + css(ncs, 'font-size') + '/' + css(ncs, 'line-height') + ' ' + css(ncs, 'font-family');\n      var rb = {\n        x: view_data.abs_x,\n        y: view_data.abs_y,\n        w: view_data.width + 1,\n        h: view_data.height + 1\n      };\n      var tb = {\n        x: rb.x + padding_left,\n        y: rb.y + padding_top,\n        w: rb.w - padding_left - padding_right,\n        h: rb.h - padding_top - padding_bottom\n      };\n      ctx.font = font;\n      ctx.fillStyle = bgcolor;\n      ctx.beginPath();\n      jcanvas.rect(ctx, rb.x, rb.y, rb.w, rb.h, round_radius);\n      ctx.closePath();\n      ctx.fill();\n      ctx.fillStyle = color;\n      if ('background-image' in node.data) {\n        var backgroundUrl = css(ncs, 'background-image').slice(5, -2);\n        node.ready = false;\n        var rotation = 0;\n        if ('background-rotation' in node.data) {\n          rotation = node.data['background-rotation'];\n        }\n        jcanvas.image(ctx, backgroundUrl, rb.x, rb.y, rb.w, rb.h, round_radius, rotation, function () {\n          node.ready = true;\n        });\n      }\n      if (!!node.topic) {\n        if (text_overflow === 'ellipsis') {\n          jcanvas.text_ellipsis(ctx, node.topic, tb.x, tb.y, tb.w, tb.h);\n        } else {\n          var line_height = parseInt(css(ncs, 'line-height'));\n          jcanvas.text_multiline(ctx, node.topic, tb.x, tb.y, tb.w, tb.h, line_height);\n        }\n      }\n      if (!!view_data.expander) {\n        this._draw_expander(view_data.expander);\n      }\n      if (!('background-image' in node.data)) {\n        node.ready = true;\n      }\n    },\n    _draw_expander: function (expander) {\n      var ctx = this.canvas_ctx;\n      var ncs = getComputedStyle(expander);\n      if (!is_visible(ncs)) {\n        return;\n      }\n      var style_left = css(ncs, 'left');\n      var style_top = css(ncs, 'top');\n      var font = css(ncs, 'font');\n      var left = parseInt(style_left);\n      var top = parseInt(style_top);\n      var is_plus = expander.innerHTML === '+';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.arc(left + 7, top + 7, 5, 0, Math.PI * 2, true);\n      ctx.moveTo(left + 10, top + 7);\n      ctx.lineTo(left + 4, top + 7);\n      if (is_plus) {\n        ctx.moveTo(left + 7, top + 4);\n        ctx.lineTo(left + 7, top + 10);\n      }\n      ctx.closePath();\n      ctx.stroke();\n    },\n    _download: function () {\n      var c = this.canvas_elem;\n      var name = this.jm.mind.name + '.png';\n      if (navigator.msSaveBlob && !!c.msToBlob) {\n        var blob = c.msToBlob();\n        navigator.msSaveBlob(blob, name);\n      } else {\n        var bloburl = this.canvas_elem.toDataURL();\n        var anchor = $c('a');\n        if ('download' in anchor) {\n          anchor.style.visibility = 'hidden';\n          anchor.href = bloburl;\n          anchor.download = name;\n          $d.body.appendChild(anchor);\n          var evt = $d.createEvent('MouseEvents');\n          evt.initEvent('click', true, true);\n          anchor.dispatchEvent(evt);\n          $d.body.removeChild(anchor);\n        } else {\n          location.href = bloburl;\n        }\n      }\n    },\n    jm_event_handle: function (type, data) {\n      if (type === jsMind.event_type.resize) {\n        this.resize();\n      }\n    }\n  };\n  var screenshot_plugin = new jsMind.plugin('screenshot', function (jm) {\n    var jss = new jsMind.screenshot(jm);\n    jm.screenshot = jss;\n    jm.shoot = function () {\n      jss.shoot();\n    };\n    jm.add_event_listener(function (type, data) {\n      jss.jm_event_handle.call(jss, type, data);\n    });\n  });\n  jsMind.register_plugin(screenshot_plugin);\n})(window);","map":{"version":3,"names":["$w","console","warn","__name__","jsMind","screenshot","$d","document","$c","tag","createElement","css","cstyle","property_name","getPropertyValue","is_visible","visibility","display","jcanvas","rect","ctx","x","y","w","h","r","moveTo","arcTo","text_multiline","text","lineheight","line","text_len","length","chars","split","test_line","textAlign","textBaseline","i","measureText","width","fillText","text_ellipsis","center_y","fittingString","max_width","ellipsis","ellipsis_width","len","substring","image","url","rotation","callback","img","Image","onload","save","translate","beginPath","closePath","clip","rotate","Math","PI","drawImage","restore","src","jm","canvas_elem","canvas_ctx","_inited","prototype","init","log","c","getContext","view","e_panel","appendChild","resize","shoot","_draw","clean","bind","_watermark","shootDownload","_download","shootAsDataURL","toDataURL","size","height","clearRect","_draw_lines","_draw_nodes","fillStyle","font","location","graph","copy_to","nodes","mind","node","nodeid","_draw_node","check_nodes_ready","Date","allOk","ready","setTimeout","view_data","_data","node_element","element","ncs","getComputedStyle","bgcolor","round_radius","parseInt","color","padding_left","padding_right","padding_top","padding_bottom","text_overflow","rb","abs_x","abs_y","tb","fill","data","backgroundUrl","slice","topic","line_height","expander","_draw_expander","style_left","style_top","left","top","is_plus","innerHTML","lineWidth","arc","lineTo","stroke","name","navigator","msSaveBlob","msToBlob","blob","bloburl","anchor","style","href","download","body","evt","createEvent","initEvent","dispatchEvent","removeChild","jm_event_handle","type","event_type","screenshot_plugin","plugin","jss","add_event_listener","call","register_plugin","window"],"sources":["E:/neuprogram-master2/neuprogram-master/node_modules/jsmind/js/jsmind.screenshot.js"],"sourcesContent":["/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n * \n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\n(function ($w) {\n    'use strict';\n    console.warn(\"The version is outdated. see details: https://hizzgdev.github.io/jsmind/es6/README.md\")\n    var __name__ = 'jsMind';\n    var jsMind = $w[__name__];\n    if (!jsMind) { return; }\n    if (typeof jsMind.screenshot != 'undefined') { return; }\n\n    var $d = $w.document;\n    var $c = function (tag) { return $d.createElement(tag); };\n\n    var css = function (cstyle, property_name) {\n        return cstyle.getPropertyValue(property_name);\n    };\n    var is_visible = function (cstyle) {\n        var visibility = css(cstyle, 'visibility');\n        var display = css(cstyle, 'display');\n        return (visibility !== 'hidden' && display !== 'none');\n    };\n    var jcanvas = {};\n    jcanvas.rect = function (ctx, x, y, w, h, r) {\n        if (w < 2 * r) r = w / 2;\n        if (h < 2 * r) r = h / 2;\n        ctx.moveTo(x + r, y);\n        ctx.arcTo(x + w, y, x + w, y + h, r);\n        ctx.arcTo(x + w, y + h, x, y + h, r);\n        ctx.arcTo(x, y + h, x, y, r);\n        ctx.arcTo(x, y, x + w, y, r);\n    };\n\n    jcanvas.text_multiline = function (ctx, text, x, y, w, h, lineheight) {\n        var line = '';\n        var text_len = text.length;\n        var chars = text.split('');\n        var test_line = null;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        for (var i = 0; i < text_len; i++) {\n            test_line = line + chars[i];\n            if (ctx.measureText(test_line).width > w && i > 0) {\n                ctx.fillText(line, x, y);\n                line = chars[i];\n                y += lineheight;\n            } else {\n                line = test_line;\n            }\n        }\n        ctx.fillText(line, x, y);\n    };\n\n    jcanvas.text_ellipsis = function (ctx, text, x, y, w, h) {\n        var center_y = y + h / 2;\n        var text = jcanvas.fittingString(ctx, text, w);\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(text, x, center_y, w);\n    };\n\n    jcanvas.fittingString = function (ctx, text, max_width) {\n        var width = ctx.measureText(text).width;\n        var ellipsis = 'â€¦';\n        var ellipsis_width = ctx.measureText(ellipsis).width;\n        if (width <= max_width || width <= ellipsis_width) {\n            return text;\n        } else {\n            var len = text.length;\n            while (width >= max_width - ellipsis_width && len-- > 0) {\n                text = text.substring(0, len);\n                width = ctx.measureText(text).width;\n            }\n            return text + ellipsis;\n        }\n    };\n\n    jcanvas.image = function (ctx, url, x, y, w, h, r, rotation, callback) {\n        var img = new Image();\n        img.onload = function () {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.save();\n            ctx.beginPath();\n            jcanvas.rect(ctx, 0, 0, w, h, r);\n            ctx.closePath();\n            ctx.clip();\n            ctx.translate(w / 2, h / 2);\n            ctx.rotate(rotation * Math.PI / 180);\n            ctx.drawImage(img, -w / 2, -h / 2);\n            ctx.restore();\n            ctx.restore();\n            !!callback && callback();\n        }\n        img.src = url;\n    };\n\n    jsMind.screenshot = function (jm) {\n        this.jm = jm;\n        this.canvas_elem = null;\n        this.canvas_ctx = null;\n        this._inited = false;\n    };\n\n    jsMind.screenshot.prototype = {\n        init: function () {\n            if (this._inited) { return; }\n            console.log('init');\n            var c = $c('canvas');\n            var ctx = c.getContext('2d');\n\n            this.canvas_elem = c;\n            this.canvas_ctx = ctx;\n            this.jm.view.e_panel.appendChild(c);\n            this._inited = true;\n            this.resize();\n        },\n\n        shoot: function (callback) {\n            this.init();\n            this._draw(function () {\n                !!callback && callback();\n                this.clean();\n            }.bind(this));\n            this._watermark();\n        },\n\n        shootDownload: function () {\n            this.shoot(function () {\n                this._download();\n            }.bind(this));\n        },\n\n        shootAsDataURL: function (callback) {\n            this.shoot(function () {\n                !!callback && callback(this.canvas_elem.toDataURL());\n            }.bind(this));\n        },\n\n        resize: function () {\n            if (this._inited) {\n                this.canvas_elem.width = this.jm.view.size.w;\n                this.canvas_elem.height = this.jm.view.size.h;\n            }\n        },\n\n        clean: function () {\n            var c = this.canvas_elem;\n            this.canvas_ctx.clearRect(0, 0, c.width, c.height);\n        },\n\n        _draw: function (callback) {\n            var ctx = this.canvas_ctx;\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'top';\n            this._draw_lines(function () {\n                this._draw_nodes(callback);\n            }.bind(this));\n        },\n\n        _watermark: function () {\n            var c = this.canvas_elem;\n            var ctx = this.canvas_ctx;\n            ctx.textAlign = 'right';\n            ctx.textBaseline = 'bottom';\n            ctx.fillStyle = '#000';\n            ctx.font = '11px Verdana,Arial,Helvetica,sans-serif';\n            ctx.fillText('github.com/hizzgdev/jsmind', c.width - 5.5, c.height - 2.5);\n            ctx.textAlign = 'left';\n            ctx.fillText($w.location, 5.5, c.height - 2.5);\n        },\n\n        _draw_lines: function (callback) {\n            this.jm.view.graph.copy_to(this.canvas_ctx, callback);\n        },\n\n        _draw_nodes: function (callback) {\n            var nodes = this.jm.mind.nodes;\n            var node;\n            for (var nodeid in nodes) {\n                node = nodes[nodeid];\n                this._draw_node(node);\n            }\n\n            function check_nodes_ready() {\n                console.log('check_node_ready' + new Date());\n                var allOk = true;\n                for (var nodeid in nodes) {\n                    node = nodes[nodeid];\n                    allOk = allOk & node.ready;\n                }\n\n                if (!allOk) {\n                    $w.setTimeout(check_nodes_ready, 200);\n                } else {\n                    $w.setTimeout(callback, 200);\n                }\n            }\n            check_nodes_ready();\n        },\n\n        _draw_node: function (node) {\n            var ctx = this.canvas_ctx;\n            var view_data = node._data.view;\n            var node_element = view_data.element;\n            var ncs = getComputedStyle(node_element);\n            if (!is_visible(ncs)) {\n                node.ready = true;\n                return;\n            }\n\n            var bgcolor = css(ncs, 'background-color');\n            var round_radius = parseInt(css(ncs, 'border-top-left-radius'));\n            var color = css(ncs, 'color');\n            var padding_left = parseInt(css(ncs, 'padding-left'));\n            var padding_right = parseInt(css(ncs, 'padding-right'));\n            var padding_top = parseInt(css(ncs, 'padding-top'));\n            var padding_bottom = parseInt(css(ncs, 'padding-bottom'));\n            var text_overflow = css(ncs, 'text-overflow');\n            var font = css(ncs, 'font-style') + ' ' +\n                css(ncs, 'font-variant') + ' ' +\n                css(ncs, 'font-weight') + ' ' +\n                css(ncs, 'font-size') + '/' + css(ncs, 'line-height') + ' ' +\n                css(ncs, 'font-family');\n\n            var rb = {\n                x: view_data.abs_x,\n                y: view_data.abs_y,\n                w: view_data.width + 1,\n                h: view_data.height + 1\n            };\n            var tb = {\n                x: rb.x + padding_left,\n                y: rb.y + padding_top,\n                w: rb.w - padding_left - padding_right,\n                h: rb.h - padding_top - padding_bottom\n            };\n\n            ctx.font = font;\n            ctx.fillStyle = bgcolor;\n            ctx.beginPath();\n            jcanvas.rect(ctx, rb.x, rb.y, rb.w, rb.h, round_radius);\n            ctx.closePath();\n            ctx.fill();\n\n            ctx.fillStyle = color;\n            if ('background-image' in node.data) {\n                var backgroundUrl = css(ncs, 'background-image').slice(5, -2);\n                node.ready = false;\n                var rotation = 0;\n                if ('background-rotation' in node.data) {\n                    rotation = node.data['background-rotation'];\n                }\n                jcanvas.image(ctx, backgroundUrl, rb.x, rb.y, rb.w, rb.h, round_radius, rotation,\n                    function () {\n                        node.ready = true;\n                    });\n            }\n            if (!!node.topic) {\n                if (text_overflow === 'ellipsis') {\n                    jcanvas.text_ellipsis(ctx, node.topic, tb.x, tb.y, tb.w, tb.h);\n                } else {\n                    var line_height = parseInt(css(ncs, 'line-height'));\n                    jcanvas.text_multiline(ctx, node.topic, tb.x, tb.y, tb.w, tb.h, line_height);\n                }\n            }\n            if (!!view_data.expander) {\n                this._draw_expander(view_data.expander);\n            }\n            if (!('background-image' in node.data)) {\n                node.ready = true;\n            }\n        },\n\n        _draw_expander: function (expander) {\n            var ctx = this.canvas_ctx;\n            var ncs = getComputedStyle(expander);\n            if (!is_visible(ncs)) { return; }\n\n            var style_left = css(ncs, 'left');\n            var style_top = css(ncs, 'top');\n            var font = css(ncs, 'font');\n            var left = parseInt(style_left);\n            var top = parseInt(style_top);\n            var is_plus = expander.innerHTML === '+';\n\n            ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.arc(left + 7, top + 7, 5, 0, Math.PI * 2, true);\n            ctx.moveTo(left + 10, top + 7);\n            ctx.lineTo(left + 4, top + 7);\n            if (is_plus) {\n                ctx.moveTo(left + 7, top + 4);\n                ctx.lineTo(left + 7, top + 10);\n            }\n            ctx.closePath();\n            ctx.stroke();\n        },\n\n        _download: function () {\n            var c = this.canvas_elem;\n            var name = this.jm.mind.name + '.png';\n\n            if (navigator.msSaveBlob && (!!c.msToBlob)) {\n                var blob = c.msToBlob();\n                navigator.msSaveBlob(blob, name);\n            } else {\n                var bloburl = this.canvas_elem.toDataURL();\n                var anchor = $c('a');\n                if ('download' in anchor) {\n                    anchor.style.visibility = 'hidden';\n                    anchor.href = bloburl;\n                    anchor.download = name;\n                    $d.body.appendChild(anchor);\n                    var evt = $d.createEvent('MouseEvents');\n                    evt.initEvent('click', true, true);\n                    anchor.dispatchEvent(evt);\n                    $d.body.removeChild(anchor);\n                } else {\n                    location.href = bloburl;\n                }\n            }\n        },\n\n        jm_event_handle: function (type, data) {\n            if (type === jsMind.event_type.resize) {\n                this.resize();\n            }\n        }\n    };\n\n    var screenshot_plugin = new jsMind.plugin('screenshot', function (jm) {\n        var jss = new jsMind.screenshot(jm);\n        jm.screenshot = jss;\n        jm.shoot = function () {\n            jss.shoot();\n        };\n        jm.add_event_listener(function (type, data) {\n            jss.jm_event_handle.call(jss, type, data);\n        });\n    });\n\n    jsMind.register_plugin(screenshot_plugin);\n\n})(window);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}