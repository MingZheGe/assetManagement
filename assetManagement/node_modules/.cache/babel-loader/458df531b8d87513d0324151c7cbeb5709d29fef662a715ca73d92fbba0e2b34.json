{"ast":null,"code":"export default {\n  //name: \"Test\",\n  components: {},\n  props: ['text', 'eventType', 'product', 'time', 'method', 'title'],\n  data() {\n    return {\n      tableData: [{\n        id: 1,\n        label: '事件类型: ',\n        value: this.eventType\n      }, {\n        id: 2,\n        label: '调价产品: ',\n        value: this.product\n      }, {\n        id: 3,\n        label: '调价时间: ',\n        value: this.time\n      }, {\n        id: 4,\n        label: '调价方式: ',\n        value: this.method\n      }, {\n        id: 5,\n        label: '',\n        value: ''\n      }, {\n        id: 6,\n        label: '',\n        value: ''\n      }],\n      EventTypeTableData: [{\n        company: '获批产品所在公司',\n        product: '获批产品',\n        time: '获批时间',\n        range: '获批产品作用范围',\n        type: '获批产品类别'\n      }, {\n        company: '调价产品所在公司',\n        product: '调价产品',\n        time: '调价时间',\n        range: '调价产品作用范围',\n        type: '调价产品类别'\n      }]\n    };\n  },\n  created() {\n    // 在 created 钩子函数中，根据传递的 user 属性，更新 id 为 1-4 的 value 值\n    if (this.user !== undefined) {\n      this.tableData[0].value = this.user;\n    }\n    if (this.user !== undefined) {\n      this.tableData[1].value = this.product;\n    }\n    if (this.user !== undefined) {\n      this.tableData[2].value = this.time;\n    }\n    if (this.user !== undefined) {\n      this.tableData[3].value = this.method;\n    }\n  },\n  computed: {\n    //表格换行\n    firstRowItems() {\n      // 返回前三个元素\n      return this.tableData.slice(0, 3);\n    },\n    secondRowItems() {\n      // 返回后三个元素\n      return this.tableData.slice(3);\n    }\n  }\n};","map":{"version":3,"names":["components","props","data","tableData","id","label","value","eventType","product","time","method","EventTypeTableData","company","range","type","created","user","undefined","computed","firstRowItems","slice","secondRowItems"],"sources":["src/components/table.vue"],"sourcesContent":["<template>\r\n    <div class=\"Table\">\r\n      \r\n    <div class=\"title5\">{{ this.title }}</div>\r\n\r\n    <div class=\"header\" align=\"center\">\r\n      <div class=\"scrollable-container\" >\r\n        <div class=\"text\" >\r\n          {{ text }}\r\n        </div>\r\n        </div>\r\n      \r\n    <table class=\"Tabll\">\r\n    <tbody>\r\n      <tr>\r\n            <td v-for=\"item in firstRowItems\" :key=\"item.id\">\r\n              <b>{{ item.label }}</b>\r\n              {{ item.value }}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td v-for=\"item in secondRowItems\" :key=\"item.id\">\r\n              <b>{{ item.label }}</b>\r\n              {{ item.value }}\r\n            </td>\r\n          </tr>\r\n    </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    export default {\r\n      //name: \"Test\",\r\n      components: {\r\n      },\r\n      props: ['text','eventType','product','time','method','title'],\r\n      data() {\r\n        return {\r\n          tableData: [\r\n            { id: 1, label: '事件类型: ', value: this.eventType},\r\n            { id: 2, label: '调价产品: ', value: this.product},\r\n            { id: 3, label: '调价时间: ', value: this.time},\r\n            { id: 4, label: '调价方式: ', value: this.method},\r\n            { id: 5, label: '', value: ''},\r\n            { id: 6, label: '', value: ''},\r\n          ],\r\n\r\n          EventTypeTableData:[\r\n          { company: '获批产品所在公司',product: '获批产品',time:'获批时间',range:'获批产品作用范围',type:'获批产品类别'},\r\n          { company: '调价产品所在公司',product: '调价产品',time:'调价时间',range:'调价产品作用范围',type:'调价产品类别'},\r\n          ],\r\n        };\r\n      },\r\n      created() {\r\n        // 在 created 钩子函数中，根据传递的 user 属性，更新 id 为 1-4 的 value 值\r\n        if (this.user !== undefined) {\r\n          this.tableData[0].value = this.user;\r\n        }\r\n        if (this.user !== undefined) {\r\n          this.tableData[1].value = this.product;\r\n        }\r\n        if (this.user !== undefined) {\r\n          this.tableData[2].value = this.time;\r\n        }\r\n        if (this.user !== undefined) {\r\n          this.tableData[3].value = this.method;\r\n        }\r\n      },\r\n    \r\n      computed: {\r\n        //表格换行\r\n        firstRowItems() {\r\n          // 返回前三个元素\r\n          return this.tableData.slice(0, 3);\r\n        },\r\n        secondRowItems() {\r\n          // 返回后三个元素\r\n          return this.tableData.slice(3);\r\n        },\r\n      },\r\n    };\r\n    \r\n    </script>\r\n    \r\n    \r\n    <style lang=\"less\">\r\n    .scrollable-container {\r\n  height: 130px; /* 设置容器的固定高度 */\r\n  overflow-y: auto; /* 添加垂直滚动条 */\r\n  //border: 1px solid #ccc; /* 为了可视化，添加边框 */\r\n  width:70%;\r\n  //margin-bottom: 100px;\r\n\r\n}\r\n     .Tabll {\r\n    border-collapse: collapse;\r\n    width: 70%;\r\n    margin-bottom: 20px;\r\n   margin-top:10px;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    width: 70%;\r\n    margin-bottom: 20px;\r\n \r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #dddddd;\r\n    text-align: left;\r\n    padding: 8px;\r\n    width:50px;\r\n    height:50px;\r\n  }\r\n  \r\n  th {\r\n    background-color: #dddddd;\r\n  }\r\n    \r\n      .title5{\r\n        font-size: 15px;\r\n        font-weight: bold;\r\n        text-transform: uppercase;\r\n        //padding: 10px;\r\n        margin-top: 20px;\r\n        margin-left: 18px;\r\n        color:#000000\r\n      }\r\n    \r\n      .text{\r\n        font-size:  28 rem;//24rem和之前一样大\r\n        margin-bottom: 15px;\r\n        text-transform: uppercase;\r\n        width:100%;\r\n        text-align: left;\r\n      \r\n      }\r\n\r\n      .Table{\r\n        background-color: #ffffff;\r\n       // margin-left: 10%;\r\n    \r\n      }\r\n    \r\n      \r\n    \r\n      \r\n    \r\n\r\n   \r\n      \r\n      </style>"],"mappings":"AAiCA;EACA;EACAA,UAAA,GACA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,SAAA,GACA;QAAAC,EAAA;QAAAC,KAAA;QAAAC,KAAA,OAAAC;MAAA,GACA;QAAAH,EAAA;QAAAC,KAAA;QAAAC,KAAA,OAAAE;MAAA,GACA;QAAAJ,EAAA;QAAAC,KAAA;QAAAC,KAAA,OAAAG;MAAA,GACA;QAAAL,EAAA;QAAAC,KAAA;QAAAC,KAAA,OAAAI;MAAA,GACA;QAAAN,EAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,EAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,EACA;MAEAK,kBAAA,GACA;QAAAC,OAAA;QAAAJ,OAAA;QAAAC,IAAA;QAAAI,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAF,OAAA;QAAAJ,OAAA;QAAAC,IAAA;QAAAI,KAAA;QAAAC,IAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA;IACA,SAAAC,IAAA,KAAAC,SAAA;MACA,KAAAd,SAAA,IAAAG,KAAA,QAAAU,IAAA;IACA;IACA,SAAAA,IAAA,KAAAC,SAAA;MACA,KAAAd,SAAA,IAAAG,KAAA,QAAAE,OAAA;IACA;IACA,SAAAQ,IAAA,KAAAC,SAAA;MACA,KAAAd,SAAA,IAAAG,KAAA,QAAAG,IAAA;IACA;IACA,SAAAO,IAAA,KAAAC,SAAA;MACA,KAAAd,SAAA,IAAAG,KAAA,QAAAI,MAAA;IACA;EACA;EAEAQ,QAAA;IACA;IACAC,cAAA;MACA;MACA,YAAAhB,SAAA,CAAAiB,KAAA;IACA;IACAC,eAAA;MACA;MACA,YAAAlB,SAAA,CAAAiB,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}