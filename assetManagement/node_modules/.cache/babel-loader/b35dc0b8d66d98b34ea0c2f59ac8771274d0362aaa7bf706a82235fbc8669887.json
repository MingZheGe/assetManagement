{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  watch: {\n    \"zoom.value\"(val) {\n      console.log(val);\n      const zoom = val / 100;\n      this.jm.view.setZoom(zoom);\n      this.val2 = val;\n      console.log(this.val2);\n      this.$emit('scroll', this.val2); //把子组件的右上菜单百分数传给父组件,实时传\n    },\n\n    selectTypes(v) {\n      this.loopTreeData(this.mind.data.children, item => {\n        if (v.length) {\n          if (v.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n        }\n      });\n    }\n  },\n  computed: {\n    pathColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.pathActiveColor : this.structure.pathOrginalColor;\n      };\n    },\n    rectColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.rectActiveColor : this.structure.rectOrginalColor;\n      };\n    }\n  },\n  data() {\n    return {\n      val2: '',\n      //缩放百分数\n      lista: [],\n      listb: [],\n      select: false,\n      getData: [],\n      // 根据输入值  查询到的结果\n      remindData: [],\n      input: \"\",\n      options: {\n        container: \"jsmind_containerTest\",\n        // [必选] 容器的ID\n        editable: true,\n        // [可选] 是否启用编辑\n        support_html: true,\n        // 是否支持节点里的HTML元素\n        theme: \"\",\n        // [可选] 主题\n        view: {\n          fontsize: 5,\n          engine: \"svg\",\n          // 思维导图各节点之间线条的绘制引擎\n          hmargin: 0,\n          // 思维导图距容器外框的最小水平距离\n          vmargin: 0,\n          // 思维导图距容器外框的最小垂直距离\n          line_width: 1,\n          // 思维导图线条的粗细\n          line_color: \"\t#DCDCDC\",\n          // 思维导图线条的颜色\n          node_overflow: \"hidden\"\n        },\n        layout: {\n          hspace: 100,\n          // 节点之间的水平间距\n          vspace: 5,\n          // 节点之间的垂直间距\n          pspace: 14 // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\n        },\n\n        shortcut: {\n          // 禁用快捷键\n          enable: false\n        }\n      },\n      zoom: {\n        value: 100,\n        // 层级大小\n        min: 10,\n        // 最小层级\n        max: 400 // 最大层级\n      },\n\n      bgMap: {\n        //公司\n        1: {\n          bgcolor: \"#87CEFA \",\n          fgcolor: \" #000\",\n          original: \"#87CEFA\",\n          transparent: \"rgb(25, 144, 255, 0.2)\"\n        },\n        //根节点\n        2: {\n          bgcolor: \"#1E90FF\",\n          fgcolor: \"#fff\",\n          original: \"rgb(100, 201, 53)\",\n          transparent: \"rgb(100, 201, 53, 0.2)\"\n        },\n        3: {\n          //其他\n          bgcolor: \" \",\n          fgcolor: \"#000\"\n        },\n        4: {\n          //人\n          bgcolor: \"#FF7F50\",\n          fgcolor: \"#fff\"\n        },\n        5: [{\n          //发行\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\"\n        }, {\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\"\n        }, {\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\"\n        }],\n        6: {\n          //项目\n          bgcolor: \"#ecb5c9\",\n          fgcolor: \"#fff\"\n        },\n        7: {\n          //发行1\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\"\n        },\n        8: {\n          //发行2\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\"\n        },\n        9: {\n          //发行3\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\"\n        }\n      },\n      structure: {\n        active: \"right\",\n        pathOrginalColor: \"#2B2F36\",\n        pathActiveColor: \"#3370FF\",\n        rectOrginalColor: \"#C3C6CB\",\n        rectActiveColor: \"#BACEFD\"\n      },\n      dialogVisible: false,\n      dialogVisible2: false,\n      selectNodeInfo: {\n        id: null,\n        Name: \"\"\n      },\n      // 选中节点信息\n      tempNodeInfo: null,\n      // 保存修改之前的信息\n      createType: \"\",\n      // 添加平级or子级\n      showMenu: false,\n      // 是否显示右键菜单栏\n      menuStyle: {\n        top: \"\",\n        bottom: \"\",\n        left: \"\",\n        right: \"\"\n      },\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]),\n      // 选中types Set\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"] // 选中types Array\n    };\n  },\n\n  props: {\n    mind: Object // 通过 prop 传递 mind 对象,options用组件的\n    // nodeClick2: Function,\n  },\n\n  methods: {\n    /*\r\n    querySearch(queryString, cb) {\r\n    console.log(queryString);\r\n    this.remindData = [];\r\n    if (this.input !== \"\") {\r\n      axios\r\n        .post(\"http://localhost:8086//ShareTiShi\", {\r\n          select_name: queryString,\r\n        })\r\n        .then((response) => {\r\n          console.log(\"finish\");\r\n          this.getData = response.data;\r\n          this.getData.forEach((item) => {\r\n            let obj = { value: \"\" };\r\n            obj.value = item;\r\n            this.remindData.push(obj);\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      let nameTipsArray = this.remindData;\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(nameTipsArray);\r\n    }\r\n    },\r\n    */\n    /*\r\n        handleSelect(item) {\r\n          let regex = /\\[(.+?)\\]/g;\r\n          this.input = item.value.match(regex)[0].replace(\"[\", \"\").replace(\"]\", \"\");\r\n        },\r\n    */\n    /*\r\n        search() {\r\n          this.jm.update_node(\"root\", this.input);\r\n          const selectedNode1 = this.jm.get_node(\"root1\");\r\n          this.delChild(selectedNode1);\r\n          this.add_stock(selectedNode1, this.input);\r\n        },\r\n        */\n    /*\r\n     delChild(node) {\r\n       if (node.children.length != 0) {\r\n         console.log(node.children);\r\n         let len = node.children.length;\r\n         for (var deli = 0; deli < len; ) {\r\n           console.log(node.children[0]);\r\n           this.jm.remove_node(node.children[0]);\r\n           deli = deli + 1;\r\n         }\r\n       }\r\n     },\r\n     */\n    // 重置视图\n    reset() {\n      console.log(\"重置视图\");\n      document.querySelector(\".root\").scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\"\n      });\n      this.jm.view.setZoom(1);\n    },\n    // 缩小\n    zoomOut() {\n      console.log(\"缩小\");\n      this.jm.view.zoomOut();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 放大\n    zoomIn() {\n      console.log(\"放大\");\n      this.jm.view.zoomIn();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 循环树结构\n    loopTreeData(list, callback) {\n      (function doOneFloor(list) {\n        if (Array.isArray(list)) {\n          for (let i = 0; i < list.length; i++) {\n            const item = list[i];\n            callback(item, i);\n            if (item.children && item.children.length > 0) {\n              doOneFloor(item.children);\n            }\n          }\n        }\n      })(list);\n    },\n    // 设置背景颜色\n    setColor() {\n      this.jm.set_node_color(\"root\", this.bgMap[2].bgcolor, this.bgMap[2].fgcolor);\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\n      this.loopTreeData(this.mind.data.children, item => {\n        if (this.selectTypes.length) {\n          if (this.selectTypes.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n        }\n      });\n    },\n    // 初始化配置\n    init() {\n      this.jm.view.minZoom = 0.1;\n      this.jm.view.maxZoom = 5;\n      this.setColor();\n\n      //右键菜单\n      this.jm.view.add_event(this.editor, \"contextmenu\", e => {\n        console.log(\"A\");\n        const selectedNode = this.jm.get_selected_node();\n        console.log(selectedNode);\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\n          e.preventDefault();\n          const el = document.querySelector(\".context-menu .el-menu-item\");\n          const width = parseFloat(window.getComputedStyle(el).width);\n          const height = parseFloat(window.getComputedStyle(el).height) * 3 + 12;\n          const windowHeight = window.innerHeight;\n          const windowWidth = window.innerWidth;\n\n          // 极限位置 避免越界\n          if (e.clientY + height > windowHeight) {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = \"unset\";\n            this.menuStyle.bottom = 0;\n          } else if (e.clientX + width > windowWidth) {\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.left = \"unset\";\n            this.menuStyle.right = 0;\n          } else {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.bottom = \"unset\";\n          }\n          this.showMenu = true;\n          if (selectedNode.topic == \"下游产品\") {\n            this.select = true;\n          } else {\n            this.select = false;\n          }\n        } else {\n          this.showMenu = false;\n        }\n      });\n    },\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    sureEditNode() {},\n    // 拖拽\n    handleDrop(draggingNode, dropNode) {\n      // 前一个兄弟节点\n      const prevNode = this.jm.find_node_before(dropNode);\n      // 获取移动后的node\n      const dragForm = {\n        modelId: \"\",\n        treeNum: !prevNode ? draggingNode : prevNode.id,\n        thisTreeNum: dropNode\n      };\n      //console.log(\"dragForm\", dragForm);\n\n      // TODO 调接口\n    },\n\n    //添加公司\n    /*\r\n        add_company(addnode, company) {\r\n          //console.log(addnode);\r\n          if (addnode.data && addnode.topic == \"董事长\") {\r\n            axios\r\n              .post(\"http://localhost:8086/company\", {\r\n                select_name: company,\r\n                relation: \"董事长\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"4\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"总裁\") {\r\n            axios\r\n              .post(\"http://localhost:8086/company\", {\r\n                select_name: company,\r\n                relation: \"总裁\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"4\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"首席运营官\") {\r\n            axios\r\n              .post(\"http://localhost:8086/company\", {\r\n                select_name: company,\r\n                relation: \"首席运营官\",\r\n              })\r\n              .then((response) => {\r\n                //console.log(\"生产公司\" + response);\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"4\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"监事\") {\r\n            axios\r\n              .post(\"http://localhost:8086/company\", {\r\n                select_name: company,\r\n                relation: \"监事\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"4\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"董事会秘书\") {\r\n            axios\r\n              .post(\"http://localhost:8086/company\", {\r\n                select_name: company,\r\n                relation: \"董事会秘书\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"4\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"发行\") {\r\n            axios\r\n              .post(\"http://localhost:8086/faxing\", {\r\n                select_name: company,\r\n                relation: \"发行\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i].ChiName;\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    let num = 7 + this.lista[i].Stock;\r\n                    newNode1.type = num;\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"参股公司\") {\r\n            axios\r\n              .post(\"http://localhost:8086/company\", {\r\n                select_name: company,\r\n                relation: \"参股公司\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"1\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"控股股东\") {\r\n             axios\r\n              .post(\"http://localhost:8086/company\", {\r\n                select_name: company,\r\n                relation: \"控股股东\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"1\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"大股东\") {\r\n            axios\r\n              .post(\"http://localhost:8086/gudong\", {\r\n                select_name: company,\r\n                //relation: \"大股东\",\r\n              })\r\n              .then((response) => {\r\n                if ((response.data.company.length ==0 || !response.data.person.length == 0) && addnode.parent.id != \"root\") {\r\n                  console.log(response.data.company.length)\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  console.log(response.data)\r\n                  this.lista = response.data.person;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"4\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                  \r\n                  this.listb = response.data.company;\r\n                  console.log(\"b:\"+ this.listb)\r\n                  for (var i = 0; i < this.listb.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.listb[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"1\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  \r\n                }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"投资\") {\r\n            axios\r\n              .post(\"http://localhost:8086/company\", {\r\n                select_name: company,\r\n                relation: \"投资\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"6\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else {\r\n            this.$message.error(\"something wrong\");\r\n          }\r\n          this.jm.collapse_node(addnode);\r\n        },\r\n    \r\n    */\n\n    //添加人\n    /*\r\n        add_person(addnode, person) {\r\n          if (addnode.data && addnode.topic == \"担任董事长\") {\r\n            axios\r\n              .post(\"http://localhost:8086/person\", {\r\n                select_name: person,\r\n                relation: \"担任董事长\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                }\r\n                this.lista = response.data;\r\n                var len = this.lista.length;\r\n    \r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"担任总裁\") {\r\n            axios\r\n              .post(\"http://localhost:8086/person\", {\r\n                select_name: person,\r\n                relation: \"担任总裁\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n    \r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"1\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"担任首席运营官\") {\r\n            axios\r\n              .post(\"http://localhost:8086/person\", {\r\n                select_name: person,\r\n                relation: \"担任首席运营官\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"1\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"担任监事\") {\r\n            axios\r\n              .post(\"http://localhost:8086/person\", {\r\n                select_name: person,\r\n                relation: \"担任监事\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n    \r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"1\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"担任董事会秘书\") {\r\n            axios\r\n              .post(\"http://localhost:8086/person\", {\r\n                select_name: person,\r\n                relation: \"担任董事会秘书\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"1\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else if (addnode.topic == \"实际控制人\") {\r\n            axios\r\n              .post(\"http://localhost:8086/person\", {\r\n                select_name: person,\r\n                relation: \"实际控制人\",\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length && addnode.parent.id != \"root\") {\r\n                  this.jm.remove_node(addnode.id);\r\n                } else {\r\n                  this.lista = response.data;\r\n                  for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                    let nodeid = jsMind.util.uuid.newid();\r\n                    let topic = this.lista[i];\r\n                    let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                    newNode1.type = \"1\";\r\n                    this.jm.set_node_color(\r\n                      newNode1.id,\r\n                      this.bgMap[newNode1.type].bgcolor,\r\n                      this.bgMap[newNode1.type].fgcolor\r\n                    );\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          } else {\r\n            this.$message.error(\"something wrong\" + addnode.topic);\r\n          }\r\n          this.jm.collapse_node(addnode);\r\n        },\r\n    \r\n        */\n\n    //添加股票\n    /*\r\n    add_stock(addnode, share) {\r\n      //console.log(addnode);\r\n      if (addnode.data && addnode.topic == \"发行公司\") {\r\n        axios\r\n          .post(\"http://localhost:8086/share\", {\r\n            select_name: share,\r\n            relation: \"发行公司\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            }\r\n            this.lista = response.data;\r\n            console.log(this.lista);\r\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n              let nodeid = jsMind.util.uuid.newid();\r\n              let topic = this.lista[i];\r\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n              newNode1.type = \"1\";\r\n              this.jm.set_node_color(\r\n                newNode1.id,\r\n                this.bgMap[newNode1.type].bgcolor,\r\n                this.bgMap[newNode1.type].fgcolor\r\n              );\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.$message.error(\"something wrong\");\r\n      }\r\n      this.jm.collapse_node(addnode);\r\n    },\r\n    */\n\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    color_conditional() {\n      conbsole.log(\"颜色\");\n      this.dialogVisible2 = true;\n      this.showMenu = false;\n    },\n    nodeClick() {\n      this.showMenu = false;\n      const selectedNode = this.jm.get_selected_node();\n      console.log(selectedNode.id);\n      //let newNode1 = this.jm.add_node(selectedNode, \"table1\", \"topic1\");*/\n      if (!selectedNode) return;\n      //console.log(selectedNode.type)\n      if (selectedNode.data) {\n        const eventData = selectedNode;\n        this.$emit('child-clicked', eventData); //点击将selectedNode传给父组件\n        if (selectedNode.children.length != 0) {\n          this.jm.toggle_node(selectedNode);\n        } else if (selectedNode.type == 1) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let nodeid7 = jsMind.util.uuid.newid();\n          let nodeid8 = jsMind.util.uuid.newid();\n          let nodeid9 = jsMind.util.uuid.newid();\n          let nodeid10 = jsMind.util.uuid.newid();\n          let topic1 = \"董事长\";\n          let topic2 = \"总裁\";\n          let topic3 = \"首席运营官\";\n          let topic4 = \"监事\";\n          let topic5 = \"董事会秘书\";\n          let topic6 = \"发行\";\n          let topic7 = \"参股公司\";\n          let topic8 = \"控股股东\";\n          let topic9 = \"大股东\";\n          let topic10 = \"投资\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          let newNode7 = this.jm.add_node(selectedNode, nodeid7, topic7);\n          let newNode8 = this.jm.add_node(selectedNode, nodeid8, topic8);\n          let newNode9 = this.jm.add_node(selectedNode, nodeid9, topic9);\n          let newNode10 = this.jm.add_node(selectedNode, nodeid10, topic10);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          newNode7.type = \"3\";\n          newNode8.type = \"3\";\n          newNode9.type = \"3\";\n          newNode10.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          this.jm.set_node_color(newNode3.id, this.bgMap[newNode3.type].bgcolor, this.bgMap[newNode3.type].fgcolor);\n          this.jm.set_node_color(newNode4.id, this.bgMap[newNode4.type].bgcolor, this.bgMap[newNode4.type].fgcolor);\n          this.jm.set_node_color(newNode5.id, this.bgMap[newNode5.type].bgcolor, this.bgMap[newNode5.type].fgcolor);\n          this.jm.set_node_color(newNode6.id, this.bgMap[newNode6.type].bgcolor, this.bgMap[newNode6.type].fgcolor);\n          this.jm.set_node_color(newNode7.id, this.bgMap[newNode7.type].bgcolor, this.bgMap[newNode7.type].fgcolor);\n          this.jm.set_node_color(newNode8.id, this.bgMap[newNode8.type].bgcolor, this.bgMap[newNode8.type].fgcolor);\n          this.jm.set_node_color(newNode9.id, this.bgMap[newNode9.type].bgcolor, this.bgMap[newNode9.type].fgcolor);\n          this.jm.set_node_color(newNode10.id, this.bgMap[newNode10.type].bgcolor, this.bgMap[newNode10.type].fgcolor);\n          this.add_company(newNode1, selectedNode.topic);\n          this.add_company(newNode2, selectedNode.topic);\n          this.add_company(newNode3, selectedNode.topic);\n          this.add_company(newNode4, selectedNode.topic);\n          this.add_company(newNode5, selectedNode.topic);\n          this.add_company(newNode6, selectedNode.topic);\n          this.add_company(newNode7, selectedNode.topic);\n          this.add_company(newNode8, selectedNode.topic);\n          this.add_company(newNode9, selectedNode.topic);\n          this.add_company(newNode10, selectedNode.topic);\n        } else if (selectedNode.type == 4) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let topic1 = \"担任董事长\";\n          let topic2 = \"担任总裁\";\n          let topic3 = \"担任首席运营官\";\n          let topic4 = \"担任监事\";\n          let topic5 = \"担任董事会秘书\";\n          let topic6 = \"实际控制人\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          this.jm.set_node_color(newNode3.id, this.bgMap[newNode3.type].bgcolor, this.bgMap[newNode3.type].fgcolor);\n          this.jm.set_node_color(newNode4.id, this.bgMap[newNode4.type].bgcolor, this.bgMap[newNode4.type].fgcolor);\n          this.jm.set_node_color(newNode5.id, this.bgMap[newNode5.type].bgcolor, this.bgMap[newNode5.type].fgcolor);\n          this.jm.set_node_color(newNode6.id, this.bgMap[newNode6.type].bgcolor, this.bgMap[newNode6.type].fgcolor);\n          this.add_person(newNode1, selectedNode.topic);\n          this.add_person(newNode2, selectedNode.topic);\n          this.add_person(newNode3, selectedNode.topic);\n          this.add_person(newNode4, selectedNode.topic);\n          this.add_person(newNode5, selectedNode.topic);\n          this.add_person(newNode6, selectedNode.topic);\n        } else if (selectedNode.type == 5) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let topic1 = \"发行公司\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          newNode1.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.add_stock(newNode1, selectedNode.topic);\n        } else {\n          /*\r\n          this.$message({\r\n            showClose: true,\r\n            message: \"没有\" + selectedNode.topic,\r\n          });\r\n          */\n        }\n      } else {\n        this.$message.error(\"wrong\");\n      }\n    },\n    delCard() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.remove_node(selectedNode.id);\n        // 获取数据\n        console.log(this.jm.get_data(\"node_tree\"));\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 滚轮缩放\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      e.preventDefault();\n      this.jm.resize();\n    },\n    // 更改颜色\n    changecolor() {\n      console.log(this.bgMap[4].bgcolor);\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type || 3].bgcolor, this.bgMap[item.type || 3].fgcolor));\n      this.dialogVisible2 = false;\n    },\n    // 导出图片\n    screen_shot() {\n      // 去除透明度\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type || 3].bgcolor, this.bgMap[item.type || 3].fgcolor));\n      try {\n        this.jm.screenshot.shootDownload();\n      } catch (error) {\n        console.log(error);\n      }\n      setTimeout(() => {\n        this.setColor();\n      }, 1000);\n    },\n    // 鼠标拖拽\n    mouseDrag() {\n      // 里层\n      const el = document.querySelector(\".jsmind-inner\");\n      // 选中节点\n      let selected;\n      el.onmousedown = ev => {\n        // 选中节点\n        selected = this.jm.get_selected_node();\n        // 标识 是否拖拽节点 避免冲突\n        this.dragNodeFlag = !!selected;\n        const disX = ev.clientX;\n        const disY = ev.clientY;\n        const originalScrollLeft = el.scrollLeft;\n        const originalScrollTop = el.scrollTop;\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\n        const originalPointerEvents = el.style[\"pointer-events\"];\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\n        el.style[\"scroll-behavior\"] = \"auto\";\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\n        document.onmousemove = ev => {\n          if (this.dragNodeFlag) return;\n          this.drag = false;\n          ev.preventDefault();\n          // 计算拖拽的偏移距离\n          const distanceX = ev.clientX - disX;\n          const distanceY = ev.clientY - disY;\n          el.scrollTo(originalScrollLeft - distanceX, originalScrollTop - distanceY);\n\n          // 在鼠标拖动的时候将点击事件屏蔽掉\n          el.style[\"pointer-events\"] = \"none\";\n          el.style.cursor = \"grabbing\";\n        };\n        document.onmouseup = () => {\n          if (!this.dragNodeFlag) {\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\n            el.style[\"pointer-events\"] = originalPointerEvents;\n            el.style.cursor = \"grab\";\n          }\n          document.onmousemove = document.onmouseup = null;\n        };\n      };\n    }\n  },\n  mounted() {\n    this.jm = jsMind.show(this.options, this.mind);\n    this.init();\n    this.mouseWheel();\n    this.mouseDrag();\n    this.jm.view.setZoom(0.8);\n    this.$emit('jmMounted', this.jm);\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\n  }\n};","map":{"version":3,"names":["axios","watch","zoom.value","val","console","log","zoom","jm","view","setZoom","val2","$emit","selectTypes","v","loopTreeData","mind","data","children","item","length","includes","type","set_node_color","id","bgMap","bgcolor","fgcolor","transparent","computed","pathColor","structure","active","pathActiveColor","pathOrginalColor","rectColor","rectActiveColor","rectOrginalColor","lista","listb","select","getData","remindData","input","options","container","editable","support_html","theme","fontsize","engine","hmargin","vmargin","line_width","line_color","node_overflow","layout","hspace","vspace","pspace","shortcut","enable","value","min","max","original","dialogVisible","dialogVisible2","selectNodeInfo","Name","tempNodeInfo","createType","showMenu","menuStyle","top","bottom","left","right","typeQueue","Set","props","Object","methods","reset","document","querySelector","scrollIntoView","block","behavior","zoomOut","parseInt","actualZoom","zoomIn","list","callback","doOneFloor","Array","isArray","i","setColor","set_node_font_style","init","minZoom","maxZoom","add_event","editor","e","selectedNode","get_selected_node","preventDefault","el","width","parseFloat","window","getComputedStyle","height","windowHeight","innerHeight","windowWidth","innerWidth","clientY","clientX","topic","get_selected_nodeid","sureEditNode","handleDrop","draggingNode","dropNode","prevNode","find_node_before","dragForm","modelId","treeNum","thisTreeNum","query_conditional","$message","error","color_conditional","conbsole","nodeClick","eventData","toggle_node","nodeid1","jsMind","util","uuid","newid","nodeid2","nodeid3","nodeid4","nodeid5","nodeid6","nodeid7","nodeid8","nodeid9","nodeid10","topic1","topic2","topic3","topic4","topic5","topic6","topic7","topic8","topic9","topic10","newNode1","add_node","newNode2","newNode3","newNode4","newNode5","newNode6","newNode7","newNode8","newNode9","newNode10","add_company","add_person","add_stock","delCard","remove_node","get_data","mouseWheel","addEventListener","scrollFunc","$refs","onmousewheel","event","wheelDelta","detail","resize","changecolor","node","get_node","screen_shot","screenshot","shootDownload","setTimeout","mouseDrag","selected","onmousedown","ev","dragNodeFlag","disX","disY","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","originalScrollBehavior","style","originalPointerEvents","onmousemove","drag","distanceX","distanceY","scrollTo","cursor","onmouseup","mounted","show","beforeDestroy","removeEventListener"],"sources":["src/components/nodeTree.vue"],"sourcesContent":["<template>\r\n  <div class=\"jsmindTest\">\r\n\r\n    <div class =\"jsmind_layout\" id=\"jsmind_layoutTest\">\r\n      <div\r\n        id=\"jsmind_containerTest\"\r\n        ref=\"container\"\r\n        @click=\"nodeClick\"\r\n        @contextmenu.prevent=\"\"\r\n      >\r\n    </div>\r\n    \r\n <!-- 右上角菜单 -->\r\n<!--\r\n       \r\n        <div class=\"toolbar2\">\r\n      <ul class=\"toolbar-list2\">\r\n        <li class=\"item\">\r\n          <span\r\n            size=\"16\"\r\n            class=\"percent\"\r\n            style=\"font-size: 14px; color: rgb(29, 29, 31)\"\r\n            @click=\"zoom.value = 100\"\r\n            >{{ zoom.value }}%\r\n          </span>\r\n          <div class=\"scale-slide\">\r\n            <ul>\r\n              <li class=\"normal-item\" title=\"缩小\" @click=\"zoomOut\">\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-5.66 1.22a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7zM4.76 6.6h5.12c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36z\"\r\n                    fill=\"#2B2F36\"\r\n                    fill-rule=\"nonzero\"\r\n                  ></path>\r\n                </svg>\r\n              </li>\r\n\r\n              <li class=\"slider\">\r\n                <el-slider\r\n                  v-model=\"zoom.value\"\r\n                  :show-tooltip=\"false\"\r\n                  :min=\"zoom.min\"\r\n                  :max=\"zoom.max\"\r\n                ></el-slider>\r\n              </li>\r\n\r\n              <li class=\"normal-item\" title=\"画布放大\" @click=\"zoomIn\">\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-6.4-5.36V4.76c0-.2.17-.37.37-.37h.73c.2 0 .37.16.37.37v1.83h1.83c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H8.05v1.83c0 .2-.16.37-.37.37h-.73a.37.37 0 01-.36-.37V8.05H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36h1.83zm.74 6.58a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7z\"\r\n                    fill=\"#2B2F36\"\r\n                    fill-rule=\"nonzero\"\r\n                  ></path>\r\n                </svg>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <div class=\"layout item\" @click=\"color_conditional\">\r\n          <svg\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M12.56 4.06c1.41 0 2.8.28 4.05.8l-.99 1.21a9.3 9.3 0 00-2.67-.5l-.4-.01h-.43a9.14 9.14 0 00-5.28 2c-.72.61-1.3 1.32-1.69 2.09a5.1 5.1 0 000 4.82c.39.74.95 1.41 1.68 2 .73.59 1.59 1.06 2.55 1.39a9.75 9.75 0 004.5.42l.44-.06.53-.11.06-.02c.07-.03.14-.1.2-.2a.8.8 0 00.1-.47l-.03-.12-.03-.1-.05-.22a3.32 3.32 0 01.46-2.53c.52-.8 1.36-1.3 2.27-1.36H19.45l.1-.01c.48-.07.87-.53.96-1.1l.02-.14v-.25l-.02-.22-.05-.29a5.6 5.6 0 00-1.13-2.4l.96-1.2a7.08 7.08 0 011.63 3.34l.06.34.04.34v.37c-.08 1.45-1.12 2.6-2.4 2.7H18.02c-.48 0-.94.26-1.23.7-.22.34-.32.75-.28 1.16l.02.18.07.27a2.3 2.3 0 01-.2 1.75c-.24.41-.6.72-1 .86l-.17.05-.57.12c-.42.08-.84.13-1.26.16l-.42.03h-.44c-1.26 0-2.5-.2-3.65-.6a9.85 9.85 0 01-3-1.63 7.91 7.91 0 01-2.07-2.47 6.58 6.58 0 010-6.19A8.24 8.24 0 015.9 6.42a9.85 9.85 0 013-1.72c.92-.32 1.86-.53 2.81-.6l.41-.02.43-.01h.02zM7.4 12.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm12.29-9.01a.5.5 0 01.63-.13l.07.05.4.31c.18.16.23.42.12.63l-.05.08-7.69 9.6-1.14.51a.2.2 0 01-.28-.17v-.05L12 13l7.69-9.61zM8.4 8.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm4.2-1.5a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2z\"\r\n              fill=\"#2B2F36\"\r\n              fill-rule=\"evenodd\"\r\n            ></path>\r\n          </svg>\r\n        </div>\r\n        <div\r\n          class=\"reset item normal-item\"\r\n          title=\"定位到中心主题\"\r\n          @click=\"reset\"\r\n        >\r\n          <svg\r\n            width=\"16\"\r\n            height=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M.77 0h3.46c.21 0 .38.17.38.38v.77c0 .22-.17.39-.38.39h-2.7v2.7c0 .2-.16.38-.38.38H.38A.38.38 0 010 4.23V.77C0 .34.34 0 .77 0zm14.45 16h-3.46a.38.38 0 01-.38-.39v-.76c0-.22.17-.39.38-.39h2.7v-2.7c0-.2.17-.38.38-.38h.77c.21 0 .38.18.38.39v3.46c0 .43-.34.77-.77.77zM0 15.23v-3.46c0-.21.17-.39.38-.39h.77c.22 0 .39.18.39.39v2.7h2.69c.21 0 .38.16.38.38v.77c0 .2-.17.38-.38.38H.77a.77.77 0 01-.77-.77zM16 .78v3.46c0 .21-.17.38-.38.38h-.77a.38.38 0 01-.39-.38v-2.7h-2.69a.38.38 0 01-.38-.38V.4c0-.2.17-.38.38-.38h3.46c.43 0 .77.34.77.77zm-8 9.99a2.77 2.77 0 110-5.54 2.77 2.77 0 010 5.54z\"\r\n              fill=\"#2B2F36\"\r\n              fill-rule=\"nonzero\"\r\n            ></path>\r\n          </svg>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  -->\r\n<!--\r\n      <el-dialog\r\n        :title=\"'颜色选择器'\"\r\n        :visible.sync=\"dialogVisible2\"\r\n        width=\"600px\"\r\n        @closed=\"form = {}\"\r\n        :destroy-on-close=\"true\"\r\n        :lock-scroll=\"false\"\r\n        :append-to-body=\"true\"\r\n        v-if=\"selectNodeInfo\"\r\n      >\r\n        <el-row>\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-tag>人</el-tag>\r\n            </div></el-col\r\n          >\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-tag>公司</el-tag>\r\n            </div></el-col\r\n          >\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-tag>项目</el-tag>\r\n            </div></el-col\r\n          >\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[4].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[1].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[6].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n        </el-row>\r\n        <br />\r\n        <el-row>\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-tag>A股</el-tag>\r\n            </div></el-col\r\n          >\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-tag>B股</el-tag>\r\n            </div></el-col\r\n          >\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-tag>C股</el-tag>\r\n            </div></el-col\r\n          >\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"8\"\r\n            ><div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[7].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[8].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n          <el-col :span=\"8\">\r\n            <div class=\"block\">\r\n              <el-color-picker\r\n                v-model=\"bgMap[9].bgcolor\"\r\n              ></el-color-picker></div\r\n          ></el-col>\r\n        </el-row>\r\n\r\n        <template v-slot:footer>\r\n          <div class=\"right mr-10\">\r\n            <el-button\r\n              type=\"primary\"\r\n              class=\"common-btn\"\r\n              @click=\"changecolor\"\r\n              size=\"medium\"\r\n              >确 定</el-button\r\n            >\r\n          </div>\r\n        </template>\r\n      </el-dialog>\r\n  -->\r\n    </div>\r\n\r\n\r\n    <!-- 右键菜单 -->\r\n    <el-menu\r\n      class=\"context-menu\"\r\n      v-show=\"showMenu\"\r\n      :style=\"{\r\n        left: menuStyle.left,\r\n        top: menuStyle.top,\r\n        bottom: menuStyle.bottom,\r\n        right: menuStyle.right,\r\n      }\"\r\n      ref=\"context\"\r\n    >\r\n      <slot>\r\n        <el-menu-item @click=\"delCard\">隐藏节点</el-menu-item>\r\n      </slot>\r\n    </el-menu>\r\n\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n \r\n  watch: {\r\n\r\n  \r\n    \"zoom.value\"(val) {\r\n      console.log(val)\r\n      const zoom = val / 100;\r\n      this.jm.view.setZoom(zoom);\r\n      this.val2=val;\r\n      console.log(this.val2);\r\n        this.$emit('scroll', this.val2);//把子组件的右上菜单百分数传给父组件,实时传\r\n    },\r\n    selectTypes(v) {\r\n      this.loopTreeData(this.mind.data.children, (item) => {\r\n        if (v.length) {\r\n          if (v.includes(item.type)) {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].bgcolor,\r\n              this.bgMap[item.type].fgcolor\r\n            );\r\n          } else {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].transparent,\r\n              this.bgMap[item.type].fgcolor\r\n            );\r\n          }\r\n        } else {\r\n          this.jm.set_node_color(\r\n            item.id,\r\n            this.bgMap[item.type].transparent,\r\n            this.bgMap[item.type].fgcolor\r\n          );\r\n        }\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    pathColor() {\r\n      return function (type) {\r\n        return this.structure.active === type\r\n          ? this.structure.pathActiveColor\r\n          : this.structure.pathOrginalColor;\r\n      };\r\n    },\r\n    rectColor() {\r\n      return function (type) {\r\n        return this.structure.active === type\r\n          ? this.structure.rectActiveColor\r\n          : this.structure.rectOrginalColor;\r\n      };\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      val2: '',//缩放百分数\r\n      lista: [],\r\n      listb: [],\r\n      select: false,\r\n      getData: [], // 根据输入值  查询到的结果\r\n      remindData: [],\r\n      input: \"\",\r\n      \r\n      options: {\r\n        container: \"jsmind_containerTest\", // [必选] 容器的ID\r\n        editable: true, // [可选] 是否启用编辑\r\n        support_html: true, // 是否支持节点里的HTML元素\r\n        theme: \"\", // [可选] 主题\r\n        view: {\r\n          fontsize:5,\r\n          engine: \"svg\", // 思维导图各节点之间线条的绘制引擎\r\n          hmargin: 0, // 思维导图距容器外框的最小水平距离\r\n          vmargin: 0, // 思维导图距容器外框的最小垂直距离\r\n          line_width: 1, // 思维导图线条的粗细\r\n          line_color: \"\t#DCDCDC\", // 思维导图线条的颜色\r\n          node_overflow : (\"hidden\"),\r\n     \r\n        },\r\n        layout: {\r\n          hspace: 100, // 节点之间的水平间距\r\n          vspace: 5, // 节点之间的垂直间距\r\n          pspace: 14, // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\r\n        },\r\n        shortcut: {\r\n          // 禁用快捷键\r\n          enable: false,\r\n        },\r\n      },\r\n\r\n      zoom: {\r\n        value: 100, // 层级大小\r\n        min: 10, // 最小层级\r\n        max: 400, // 最大层级\r\n      },\r\n      bgMap: {\r\n        //公司\r\n        1: {\r\n          bgcolor: \"#87CEFA \",\r\n          fgcolor: \" #000\",\r\n          original: \"#87CEFA\",\r\n          transparent: \"rgb(25, 144, 255, 0.2)\",\r\n        },\r\n        //根节点\r\n        2: {\r\n          bgcolor: \"#1E90FF\",\r\n          fgcolor: \"#fff\",\r\n          original: \"rgb(100, 201, 53)\",\r\n          transparent: \"rgb(100, 201, 53, 0.2)\",\r\n        },\r\n        3: {\r\n          //其他\r\n          bgcolor: \" \",\r\n          fgcolor: \"#000\",\r\n        },\r\n        4: {\r\n          //人\r\n          bgcolor: \"#FF7F50\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n        5: [\r\n          {\r\n            //发行\r\n            bgcolor: \"#FF6347\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n          {\r\n            bgcolor: \"#fa8072\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n          {\r\n            bgcolor: \"#ff7f50\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n        ],\r\n        6: {\r\n          //项目\r\n          bgcolor: \"#ecb5c9\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n        7: {\r\n          //发行1\r\n          bgcolor: \"#FF6347\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n        8: {\r\n          //发行2\r\n          bgcolor: \"#fa8072\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n        9: {\r\n          //发行3\r\n          bgcolor: \"#ff7f50\",\r\n          fgcolor: \"#fff\",\r\n        },\r\n      },\r\n\r\n      structure: {\r\n        active: \"right\",\r\n        pathOrginalColor: \"#2B2F36\",\r\n        pathActiveColor: \"#3370FF\",\r\n        rectOrginalColor: \"#C3C6CB\",\r\n        rectActiveColor: \"#BACEFD\",\r\n      },\r\n      dialogVisible: false,\r\n      dialogVisible2: false,\r\n      selectNodeInfo: {\r\n        id: null,\r\n        Name: \"\",\r\n      }, // 选中节点信息\r\n      tempNodeInfo: null, // 保存修改之前的信息\r\n      createType: \"\", // 添加平级or子级\r\n      showMenu: false, // 是否显示右键菜单栏\r\n      menuStyle: {\r\n        top: \"\",\r\n        bottom: \"\",\r\n        left: \"\",\r\n        right: \"\",\r\n      },\r\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]), // 选中types Set\r\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"], // 选中types Array\r\n    };\r\n  },\r\n  props: {\r\n  mind: Object, // 通过 prop 传递 mind 对象,options用组件的\r\n // nodeClick2: Function,\r\n},\r\n\r\n\r\n  methods: {\r\n      /*\r\n    querySearch(queryString, cb) {\r\n      console.log(queryString);\r\n      this.remindData = [];\r\n      if (this.input !== \"\") {\r\n        axios\r\n          .post(\"http://localhost:8086//ShareTiShi\", {\r\n            select_name: queryString,\r\n          })\r\n          .then((response) => {\r\n            console.log(\"finish\");\r\n            this.getData = response.data;\r\n            this.getData.forEach((item) => {\r\n              let obj = { value: \"\" };\r\n              obj.value = item;\r\n              this.remindData.push(obj);\r\n            });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        let nameTipsArray = this.remindData;\r\n        // 调用 callback 返回建议列表的数据\r\n        cb(nameTipsArray);\r\n      }\r\n    },\r\n*/\r\n/*\r\n    handleSelect(item) {\r\n      let regex = /\\[(.+?)\\]/g;\r\n      this.input = item.value.match(regex)[0].replace(\"[\", \"\").replace(\"]\", \"\");\r\n    },\r\n*/\r\n/*\r\n    search() {\r\n      this.jm.update_node(\"root\", this.input);\r\n      const selectedNode1 = this.jm.get_node(\"root1\");\r\n      this.delChild(selectedNode1);\r\n      this.add_stock(selectedNode1, this.input);\r\n    },\r\n    */\r\n   /*\r\n    delChild(node) {\r\n      if (node.children.length != 0) {\r\n        console.log(node.children);\r\n        let len = node.children.length;\r\n        for (var deli = 0; deli < len; ) {\r\n          console.log(node.children[0]);\r\n          this.jm.remove_node(node.children[0]);\r\n          deli = deli + 1;\r\n        }\r\n      }\r\n    },\r\n    */\r\n    // 重置视图\r\n    reset() {\r\n      console.log(\"重置视图\");\r\n      document.querySelector(\".root\").scrollIntoView({\r\n        block: \"center\",\r\n        behavior: \"smooth\",\r\n      \r\n      });\r\n      this.jm.view.setZoom(1);\r\n    },\r\n\r\n    // 缩小\r\n    zoomOut() {\r\n      console.log(\"缩小\");\r\n      this.jm.view.zoomOut();\r\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\r\n    },\r\n    // 放大\r\n    zoomIn() {\r\n      console.log(\"放大\");\r\n      this.jm.view.zoomIn();\r\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\r\n    },\r\n\r\n    // 循环树结构\r\n    loopTreeData(list, callback) {\r\n      (function doOneFloor(list) {\r\n        if (Array.isArray(list)) {\r\n          for (let i = 0; i < list.length; i++) {\r\n            const item = list[i];\r\n            callback(item, i);\r\n            if (item.children && item.children.length > 0) {\r\n              doOneFloor(item.children);\r\n            }\r\n          }\r\n        }\r\n      })(list);\r\n    },\r\n\r\n    // 设置背景颜色\r\n    setColor() {\r\n      this.jm.set_node_color(\r\n        \"root\",\r\n        this.bgMap[2].bgcolor,\r\n        this.bgMap[2].fgcolor\r\n      );\r\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\r\n      this.loopTreeData(this.mind.data.children, (item) => {\r\n        if (this.selectTypes.length) {\r\n          if (this.selectTypes.includes(item.type)) {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].bgcolor,\r\n              this.bgMap[item.type].fgcolor\r\n            );\r\n          } else {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].transparent,\r\n              \"#fff\"\r\n            );\r\n          }\r\n        } else {\r\n          this.jm.set_node_color(\r\n            item.id,\r\n            this.bgMap[item.type].transparent,\r\n            \"#fff\"\r\n          );\r\n        }\r\n      });\r\n    },\r\n\r\n    // 初始化配置\r\n    init() {\r\n      this.jm.view.minZoom = 0.1;\r\n      this.jm.view.maxZoom = 5;\r\n\r\n      this.setColor();\r\n\r\n      //右键菜单\r\n      this.jm.view.add_event(this.editor, \"contextmenu\", (e) => {\r\n        console.log(\"A\");\r\n        const selectedNode = this.jm.get_selected_node();\r\n        console.log(selectedNode);\r\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\r\n          e.preventDefault();\r\n          const el = document.querySelector(\".context-menu .el-menu-item\");\r\n          const width = parseFloat(window.getComputedStyle(el).width);\r\n          const height =\r\n            parseFloat(window.getComputedStyle(el).height) * 3 + 12;\r\n          const windowHeight = window.innerHeight;\r\n          const windowWidth = window.innerWidth;\r\n\r\n          // 极限位置 避免越界\r\n          if (e.clientY + height > windowHeight) {\r\n            this.menuStyle.left = e.clientX + \"px\";\r\n            this.menuStyle.top = \"unset\";\r\n            this.menuStyle.bottom = 0;\r\n          } else if (e.clientX + width > windowWidth) {\r\n            this.menuStyle.top = e.clientY + \"px\";\r\n            this.menuStyle.left = \"unset\";\r\n            this.menuStyle.right = 0;\r\n          } else {\r\n            this.menuStyle.left = e.clientX + \"px\";\r\n            this.menuStyle.top = e.clientY + \"px\";\r\n            this.menuStyle.bottom = \"unset\";\r\n          }\r\n          this.showMenu = true;\r\n          if (selectedNode.topic == \"下游产品\") {\r\n            this.select = true;\r\n          } else {\r\n            this.select = false;\r\n          }\r\n        } else {\r\n          this.showMenu = false;\r\n        }\r\n      });\r\n    },\r\n\r\n    // 获取选中标签的 ID\r\n    get_selected_nodeid() {\r\n      const selectedNode = this.jm.get_selected_node();\r\n      if (selectedNode) {\r\n        return selectedNode.id;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    sureEditNode() {},\r\n    // 拖拽\r\n    handleDrop(draggingNode, dropNode) {\r\n      // 前一个兄弟节点\r\n      const prevNode = this.jm.find_node_before(dropNode);\r\n      // 获取移动后的node\r\n      const dragForm = {\r\n        modelId: \"\",\r\n        treeNum: !prevNode ? draggingNode : prevNode.id,\r\n        thisTreeNum: dropNode,\r\n      };\r\n      //console.log(\"dragForm\", dragForm);\r\n\r\n      // TODO 调接口\r\n    },\r\n\r\n\r\n    //添加公司\r\n/*\r\n    add_company(addnode, company) {\r\n      //console.log(addnode);\r\n      if (addnode.data && addnode.topic == \"董事长\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"董事长\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"总裁\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"总裁\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"首席运营官\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"首席运营官\",\r\n          })\r\n          .then((response) => {\r\n            //console.log(\"生产公司\" + response);\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"监事\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"监事\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"董事会秘书\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"董事会秘书\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"发行\") {\r\n        axios\r\n          .post(\"http://localhost:8086/faxing\", {\r\n            select_name: company,\r\n            relation: \"发行\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i].ChiName;\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                let num = 7 + this.lista[i].Stock;\r\n                newNode1.type = num;\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"参股公司\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"参股公司\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"控股股东\") {\r\n         axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"控股股东\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"大股东\") {\r\n        axios\r\n          .post(\"http://localhost:8086/gudong\", {\r\n            select_name: company,\r\n            //relation: \"大股东\",\r\n          })\r\n          .then((response) => {\r\n            if ((response.data.company.length ==0 || !response.data.person.length == 0) && addnode.parent.id != \"root\") {\r\n              console.log(response.data.company.length)\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              console.log(response.data)\r\n              this.lista = response.data.person;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"4\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n              \r\n              this.listb = response.data.company;\r\n              console.log(\"b:\"+ this.listb)\r\n              for (var i = 0; i < this.listb.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.listb[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              \r\n            }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"投资\") {\r\n        axios\r\n          .post(\"http://localhost:8086/company\", {\r\n            select_name: company,\r\n            relation: \"投资\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"6\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.$message.error(\"something wrong\");\r\n      }\r\n      this.jm.collapse_node(addnode);\r\n    },\r\n\r\n*/\r\n\r\n//添加人\r\n/*\r\n    add_person(addnode, person) {\r\n      if (addnode.data && addnode.topic == \"担任董事长\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任董事长\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            }\r\n            this.lista = response.data;\r\n            var len = this.lista.length;\r\n\r\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n              let nodeid = jsMind.util.uuid.newid();\r\n              let topic = this.lista[i];\r\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n              newNode1.type = \"1\";\r\n              this.jm.set_node_color(\r\n                newNode1.id,\r\n                this.bgMap[newNode1.type].bgcolor,\r\n                this.bgMap[newNode1.type].fgcolor\r\n              );\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"担任总裁\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任总裁\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"担任首席运营官\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任首席运营官\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"担任监事\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任监事\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"担任董事会秘书\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"担任董事会秘书\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (addnode.topic == \"实际控制人\") {\r\n        axios\r\n          .post(\"http://localhost:8086/person\", {\r\n            select_name: person,\r\n            relation: \"实际控制人\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            } else {\r\n              this.lista = response.data;\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.$message.error(\"something wrong\" + addnode.topic);\r\n      }\r\n      this.jm.collapse_node(addnode);\r\n    },\r\n\r\n    */\r\n\r\n    //添加股票\r\n    /*\r\n    add_stock(addnode, share) {\r\n      //console.log(addnode);\r\n      if (addnode.data && addnode.topic == \"发行公司\") {\r\n        axios\r\n          .post(\"http://localhost:8086/share\", {\r\n            select_name: share,\r\n            relation: \"发行公司\",\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length && addnode.parent.id != \"root\") {\r\n              this.jm.remove_node(addnode.id);\r\n            }\r\n            this.lista = response.data;\r\n            console.log(this.lista);\r\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n              let nodeid = jsMind.util.uuid.newid();\r\n              let topic = this.lista[i];\r\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n              newNode1.type = \"1\";\r\n              this.jm.set_node_color(\r\n                newNode1.id,\r\n                this.bgMap[newNode1.type].bgcolor,\r\n                this.bgMap[newNode1.type].fgcolor\r\n              );\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.$message.error(\"something wrong\");\r\n      }\r\n      this.jm.collapse_node(addnode);\r\n    },\r\n    */\r\n\r\n    query_conditional() {\r\n      const selectedNode = this.jm.get_selected_node();\r\n      if (selectedNode.data) {\r\n        this.dialogVisible = true;\r\n      } else {\r\n        this.$message.error(\"请选择卡片\");\r\n      }\r\n\r\n      this.showMenu = false;\r\n    },\r\n    query_conditional() {\r\n      const selectedNode = this.jm.get_selected_node();\r\n      if (selectedNode.data) {\r\n        this.dialogVisible = true;\r\n      } else {\r\n        this.$message.error(\"请选择卡片\");\r\n      }\r\n\r\n      this.showMenu = false;\r\n    },\r\n    color_conditional() {\r\n      conbsole.log(\"颜色\")\r\n      this.dialogVisible2 = true;\r\n      this.showMenu = false;\r\n    },\r\n    nodeClick() {\r\n      this.showMenu = false;\r\n      const selectedNode = this.jm.get_selected_node();\r\n      console.log(selectedNode.id)\r\n      //let newNode1 = this.jm.add_node(selectedNode, \"table1\", \"topic1\");*/\r\n      if (!selectedNode) return;\r\n      //console.log(selectedNode.type)\r\n      if (selectedNode.data) \r\n      {\r\n        const eventData = selectedNode;\r\n      this.$emit('child-clicked', eventData);//点击将selectedNode传给父组件\r\n        if (selectedNode.children.length != 0) {\r\n          this.jm.toggle_node(selectedNode);\r\n        } else if (selectedNode.type == 1) {\r\n          let nodeid1 = jsMind.util.uuid.newid();\r\n          let nodeid2 = jsMind.util.uuid.newid();\r\n          let nodeid3 = jsMind.util.uuid.newid();\r\n          let nodeid4 = jsMind.util.uuid.newid();\r\n          let nodeid5 = jsMind.util.uuid.newid();\r\n          let nodeid6 = jsMind.util.uuid.newid();\r\n          let nodeid7 = jsMind.util.uuid.newid();\r\n          let nodeid8 = jsMind.util.uuid.newid();\r\n          let nodeid9 = jsMind.util.uuid.newid();\r\n          let nodeid10 = jsMind.util.uuid.newid();\r\n          let topic1 = \"董事长\";\r\n          let topic2 = \"总裁\";\r\n          let topic3 = \"首席运营官\";\r\n          let topic4 = \"监事\";\r\n          let topic5 = \"董事会秘书\";\r\n          let topic6 = \"发行\";\r\n          let topic7 = \"参股公司\";\r\n          let topic8 = \"控股股东\";\r\n          let topic9 = \"大股东\";\r\n          let topic10 = \"投资\";\r\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\r\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\r\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\r\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\r\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\r\n          let newNode7 = this.jm.add_node(selectedNode, nodeid7, topic7);\r\n          let newNode8 = this.jm.add_node(selectedNode, nodeid8, topic8);\r\n          let newNode9 = this.jm.add_node(selectedNode, nodeid9, topic9);\r\n          let newNode10 = this.jm.add_node(selectedNode, nodeid10, topic10);\r\n          newNode1.type = \"3\";\r\n          newNode2.type = \"3\";\r\n          newNode3.type = \"3\";\r\n          newNode4.type = \"3\";\r\n          newNode5.type = \"3\";\r\n          newNode6.type = \"3\";\r\n          newNode7.type = \"3\";\r\n          newNode8.type = \"3\";\r\n          newNode9.type = \"3\";\r\n          newNode10.type = \"3\";\r\n          this.jm.set_node_color(\r\n            newNode1.id,\r\n            this.bgMap[newNode1.type].bgcolor,\r\n            this.bgMap[newNode1.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode2.id,\r\n            this.bgMap[newNode2.type].bgcolor,\r\n            this.bgMap[newNode2.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode3.id,\r\n            this.bgMap[newNode3.type].bgcolor,\r\n            this.bgMap[newNode3.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode4.id,\r\n            this.bgMap[newNode4.type].bgcolor,\r\n            this.bgMap[newNode4.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode5.id,\r\n            this.bgMap[newNode5.type].bgcolor,\r\n            this.bgMap[newNode5.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode6.id,\r\n            this.bgMap[newNode6.type].bgcolor,\r\n            this.bgMap[newNode6.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode7.id,\r\n            this.bgMap[newNode7.type].bgcolor,\r\n            this.bgMap[newNode7.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode8.id,\r\n            this.bgMap[newNode8.type].bgcolor,\r\n            this.bgMap[newNode8.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode9.id,\r\n            this.bgMap[newNode9.type].bgcolor,\r\n            this.bgMap[newNode9.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode10.id,\r\n            this.bgMap[newNode10.type].bgcolor,\r\n            this.bgMap[newNode10.type].fgcolor\r\n          );\r\n          this.add_company(newNode1, selectedNode.topic);\r\n          this.add_company(newNode2, selectedNode.topic);\r\n          this.add_company(newNode3, selectedNode.topic);\r\n          this.add_company(newNode4, selectedNode.topic);\r\n          this.add_company(newNode5, selectedNode.topic);\r\n          this.add_company(newNode6, selectedNode.topic);\r\n          this.add_company(newNode7, selectedNode.topic);\r\n          this.add_company(newNode8, selectedNode.topic);\r\n          this.add_company(newNode9, selectedNode.topic);\r\n          this.add_company(newNode10, selectedNode.topic);\r\n        } else if (selectedNode.type == 4) {\r\n          let nodeid1 = jsMind.util.uuid.newid();\r\n          let nodeid2 = jsMind.util.uuid.newid();\r\n          let nodeid3 = jsMind.util.uuid.newid();\r\n          let nodeid4 = jsMind.util.uuid.newid();\r\n          let nodeid5 = jsMind.util.uuid.newid();\r\n          let nodeid6 = jsMind.util.uuid.newid();\r\n          let topic1 = \"担任董事长\";\r\n          let topic2 = \"担任总裁\";\r\n          let topic3 = \"担任首席运营官\";\r\n          let topic4 = \"担任监事\";\r\n          let topic5 = \"担任董事会秘书\";\r\n          let topic6 = \"实际控制人\";\r\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\r\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\r\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\r\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\r\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\r\n          newNode1.type = \"3\";\r\n          newNode2.type = \"3\";\r\n          newNode3.type = \"3\";\r\n          newNode4.type = \"3\";\r\n          newNode5.type = \"3\";\r\n          newNode6.type = \"3\";\r\n          this.jm.set_node_color(\r\n            newNode1.id,\r\n            this.bgMap[newNode1.type].bgcolor,\r\n            this.bgMap[newNode1.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode2.id,\r\n            this.bgMap[newNode2.type].bgcolor,\r\n            this.bgMap[newNode2.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode3.id,\r\n            this.bgMap[newNode3.type].bgcolor,\r\n            this.bgMap[newNode3.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode4.id,\r\n            this.bgMap[newNode4.type].bgcolor,\r\n            this.bgMap[newNode4.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode5.id,\r\n            this.bgMap[newNode5.type].bgcolor,\r\n            this.bgMap[newNode5.type].fgcolor\r\n          );\r\n          this.jm.set_node_color(\r\n            newNode6.id,\r\n            this.bgMap[newNode6.type].bgcolor,\r\n            this.bgMap[newNode6.type].fgcolor\r\n          );\r\n          this.add_person(newNode1, selectedNode.topic);\r\n          this.add_person(newNode2, selectedNode.topic);\r\n          this.add_person(newNode3, selectedNode.topic);\r\n          this.add_person(newNode4, selectedNode.topic);\r\n          this.add_person(newNode5, selectedNode.topic);\r\n          this.add_person(newNode6, selectedNode.topic);\r\n        } else if (selectedNode.type == 5) {\r\n          let nodeid1 = jsMind.util.uuid.newid();\r\n          let topic1 = \"发行公司\";\r\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n          newNode1.type = \"3\";\r\n          this.jm.set_node_color(\r\n            newNode1.id,\r\n            this.bgMap[newNode1.type].bgcolor,\r\n            this.bgMap[newNode1.type].fgcolor\r\n          );\r\n          this.add_stock(newNode1, selectedNode.topic);\r\n        } else {\r\n          /*\r\n          this.$message({\r\n            showClose: true,\r\n            message: \"没有\" + selectedNode.topic,\r\n          });\r\n          */\r\n        }\r\n      } else {\r\n        this.$message.error(\"wrong\");\r\n      }\r\n    },\r\n    delCard() {\r\n      const selectedNode = this.jm.get_selected_node();\r\n      if (selectedNode.data) {\r\n        // TODO\r\n        this.jm.remove_node(selectedNode.id);\r\n        // 获取数据\r\n        console.log(this.jm.get_data(\"node_tree\"));\r\n      } else {\r\n        this.$message.error(\"请选择卡片\");\r\n      }\r\n      this.showMenu = false;\r\n    },\r\n    // 鼠标滚轮放大缩小\r\n    mouseWheel() {\r\n      if (document.addEventListener) {\r\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\r\n      }\r\n      this.$refs.container.onmousewheel = this.scrollFunc;\r\n    },\r\n    // 滚轮缩放\r\n    scrollFunc(e) {\r\n      e = e || window.event;\r\n      if (e.wheelDelta) {\r\n        if (e.wheelDelta > 0) {\r\n          this.zoomIn();\r\n        } else {\r\n          this.zoomOut();\r\n        }\r\n      } else if (e.detail) {\r\n        if (e.detail > 0) {\r\n          this.zoomIn();\r\n        } else {\r\n          this.zoomOut();\r\n        }\r\n      }\r\n      e.preventDefault();\r\n      this.jm.resize();\r\n    },\r\n\r\n    // 更改颜色\r\n    changecolor() {\r\n      console.log(this.bgMap[4].bgcolor);\r\n      const node = this.jm.get_node(\"root\");\r\n      this.loopTreeData(node.children, (item) =>\r\n        this.jm.set_node_color(\r\n          item.id,\r\n          this.bgMap[item.type || 3].bgcolor,\r\n          this.bgMap[item.type || 3].fgcolor\r\n        )\r\n      );\r\n      this.dialogVisible2 = false;\r\n    },\r\n    // 导出图片\r\n    screen_shot() {\r\n      // 去除透明度\r\n      const node = this.jm.get_node(\"root\");\r\n      this.loopTreeData(node.children, (item) =>\r\n        this.jm.set_node_color(\r\n          item.id,\r\n          this.bgMap[item.type || 3].bgcolor,\r\n          this.bgMap[item.type || 3].fgcolor\r\n        )\r\n      );\r\n      try {\r\n        this.jm.screenshot.shootDownload();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setTimeout(() => {\r\n        this.setColor();\r\n      }, 1000);\r\n    },\r\n    // 鼠标拖拽\r\n    mouseDrag() {\r\n      // 里层\r\n      const el = document.querySelector(\".jsmind-inner\");\r\n      // 选中节点\r\n      let selected;\r\n\r\n      el.onmousedown = (ev) => {\r\n        // 选中节点\r\n        selected = this.jm.get_selected_node();\r\n        // 标识 是否拖拽节点 避免冲突\r\n        this.dragNodeFlag = !!selected;\r\n\r\n        const disX = ev.clientX;\r\n        const disY = ev.clientY;\r\n        const originalScrollLeft = el.scrollLeft;\r\n        const originalScrollTop = el.scrollTop;\r\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\r\n        const originalPointerEvents = el.style[\"pointer-events\"];\r\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\r\n        el.style[\"scroll-behavior\"] = \"auto\";\r\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\r\n        document.onmousemove = (ev) => {\r\n          if (this.dragNodeFlag) return;\r\n          this.drag = false;\r\n          ev.preventDefault();\r\n          // 计算拖拽的偏移距离\r\n          const distanceX = ev.clientX - disX;\r\n          const distanceY = ev.clientY - disY;\r\n\r\n          el.scrollTo(\r\n            originalScrollLeft - distanceX,\r\n            originalScrollTop - distanceY\r\n          );\r\n\r\n          // 在鼠标拖动的时候将点击事件屏蔽掉\r\n          el.style[\"pointer-events\"] = \"none\";\r\n          el.style.cursor = \"grabbing\";\r\n        };\r\n        document.onmouseup = () => {\r\n          if (!this.dragNodeFlag) {\r\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\r\n            el.style[\"pointer-events\"] = originalPointerEvents;\r\n            el.style.cursor = \"grab\";\r\n          }\r\n          document.onmousemove = document.onmouseup = null;\r\n        };\r\n      };\r\n    },\r\n  },\r\n  mounted() {\r\n    this.jm = jsMind.show(this.options, this.mind);\r\n    this.init();\r\n    this.mouseWheel();\r\n    this.mouseDrag();\r\n    this.jm.view.setZoom(0.8);\r\n    this.$emit('jmMounted', this.jm);\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.jsmindTest {\r\n  position: fixed;\r\n  top: 210px;\r\n  left: 250px;\r\n  width: 85%;\r\n  height: 73%;\r\n  background-color: #fa1313;\r\n \r\n  overflow-x:hidden;\r\noverflow-y:hidden;\r\n\r\n  &.full {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #fff;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    width: 80%;\r\n    margin-bottom: 20px\r\n   \r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #dddddd;\r\n    text-align: left;\r\n    padding: 8px;\r\n    width:50px;\r\n    height:50px;\r\n  }\r\n  \r\n  th {\r\n    background-color: #dddddd;\r\n  }\r\n\r\n  .toolbar2 {\r\n    float: right;\r\n    z-index: 2;\r\n    position: absolute;\r\n    right: 100px;\r\n    top: -30px;\r\n    z-index: 99;\r\n    border: 1px solid #dee0e3;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    -webkit-box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n    box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    text-align: center;\r\n\r\n    .toolbar-list2 {\r\n \r\n      padding: 6px 0;\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n\r\n      .item {\r\n        \r\n        position: relative;\r\n        width: 48px;\r\n        height: 36px;\r\n        cursor: pointer;\r\n        font-size: 14px;\r\n        line-height: 36px;\r\n        text-align: center;\r\n        margin-bottom: 12px;\r\n\r\n        svg {\r\n          vertical-align: middle;\r\n        }\r\n\r\n        .percent {\r\n          color: rgb(29, 29, 31);\r\n          line-height: 1.45;\r\n        }\r\n\r\n        &:hover {\r\n          .scale-slide {\r\n            opacity: 1;\r\n            visibility: visible;\r\n          }\r\n        }\r\n\r\n        &.layout {\r\n          &:hover {\r\n            .structure {\r\n              opacity: 1;\r\n              visibility: visible;\r\n            }\r\n          }\r\n        }\r\n\r\n        .scale-slide {\r\n          position: absolute;\r\n          top: -7px;\r\n          right: 58px;\r\n          overflow: hidden;\r\n          width: 244px;\r\n          height: 44px;\r\n          opacity: 1;\r\n          -webkit-transition: all 0.1s linear;\r\n          transition: all 0.1s linear;\r\n          opacity: 0;\r\n          visibility: hidden;\r\n\r\n          &:hover {\r\n            opacity: 1;\r\n            visibility: visible;\r\n          }\r\n\r\n          ul {\r\n            position: absolute;\r\n            display: -webkit-box;\r\n            display: -ms-flexbox;\r\n            display: flex;\r\n            width: 244px;\r\n            height: 44px;\r\n            padding: 4px 8px;\r\n            border: 1px solid #dee0e3;\r\n            background-color: #fff;\r\n            border-radius: 5px;\r\n            -webkit-box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n            box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n            list-style: none;\r\n\r\n            .normal-item {\r\n              display: flex;\r\n              width: 36px;\r\n              height: 36px;\r\n              -webkit-box-align: center;\r\n              -ms-flex-align: center;\r\n              align-items: center;\r\n              -webkit-box-pack: center;\r\n              -ms-flex-pack: center;\r\n              justify-content: center;\r\n              cursor: pointer;\r\n            }\r\n\r\n            .slider {\r\n              width: 100%;\r\n\r\n              /deep/.el-slider__runway {\r\n                height: 2px;\r\n                background-color: #bbbfc4;\r\n\r\n                .el-slider__bar {\r\n                  background: none;\r\n                }\r\n\r\n                .el-slider__button {\r\n                  border: 0.5px solid #dee0e3;\r\n                }\r\n              }\r\n            }\r\n\r\n            .style__zoom-scroll-bar___3n1YHZLZ {\r\n              display: flex;\r\n\r\n              .style__zoom-bar___rp3v2Kdv {\r\n                position: relative;\r\n                display: -webkit-box;\r\n                display: -ms-flexbox;\r\n                display: flex;\r\n                width: 120px;\r\n                height: 36px;\r\n                -webkit-box-align: center;\r\n                -ms-flex-align: center;\r\n                align-items: center;\r\n                cursor: pointer;\r\n\r\n                .style__process-bar___2nCsCTk0 {\r\n                  position: relative;\r\n                  left: 50%;\r\n                  width: 104px;\r\n                  height: 2px;\r\n                  -ms-flex-item-align: center;\r\n                  align-self: center;\r\n                  margin-left: -52px;\r\n                  background-color: #bbbfc4;\r\n                  border-radius: 2px;\r\n                }\r\n\r\n                .style__process-btn___azlkuc9i {\r\n                  position: absolute;\r\n                  width: 16px;\r\n                  height: 16px;\r\n                  border: 0.5px solid #dee0e3;\r\n                  background-color: #fff;\r\n                  border-radius: 8px;\r\n                  -webkit-box-shadow: 0 2px 3px 0 rgb(0 0 0 / 15%);\r\n                  box-shadow: 0 2px 3px 0 rgb(0 0 0 / 15%);\r\n                  cursor: pointer;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        .structure {\r\n          position: absolute;\r\n          top: 0;\r\n          right: 58px;\r\n          width: 244px;\r\n          min-height: 120px;\r\n          max-height: calc(100vh - 200px);\r\n          cursor: default;\r\n          opacity: 0;\r\n          overflow-y: overlay;\r\n          -webkit-transition: all 0.1s linear;\r\n          transition: all 0.1s linear;\r\n          visibility: hidden;\r\n          z-index: 1000;\r\n\r\n          &:hover {\r\n            opacity: 1;\r\n            visibility: visible;\r\n          }\r\n\r\n          .tab-content {\r\n            padding: 24px 24px 10px;\r\n            border: 1px solid #dee0e3;\r\n            background-color: #fff;\r\n            border-radius: 5px;\r\n            -webkit-box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n            box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n\r\n            .tab-label {\r\n              margin-bottom: 12px;\r\n              color: #1f2329;\r\n              font-size: 16px;\r\n              font-weight: 500;\r\n              line-height: 1.5;\r\n              text-align: left;\r\n            }\r\n\r\n            .struct-list {\r\n              display: -webkit-box;\r\n              display: -ms-flexbox;\r\n              display: flex;\r\n              -webkit-box-orient: horizontal;\r\n              -webkit-box-direction: normal;\r\n              -ms-flex-direction: row;\r\n              flex-direction: row;\r\n              -webkit-box-pack: justify;\r\n              -ms-flex-pack: justify;\r\n              justify-content: space-between;\r\n              margin: 0 0 20px;\r\n              list-style: none;\r\n\r\n              li {\r\n                width: 32px;\r\n                height: 32px;\r\n                cursor: pointer;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .reset {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .top-bar {\r\n    .filter {\r\n      float: left;\r\n\r\n      li {\r\n        display: inline-block;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        margin-right: 20px;\r\n        padding: 0 20px;\r\n        background-color: #ddd;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n\r\n        &.active {\r\n          color: #fff;\r\n        }\r\n\r\n        &.kd {\r\n          &.active {\r\n            background-color: #1990ff;\r\n          }\r\n        }\r\n\r\n        &.zsd {\r\n          &.active {\r\n            background-color: #d42a2a;\r\n          }\r\n        }\r\n\r\n        &.zskp {\r\n          &.active {\r\n            background-color: #64c935;\r\n          }\r\n        }\r\n\r\n        &.st {\r\n          &.active {\r\n            background-color: #4332ad;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .export {\r\n      float: right;\r\n      padding: 0 20px;\r\n      height: 40px;\r\n      position: relative;\r\n      left: 40px;\r\n      line-height: 40px;\r\n      background: #1990ff;\r\n      border-radius: 10px;\r\n      border: 1px solid #ccc;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .head{\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    height: 300px;\r\n    padding: 0 10px 0px 10px;\r\n    height: auto;\r\n    background: #161616;\r\n\r\n  }\r\n\r\n  .jsmind_layout {\r\n    background-color: #ffffff;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    .jsmind_toolbar {\r\n      width: 100%;\r\n      padding: 0 10px 0px 10px;\r\n      height: auto;\r\n      flex-shrink: 0;\r\n      display: flex;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      background-color: #f8f9fa;\r\n      box-shadow: 0 0 4px #b8b8b8;\r\n    }\r\n\r\n    /deep/ .el-button--medium,\r\n    /deep/ .el-input--medium {\r\n      margin-top: 10px;\r\n    }\r\n\r\n   \r\n\r\n    /deep/.el-upload-list {\r\n      display: none !important;\r\n    }\r\n\r\n    .pad {\r\n      margin-right: 10px;\r\n    }\r\n\r\n    .pad-left {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    jmnode {\r\n      max-width: unset;\r\n      color: #fff;\r\n      background-color: #ddd;\r\n\r\n      &.selected {\r\n        color: #fff !important;\r\n        border: 1px solid #777;\r\n        transition: 0s;\r\n      }\r\n    }\r\n\r\n    /deep/ jmnode.selected {\r\n      background-color: #b9b9b9;\r\n      color: #fff;\r\n      box-shadow: 2px 2px 8px #777;\r\n    }\r\n\r\n    /deep/ jmnode:hover {\r\n      box-shadow: 2px 2px 8px #777;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  .context-menu {\r\n    width: 150px;\r\n    padding: 12px 0px;\r\n    position: fixed;\r\n    z-index: 100;\r\n    background: rgb(255, 255, 255);\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 12px 0px;\r\n    border-radius: 5px;\r\n    font-size: 12px;\r\n    display: block;\r\n    left: 912px;\r\n    top: 535px;\r\n\r\n    .el-menu-item {\r\n      width: 150px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n    }\r\n  }\r\n\r\n  .jsmind-inner {\r\n    \r\n    position:relative;\r\n    width: 85%;\r\n    height:60%;\r\n    margin-bottom: 50%;\r\n    margin-top: 3%;\r\n    margin-left: 5%;\r\n  \r\n    \r\n    background-color: rgb(250, 247, 247);\r\n    &::-webkit-scrollbar {\r\n      height: 10px;\r\n    }\r\n    \r\n  }\r\n\r\n  .form-con {\r\n    padding-top: 20px;\r\n  }\r\n\r\n  .ele-width {\r\n    width: 96%;\r\n  }\r\n  .el-popper[x-placement^=bottom]{\r\n\t\twidth:500px !important;\r\n\t}\r\n  .el-autocomplete {\r\n    width: 500px;\r\n  }\r\n  .el-input{\r\n    width: 500px;\r\n  }\r\n\r\n  #jsmind_containerTest {\r\n    position: fixed;\r\n  top: 215px;\r\n  left: 290px;\r\n  width: 85%;\r\n // height: 74%;\r\n height: 100%;\r\n  \r\n        background-color: #ffffff;\r\n    \r\n      }\r\n\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAmOA,OAAAA,KAAA;AACA;EAEAC,KAAA;IAGA,YAAAC,CAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA,MAAAG,IAAA,GAAAH,GAAA;MACA,KAAAI,EAAA,CAAAC,IAAA,CAAAC,OAAA,CAAAH,IAAA;MACA,KAAAI,IAAA,GAAAP,GAAA;MACAC,OAAA,CAAAC,GAAA,MAAAK,IAAA;MACA,KAAAC,KAAA,gBAAAD,IAAA;IACA;;IACAE,YAAAC,CAAA;MACA,KAAAC,YAAA,MAAAC,IAAA,CAAAC,IAAA,CAAAC,QAAA,EAAAC,IAAA;QACA,IAAAL,CAAA,CAAAM,MAAA;UACA,IAAAN,CAAA,CAAAO,QAAA,CAAAF,IAAA,CAAAG,IAAA;YACA,KAAAd,EAAA,CAAAe,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;YACA,KAAAnB,EAAA,CAAAe,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,KAAAH,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;QACA;UACA,KAAAnB,EAAA,CAAAe,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,KAAAH,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;QACA;MACA;IACA;EACA;EACAE,QAAA;IACAC,UAAA;MACA,iBAAAR,IAAA;QACA,YAAAS,SAAA,CAAAC,MAAA,KAAAV,IAAA,GACA,KAAAS,SAAA,CAAAE,eAAA,GACA,KAAAF,SAAA,CAAAG,gBAAA;MACA;IACA;IACAC,UAAA;MACA,iBAAAb,IAAA;QACA,YAAAS,SAAA,CAAAC,MAAA,KAAAV,IAAA,GACA,KAAAS,SAAA,CAAAK,eAAA,GACA,KAAAL,SAAA,CAAAM,gBAAA;MACA;IACA;EACA;EACApB,KAAA;IACA;MACAN,IAAA;MAAA;MACA2B,KAAA;MACAC,KAAA;MACAC,MAAA;MACAC,OAAA;MAAA;MACAC,UAAA;MACAC,KAAA;MAEAC,OAAA;QACAC,SAAA;QAAA;QACAC,QAAA;QAAA;QACAC,YAAA;QAAA;QACAC,KAAA;QAAA;QACAvC,IAAA;UACAwC,QAAA;UACAC,MAAA;UAAA;UACAC,OAAA;UAAA;UACAC,OAAA;UAAA;UACAC,UAAA;UAAA;UACAC,UAAA;UAAA;UACAC,aAAA;QAEA;QACAC,MAAA;UACAC,MAAA;UAAA;UACAC,MAAA;UAAA;UACAC,MAAA;QACA;;QACAC,QAAA;UACA;UACAC,MAAA;QACA;MACA;MAEAtD,IAAA;QACAuD,KAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;MACA;;MACAvC,KAAA;QACA;QACA;UACAC,OAAA;UACAC,OAAA;UACAsC,QAAA;UACArC,WAAA;QACA;QACA;QACA;UACAF,OAAA;UACAC,OAAA;UACAsC,QAAA;UACArC,WAAA;QACA;QACA;UACA;UACAF,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA,IACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA,GACA;UACAD,OAAA;UACAC,OAAA;QACA,GACA;UACAD,OAAA;UACAC,OAAA;QACA,EACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;MACA;MAEAI,SAAA;QACAC,MAAA;QACAE,gBAAA;QACAD,eAAA;QACAI,gBAAA;QACAD,eAAA;MACA;MACA8B,aAAA;MACAC,cAAA;MACAC,cAAA;QACA5C,EAAA;QACA6C,IAAA;MACA;MAAA;MACAC,YAAA;MAAA;MACAC,UAAA;MAAA;MACAC,QAAA;MAAA;MACAC,SAAA;QACAC,GAAA;QACAC,MAAA;QACAC,IAAA;QACAC,KAAA;MACA;MACAC,SAAA,MAAAC,GAAA;MAAA;MACAlE,WAAA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;IAEA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;IAEA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEAO,kBAAA;MACA,MAAA3B,YAAA,QAAAnG,EAAA,CAAAoG,i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"},"metadata":{},"sourceType":"module","externalDependencies":[]}