{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    value: {\n      type: [Number, String],\n      default: null\n    },\n    list: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    itemColor: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    lineColor: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    lineAnimated: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      currentIndex: 0,\n      lineStyle: {},\n      scrollLeft: 0,\n      tabsScrollLeft: 0,\n      duration: 0.3\n    };\n  },\n  computed: {\n    showTitleSlot() {\n      return this.$scopedSlots.title;\n    }\n  },\n  watch: {\n    list() {\n      this.setTabList();\n    },\n    value() {\n      this.currentIndex = this.value;\n      this.setTabList();\n    },\n    scrollLeft(val) {\n      console.log(val);\n    }\n  },\n  mounted() {\n    this.currentIndex = this.value;\n    this.setTabList();\n    if (!this.lineAnimated) {\n      this.duration = 0;\n    }\n    // console.log(this.$scopedSlots)\n  },\n\n  methods: {\n    select(item, index) {\n      this.$emit('input', index);\n      this.scroll();\n    },\n    setTabList() {\n      this.$nextTick(() => {\n        if (this.list.length > 0) {\n          this.setLine();\n          this.scrollIntodiv();\n        }\n      });\n    },\n    setLine() {\n      let lineWidth = 0;\n      let lineLeft = 0;\n      this.getElementData(`#tab_item`, data => {\n        const el = data[this.currentIndex];\n        lineWidth = el.width;\n        // lineLeft = el.width * (this.currentIndex + 0.5)  // 此种只能针对每个item长度一致的\n        lineLeft = el.width / 2 + -data[0].left + el.left;\n        this.lineStyle = {\n          width: `${lineWidth}px`,\n          transform: `translateX(${lineLeft}px) translateX(-50%)`,\n          transitionDuration: `${this.duration}s`\n        };\n      });\n    },\n    // item滚动计算\n    scrollIntodiv() {\n      this.getElementData('#tab_list', data => {\n        // const list = data[0]\n        this.getElementData('#tab_item', data => {\n          const item = data[this.currentIndex];\n          // 滚动父级元素宽度\n          // const tabContentWidth = this.$refs.tabContentScroll.scrollWidth\n          // 父级元素可视区域宽度\n          const screenWdith = this.$refs.tabContentScroll.offsetWidth;\n          // item的宽度\n          const itemWidth = item.width;\n          // item距离最左侧的距离\n          const itemOffsetLeft = item.left;\n          // item中间值 = (父级可视区域宽度 - item的宽度) / 2\n          const itemCenter = (screenWdith - itemWidth) / 2;\n          // item目标值 = 当前item左移值 - 中间值\n          const itemTarget = itemOffsetLeft - itemCenter;\n          // 屏幕宽度\n          const winWidth = window.innerWidth;\n          console.log(winWidth);\n          // 目标值小于0时，滚动值设置为0\n          if (itemTarget < 0) {\n            this.$refs.tabContentScroll.scrollLeft = 0;\n            return;\n          }\n          // 目标值小于屏幕宽减去父级可是区域宽时，滚动值设置为 父级可是区域宽-屏幕宽+元素宽\n          if (itemTarget < winWidth - screenWdith) {\n            this.$refs.tabContentScroll.scrollLeft = screenWdith - winWidth + itemWidth;\n            return;\n          }\n          this.$refs.tabContentScroll.scrollLeft = itemTarget;\n        });\n      });\n    },\n    getElementData(el, callback) {\n      const domArr = this.$refs.tab_item;\n      const arr = [];\n      domArr.forEach(e => {\n        arr.push({\n          id: 'tab_item',\n          left: e.offsetLeft,\n          width: e.offsetWidth\n        });\n      });\n      callback(arr);\n    },\n    scroll() {\n      this.scrollLeft = this.$refs.tabContentScroll.scrollLeft;\n    }\n  }\n};","map":{"version":3,"names":["props","value","type","Number","String","default","list","Array","itemColor","lineColor","lineAnimated","data","currentIndex","lineStyle","scrollLeft","tabsScrollLeft","duration","computed","showTitleSlot","$scopedSlots","title","watch","setTabList","val","console","log","mounted","methods","select","item","index","$emit","scroll","$nextTick","length","setLine","scrollIntodiv","lineWidth","lineLeft","getElementData","el","width","left","transform","transitionDuration","screenWdith","$refs","tabContentScroll","offsetWidth","itemWidth","itemOffsetLeft","itemCenter","itemTarget","winWidth","window","innerWidth","callback","domArr","tab_item","arr","forEach","e","push","id","offsetLeft"],"sources":["src/components/test.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"list.length > 0\" class=\"tabBlock\">\r\n    <div @scroll=\"scroll\" class=\"tabContent\">\r\n      <div ref=\"tabContentScroll\" class=\"tabContentScroll\">\r\n        <div id=\"tab_list\" class=\"tab\">\r\n          <div\r\n            ref=\"tab_item\"\r\n            v-for=\"(item, index) in list\"\r\n            :key=\"index\"\r\n            :class=\"['tab__item', { 'tab__item--active': currentIndex === index }]\"\r\n            :style=\"{ color: currentIndex === index ? `${itemColor}` : '' }\"\r\n            @click=\"select(item, index)\"\r\n          >\r\n            <div class=\"tab__item-title\">\r\n              <slot :title=\"item\" name=\"title\"></slot>\r\n            </div>\r\n            <div v-if=\"!showTitleSlot\" class=\"tab__item-title\">{{ item.title }}</div>\r\n          </div>\r\n        </div>\r\n        <div :style=\"{ background: lineColor, width: lineStyle.width, transform: lineStyle.transform, transitionDuration: lineStyle.transitionDuration }\" class=\"tab__line\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type: [Number, String],\r\n      default: null\r\n    },\r\n    list: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    itemColor: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    lineColor: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    lineAnimated: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentIndex: 0,\r\n      lineStyle: {},\r\n      scrollLeft: 0,\r\n      tabsScrollLeft: 0,\r\n      duration: 0.3\r\n    }\r\n  },\r\n  computed: {\r\n    showTitleSlot() {\r\n      return this.$scopedSlots.title\r\n    }\r\n  },\r\n  watch: {\r\n    list() {\r\n      this.setTabList()\r\n    },\r\n    value() {\r\n      this.currentIndex = this.value\r\n      this.setTabList()\r\n    },\r\n    scrollLeft(val) {\r\n      console.log(val)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.currentIndex = this.value\r\n    this.setTabList()\r\n    if (!this.lineAnimated) {\r\n      this.duration = 0\r\n    }\r\n    // console.log(this.$scopedSlots)\r\n  },\r\n  methods: {\r\n    select(item, index) {\r\n      this.$emit('input', index)\r\n      this.scroll()\r\n    },\r\n    setTabList() {\r\n      this.$nextTick(() => {\r\n        if (this.list.length > 0) {\r\n          this.setLine()\r\n          this.scrollIntodiv()\r\n        }\r\n      })\r\n    },\r\n    setLine() {\r\n      let lineWidth = 0\r\n      let lineLeft = 0\r\n      this.getElementData(`#tab_item`, data => {\r\n        const el = data[this.currentIndex]\r\n        lineWidth = el.width\r\n        // lineLeft = el.width * (this.currentIndex + 0.5)  // 此种只能针对每个item长度一致的\r\n        lineLeft = el.width / 2 + -data[0].left + el.left\r\n        this.lineStyle = {\r\n          width: `${lineWidth}px`,\r\n          transform: `translateX(${lineLeft}px) translateX(-50%)`,\r\n          transitionDuration: `${this.duration}s`\r\n        }\r\n      })\r\n    },\r\n    // item滚动计算\r\n    scrollIntodiv() {\r\n      this.getElementData('#tab_list', data => {\r\n        // const list = data[0]\r\n        this.getElementData('#tab_item', data => {\r\n          const item = data[this.currentIndex]\r\n          // 滚动父级元素宽度\r\n          // const tabContentWidth = this.$refs.tabContentScroll.scrollWidth\r\n          // 父级元素可视区域宽度\r\n          const screenWdith = this.$refs.tabContentScroll.offsetWidth\r\n          // item的宽度\r\n          const itemWidth = item.width\r\n          // item距离最左侧的距离\r\n          const itemOffsetLeft = item.left\r\n          // item中间值 = (父级可视区域宽度 - item的宽度) / 2\r\n          const itemCenter = (screenWdith - itemWidth) / 2\r\n          // item目标值 = 当前item左移值 - 中间值\r\n          const itemTarget = itemOffsetLeft - itemCenter\r\n          // 屏幕宽度\r\n          const winWidth = window.innerWidth\r\n          console.log(winWidth)\r\n          // 目标值小于0时，滚动值设置为0\r\n          if (itemTarget < 0) {\r\n            this.$refs.tabContentScroll.scrollLeft = 0\r\n            return\r\n          }\r\n          // 目标值小于屏幕宽减去父级可是区域宽时，滚动值设置为 父级可是区域宽-屏幕宽+元素宽\r\n          if (itemTarget < winWidth - screenWdith) {\r\n            this.$refs.tabContentScroll.scrollLeft = screenWdith - winWidth + itemWidth\r\n            return\r\n          }\r\n          this.$refs.tabContentScroll.scrollLeft = itemTarget\r\n        })\r\n      })\r\n    },\r\n    getElementData(el, callback) {\r\n      const domArr = this.$refs.tab_item\r\n      const arr = []\r\n      domArr.forEach(e => {\r\n        arr.push({ id: 'tab_item', left: e.offsetLeft, width: e.offsetWidth })\r\n      })\r\n      callback(arr)\r\n    },\r\n    scroll() {\r\n      this.scrollLeft = this.$refs.tabContentScroll.scrollLeft\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.tabBlock {\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n  .tabContent {\r\n    .tabContentScroll {\r\n      margin: 0 15px;\r\n      overflow: auto;\r\n    }\r\n    .tabContentScroll::-webkit-scrollbar-thumb {\r\n      display: none;\r\n    }\r\n  }\r\n  .tabContent::before {\r\n    content: '';\r\n    height: 1px;\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 1px;\r\n    left: 0;\r\n    background: #cccccc;\r\n  }\r\n  .tab {\r\n    position: relative;\r\n    display: flex;\r\n    font-size: 28px;\r\n    padding-bottom: 15px;\r\n    white-space: nowrap;\r\n    &__item {\r\n      // flex: 1;\r\n      // text-align: center;\r\n      line-height: 90px;\r\n      color: #999999;\r\n      margin-right: 40px;\r\n      position: relative;\r\n      &--active {\r\n        color: black;\r\n      }\r\n      &-title {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        line-height: 22px;\r\n      }\r\n    }\r\n  }\r\n  .tab__line {\r\n    display: block;\r\n    height: 1px;\r\n    position: absolute;\r\n    bottom: 0px;\r\n    left: 0;\r\n    z-index: 1;\r\n    border-radius: 3px;\r\n    position: relative;\r\n    background: black;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":";AAyBA;EACAA,KAAA;IACAC,KAAA;MACAC,IAAA,GAAAC,MAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,IAAA;MACAJ,IAAA,EAAAK,KAAA;MACAF,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACAG,SAAA;MACAN,IAAA,EAAAK,KAAA;MACAF,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACAI,SAAA;MACAP,IAAA,EAAAK,KAAA;MACAF,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACAK,YAAA;MACAR,IAAA,EAAAK,KAAA;MACAF,OAAA,EAAAA,CAAA;QACA;MACA;IACA;EACA;EACAM,KAAA;IACA;MACAC,YAAA;MACAC,SAAA;MACAC,UAAA;MACAC,cAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,cAAA;MACA,YAAAC,YAAA,CAAAC,KAAA;IACA;EACA;EACAC,KAAA;IACAf,KAAA;MACA,KAAAgB,UAAA;IACA;IACArB,MAAA;MACA,KAAAW,YAAA,QAAAX,KAAA;MACA,KAAAqB,UAAA;IACA;IACAR,WAAAS,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAd,YAAA,QAAAX,KAAA;IACA,KAAAqB,UAAA;IACA,UAAAZ,YAAA;MACA,KAAAM,QAAA;IACA;IACA;EACA;;EACAW,OAAA;IACAC,OAAAC,IAAA,EAAAC,KAAA;MACA,KAAAC,KAAA,UAAAD,KAAA;MACA,KAAAE,MAAA;IACA;IACAV,WAAA;MACA,KAAAW,SAAA;QACA,SAAA3B,IAAA,CAAA4B,MAAA;UACA,KAAAC,OAAA;UACA,KAAAC,aAAA;QACA;MACA;IACA;IACAD,QAAA;MACA,IAAAE,SAAA;MACA,IAAAC,QAAA;MACA,KAAAC,cAAA,cAAA5B,IAAA;QACA,MAAA6B,EAAA,GAAA7B,IAAA,MAAAC,YAAA;QACAyB,SAAA,GAAAG,EAAA,CAAAC,KAAA;QACA;QACAH,QAAA,GAAAE,EAAA,CAAAC,KAAA,QAAA9B,IAAA,IAAA+B,IAAA,GAAAF,EAAA,CAAAE,IAAA;QACA,KAAA7B,SAAA;UACA4B,KAAA,KAAAJ,SAAA;UACAM,SAAA,gBAAAL,QAAA;UACAM,kBAAA,UAAA5B,QAAA;QACA;MACA;IACA;IACA;IACAoB,cAAA;MACA,KAAAG,cAAA,cAAA5B,IAAA;QACA;QACA,KAAA4B,cAAA,cAAA5B,IAAA;UACA,MAAAkB,IAAA,GAAAlB,IAAA,MAAAC,YAAA;UACA;UACA;UACA;UACA,MAAAiC,WAAA,QAAAC,KAAA,CAAAC,gBAAA,CAAAC,WAAA;UACA;UACA,MAAAC,SAAA,GAAApB,IAAA,CAAAY,KAAA;UACA;UACA,MAAAS,cAAA,GAAArB,IAAA,CAAAa,IAAA;UACA;UACA,MAAAS,UAAA,IAAAN,WAAA,GAAAI,SAAA;UACA;UACA,MAAAG,UAAA,GAAAF,cAAA,GAAAC,UAAA;UACA;UACA,MAAAE,QAAA,GAAAC,MAAA,CAAAC,UAAA;UACA/B,OAAA,CAAAC,GAAA,CAAA4B,QAAA;UACA;UACA,IAAAD,UAAA;YACA,KAAAN,KAAA,CAAAC,gBAAA,CAAAjC,UAAA;YACA;UACA;UACA;UACA,IAAAsC,UAAA,GAAAC,QAAA,GAAAR,WAAA;YACA,KAAAC,KAAA,CAAAC,gBAAA,CAAAjC,UAAA,GAAA+B,WAAA,GAAAQ,QAAA,GAAAJ,SAAA;YACA;UACA;UACA,KAAAH,KAAA,CAAAC,gBAAA,CAAAjC,UAAA,GAAAsC,UAAA;QACA;MACA;IACA;IACAb,eAAAC,EAAA,EAAAgB,QAAA;MACA,MAAAC,MAAA,QAAAX,KAAA,CAAAY,QAAA;MACA,MAAAC,GAAA;MACAF,MAAA,CAAAG,OAAA,CAAAC,CAAA;QACAF,GAAA,CAAAG,IAAA;UAAAC,EAAA;UAAArB,IAAA,EAAAmB,CAAA,CAAAG,UAAA;UAAAvB,KAAA,EAAAoB,CAAA,CAAAb;QAAA;MACA;MACAQ,QAAA,CAAAG,GAAA;IACA;IACA3B,OAAA;MACA,KAAAlB,UAAA,QAAAgC,KAAA,CAAAC,gBAAA,CAAAjC,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}