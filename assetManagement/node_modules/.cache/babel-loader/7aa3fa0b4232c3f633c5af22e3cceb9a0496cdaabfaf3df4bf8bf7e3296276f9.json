{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  watch: {\n    \"zoom.value\"(val) {\n      const zoom = val / 100;\n      this.jm.view.setZoom(zoom);\n    },\n    selectTypes(v) {\n      this.loopTreeData(this.mind.data.children, item => {\n        if (v.length) {\n          if (v.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n        }\n      });\n    }\n  },\n  computed: {\n    pathColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.pathActiveColor : this.structure.pathOrginalColor;\n      };\n    },\n    rectColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.rectActiveColor : this.structure.rectOrginalColor;\n      };\n    }\n  },\n  data() {\n    return {\n      jsmind_containerStyle: {\n        width: '1000px',\n        height: '600px',\n        top: '50%',\n        // 将容器的顶部位置设置为页面的一半\n        transform: 'translateY(40%)' // 使用负的自身高度的一半来上移容器\n      },\n\n      lista: [],\n      listb: [],\n      select: false,\n      getData: [],\n      // 根据输入值  查询到的结果\n      remindData: [],\n      input: \"\",\n      mind: {\n        meta: {\n          name: \"f10_股票\",\n          author: \"\",\n          version: \"0.2\"\n        },\n        format: \"node_tree\",\n        data: {\n          id: \"root\",\n          topic: \"新能源汽车\",\n          type: \"2\",\n          expanded: true,\n          children: [{\n            id: \"root1\",\n            // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n            topic: \"公司\",\n            // [必选] 节点上显示的内容\n            direction: \"right\",\n            // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n            expanded: true,\n            // [可选] 该节点是否是展开状态，默认为 true\n            type: \"3\",\n            // [可选]自定义节点类型\n            children: [{\n              id: \"company1\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"东安动力|600178\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }, {\n              id: \"company2\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"申华控股|600653\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }, {\n              id: \"company3\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"北巴传媒|600368\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }, {\n              id: \"company4\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"铜峰电子|600237\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }, {\n              id: \"company5\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"东旭广电|000413\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"2\" // [可选]自定义节点类型\n            }]\n          }, {\n            id: \"root2\",\n            // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n            topic: \"下游产品\",\n            // [必选] 节点上显示的内容\n            direction: \"right\",\n            // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n            expanded: true,\n            // [可选] 该节点是否是展开状态，默认为 true\n            type: \"3\",\n            // [可选]自定义节点类型\n            children: [{\n              id: \"product1\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"充电桩\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\" // [可选]自定义节点类型\n            }, {\n              id: \"product2\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"机动车维修服务\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\" // [可选]自定义节点类型\n            }, {\n              id: \"product3\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"汽车贸易\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\" // [可选]自定义节点类型\n            }, {\n              id: \"product4\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"汽车美容服务\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\" // [可选]自定义节点类型\n            }, {\n              id: \"product5\",\n              // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"汽车物流服务\",\n              // [必选] 节点上显示的内容\n              direction: \"right\",\n              // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true,\n              // [可选] 该节点是否是展开状态，默认为 true\n              type: \"4\" // [可选]自定义节点类型\n            }]\n          }]\n        }\n      },\n\n      options: {\n        container: \"jsmind_container\",\n        // [必选] 容器的ID\n        editable: true,\n        // [可选] 是否启用编辑\n        support_html: true,\n        // 是否支持节点里的HTML元素\n        theme: \"\",\n        // [可选] 主题\n        view: {\n          engine: \"svg\",\n          // 思维导图各节点之间线条的绘制引擎\n          hmargin: 0,\n          // 思维导图距容器外框的最小水平距离\n          vmargin: 0,\n          // 思维导图距容器外框的最小垂直距离\n          line_width: 1,\n          // 思维导图线条的粗细\n          line_color: \"\t#DCDCDC\" // 思维导图线条的颜色\n        },\n\n        layout: {\n          hspace: 10,\n          // 节点之间的水平间距\n          vspace: 10,\n          // 节点之间的垂直间距\n          pspace: 14 // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\n        },\n\n        shortcut: {\n          // 禁用快捷键\n          enable: false\n        }\n      },\n      zoom: {\n        value: 100,\n        // 层级大小\n        min: 10,\n        // 最小层级\n        max: 400 // 最大层级\n      },\n\n      bgMap: {\n        //公司\n        1: {\n          bgcolor: \"#87CEFA \",\n          fgcolor: \" #000\",\n          original: \"#87CEFA\",\n          transparent: \"rgb(25, 144, 255, 0.2)\"\n        },\n        //根节点\n        2: {\n          bgcolor: \"#1E90FF\",\n          fgcolor: \"#fff\",\n          original: \"rgb(100, 201, 53)\",\n          transparent: \"rgb(100, 201, 53, 0.2)\"\n        },\n        3: {\n          //其他\n          bgcolor: \" \",\n          fgcolor: \"#000\"\n        },\n        4: {\n          //人\n          bgcolor: \"#FF7F50\",\n          fgcolor: \"#fff\"\n        },\n        5: [{\n          //发行\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\"\n        }, {\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\"\n        }, {\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\"\n        }],\n        6: {\n          //项目\n          bgcolor: \"#ecb5c9\",\n          fgcolor: \"#fff\"\n        },\n        7: {\n          //发行1\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\"\n        },\n        8: {\n          //发行2\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\"\n        },\n        9: {\n          //发行3\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\"\n        }\n      },\n      structure: {\n        active: \"right\",\n        pathOrginalColor: \"#2B2F36\",\n        pathActiveColor: \"#3370FF\",\n        rectOrginalColor: \"#C3C6CB\",\n        rectActiveColor: \"#BACEFD\"\n      },\n      dialogVisible: false,\n      dialogVisible2: false,\n      selectNodeInfo: {\n        id: null,\n        Name: \"\"\n      },\n      // 选中节点信息\n      tempNodeInfo: null,\n      // 保存修改之前的信息\n      createType: \"\",\n      // 添加平级or子级\n      showMenu: false,\n      // 是否显示右键菜单栏\n      menuStyle: {\n        top: \"\",\n        bottom: \"\",\n        left: \"\",\n        right: \"\"\n      },\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]),\n      // 选中types Set\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"] // 选中types Array\n    };\n  },\n\n  methods: {\n    querySearch(queryString, cb) {\n      console.log(queryString);\n      this.remindData = [];\n      if (this.input !== \"\") {\n        axios.post(\"http://localhost:8086//ShareTiShi\", {\n          select_name: queryString\n        }).then(response => {\n          console.log(\"finish\");\n          this.getData = response.data;\n          this.getData.forEach(item => {\n            let obj = {\n              value: \"\"\n            };\n            obj.value = item;\n            this.remindData.push(obj);\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n        let nameTipsArray = this.remindData;\n        // 调用 callback 返回建议列表的数据\n        cb(nameTipsArray);\n      }\n    },\n    handleSelect(item) {\n      let regex = /\\[(.+?)\\]/g;\n      this.input = item.value.match(regex)[0].replace(\"[\", \"\").replace(\"]\", \"\");\n    },\n    search() {\n      this.jm.update_node(\"root\", this.input);\n      const selectedNode1 = this.jm.get_node(\"root1\");\n      this.delChild(selectedNode1);\n      this.add_stock(selectedNode1, this.input);\n    },\n    delChild(node) {\n      if (node.children.length != 0) {\n        console.log(node.children);\n        let len = node.children.length;\n        for (var deli = 0; deli < len;) {\n          console.log(node.children[0]);\n          this.jm.remove_node(node.children[0]);\n          deli = deli + 1;\n        }\n      }\n    },\n    // 重置视图\n    reset() {\n      document.querySelector(\".root\").scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\"\n      });\n    },\n    // 缩小\n    zoomOut() {\n      this.jm.view.zoomOut();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 放大\n    zoomIn() {\n      this.jm.view.zoomIn();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 循环树结构\n    loopTreeData(list, callback) {\n      (function doOneFloor(list) {\n        if (Array.isArray(list)) {\n          for (let i = 0; i < list.length; i++) {\n            const item = list[i];\n            callback(item, i);\n            if (item.children && item.children.length > 0) {\n              doOneFloor(item.children);\n            }\n          }\n        }\n      })(list);\n    },\n    // 设置背景颜色\n    setColor() {\n      this.jm.set_node_color(\"root\", this.bgMap[2].bgcolor, this.bgMap[2].fgcolor);\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\n      this.loopTreeData(this.mind.data.children, item => {\n        if (this.selectTypes.length) {\n          if (this.selectTypes.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n        }\n      });\n    },\n    // 初始化配置\n    init() {\n      this.jm.view.minZoom = 0.1;\n      this.jm.view.maxZoom = 5;\n      this.setColor();\n\n      //右键菜单\n      this.jm.view.add_event(this.editor, \"contextmenu\", e => {\n        console.log(\"A\");\n        const selectedNode = this.jm.get_selected_node();\n        console.log(selectedNode);\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\n          e.preventDefault();\n          const el = document.querySelector(\".context-menu .el-menu-item\");\n          const width = parseFloat(window.getComputedStyle(el).width);\n          const height = parseFloat(window.getComputedStyle(el).height) * 3 + 12;\n          const windowHeight = window.innerHeight;\n          const windowWidth = window.innerWidth;\n\n          // 极限位置 避免越界\n          if (e.clientY + height > windowHeight) {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = \"unset\";\n            this.menuStyle.bottom = 0;\n          } else if (e.clientX + width > windowWidth) {\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.left = \"unset\";\n            this.menuStyle.right = 0;\n          } else {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.bottom = \"unset\";\n          }\n          this.showMenu = true;\n          if (selectedNode.topic == \"下游产品\") {\n            this.select = true;\n          } else {\n            this.select = false;\n          }\n        } else {\n          this.showMenu = false;\n        }\n      });\n    },\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    sureEditNode() {},\n    // 拖拽\n    handleDrop(draggingNode, dropNode) {\n      // 前一个兄弟节点\n      const prevNode = this.jm.find_node_before(dropNode);\n      // 获取移动后的node\n      const dragForm = {\n        modelId: \"\",\n        treeNum: !prevNode ? draggingNode : prevNode.id,\n        thisTreeNum: dropNode\n      };\n      //console.log(\"dragForm\", dragForm);\n\n      // TODO 调接口\n    },\n\n    add_company(addnode, company) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"董事长\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"董事长\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"总裁\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"总裁\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"首席运营官\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"首席运营官\"\n        }).then(response => {\n          //console.log(\"生产公司\" + response);\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"监事\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"监事\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"董事会秘书\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"董事会秘书\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"发行\") {\n        axios.post(\"http://localhost:8086/faxing\", {\n          select_name: company,\n          relation: \"发行\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i].ChiName;\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              let num = 7 + this.lista[i].Stock;\n              newNode1.type = num;\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"参股公司\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"参股公司\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"控股股东\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"控股股东\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"大股东\") {\n        axios.post(\"http://localhost:8086/gudong\", {\n          select_name: company\n          //relation: \"大股东\",\n        }).then(response => {\n          if ((response.data.company.length == 0 || !response.data.person.length == 0) && addnode.parent.id != \"root\") {\n            console.log(response.data.company.length);\n            this.jm.remove_node(addnode.id);\n          } else {\n            console.log(response.data);\n            this.lista = response.data.person;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n            this.listb = response.data.company;\n            console.log(\"b:\" + this.listb);\n            for (var i = 0; i < this.listb.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.listb[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"投资\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"投资\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"6\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    add_person(addnode, person) {\n      if (addnode.data && addnode.topic == \"担任董事长\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任董事长\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          }\n          this.lista = response.data;\n          var len = this.lista.length;\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n            newNode1.type = \"1\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任总裁\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任总裁\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任首席运营官\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任首席运营官\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任监事\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任监事\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任董事会秘书\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任董事会秘书\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"实际控制人\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"实际控制人\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\" + addnode.topic);\n      }\n      this.jm.collapse_node(addnode);\n    },\n    add_stock(addnode, share) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"发行公司\") {\n        axios.post(\"http://localhost:8086/share\", {\n          select_name: share,\n          relation: \"发行公司\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          }\n          this.lista = response.data;\n          console.log(this.lista);\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n            newNode1.type = \"1\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    color_conditional() {\n      this.dialogVisible2 = true;\n      this.showMenu = false;\n    },\n    nodeClick() {\n      this.showMenu = false;\n      const selectedNode = this.jm.get_selected_node();\n      console.log(selectedNode.id);\n      //let newNode1 = this.jm.add_node(selectedNode, \"table1\", \"topic1\");*/\n      if (!selectedNode) return;\n      //console.log(selectedNode.type)\n      if (selectedNode.data) {\n        if (selectedNode.children.length != 0) {\n          this.jm.toggle_node(selectedNode);\n        } else if (selectedNode.type == 1) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let nodeid7 = jsMind.util.uuid.newid();\n          let nodeid8 = jsMind.util.uuid.newid();\n          let nodeid9 = jsMind.util.uuid.newid();\n          let nodeid10 = jsMind.util.uuid.newid();\n          let topic1 = \"董事长\";\n          let topic2 = \"总裁\";\n          let topic3 = \"首席运营官\";\n          let topic4 = \"监事\";\n          let topic5 = \"董事会秘书\";\n          let topic6 = \"发行\";\n          let topic7 = \"参股公司\";\n          let topic8 = \"控股股东\";\n          let topic9 = \"大股东\";\n          let topic10 = \"投资\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          let newNode7 = this.jm.add_node(selectedNode, nodeid7, topic7);\n          let newNode8 = this.jm.add_node(selectedNode, nodeid8, topic8);\n          let newNode9 = this.jm.add_node(selectedNode, nodeid9, topic9);\n          let newNode10 = this.jm.add_node(selectedNode, nodeid10, topic10);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          newNode7.type = \"3\";\n          newNode8.type = \"3\";\n          newNode9.type = \"3\";\n          newNode10.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          this.jm.set_node_color(newNode3.id, this.bgMap[newNode3.type].bgcolor, this.bgMap[newNode3.type].fgcolor);\n          this.jm.set_node_color(newNode4.id, this.bgMap[newNode4.type].bgcolor, this.bgMap[newNode4.type].fgcolor);\n          this.jm.set_node_color(newNode5.id, this.bgMap[newNode5.type].bgcolor, this.bgMap[newNode5.type].fgcolor);\n          this.jm.set_node_color(newNode6.id, this.bgMap[newNode6.type].bgcolor, this.bgMap[newNode6.type].fgcolor);\n          this.jm.set_node_color(newNode7.id, this.bgMap[newNode7.type].bgcolor, this.bgMap[newNode7.type].fgcolor);\n          this.jm.set_node_color(newNode8.id, this.bgMap[newNode8.type].bgcolor, this.bgMap[newNode8.type].fgcolor);\n          this.jm.set_node_color(newNode9.id, this.bgMap[newNode9.type].bgcolor, this.bgMap[newNode9.type].fgcolor);\n          this.jm.set_node_color(newNode10.id, this.bgMap[newNode10.type].bgcolor, this.bgMap[newNode10.type].fgcolor);\n          this.add_company(newNode1, selectedNode.topic);\n          this.add_company(newNode2, selectedNode.topic);\n          this.add_company(newNode3, selectedNode.topic);\n          this.add_company(newNode4, selectedNode.topic);\n          this.add_company(newNode5, selectedNode.topic);\n          this.add_company(newNode6, selectedNode.topic);\n          this.add_company(newNode7, selectedNode.topic);\n          this.add_company(newNode8, selectedNode.topic);\n          this.add_company(newNode9, selectedNode.topic);\n          this.add_company(newNode10, selectedNode.topic);\n        } else if (selectedNode.type == 4) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let topic1 = \"担任董事长\";\n          let topic2 = \"担任总裁\";\n          let topic3 = \"担任首席运营官\";\n          let topic4 = \"担任监事\";\n          let topic5 = \"担任董事会秘书\";\n          let topic6 = \"实际控制人\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          this.jm.set_node_color(newNode3.id, this.bgMap[newNode3.type].bgcolor, this.bgMap[newNode3.type].fgcolor);\n          this.jm.set_node_color(newNode4.id, this.bgMap[newNode4.type].bgcolor, this.bgMap[newNode4.type].fgcolor);\n          this.jm.set_node_color(newNode5.id, this.bgMap[newNode5.type].bgcolor, this.bgMap[newNode5.type].fgcolor);\n          this.jm.set_node_color(newNode6.id, this.bgMap[newNode6.type].bgcolor, this.bgMap[newNode6.type].fgcolor);\n          this.add_person(newNode1, selectedNode.topic);\n          this.add_person(newNode2, selectedNode.topic);\n          this.add_person(newNode3, selectedNode.topic);\n          this.add_person(newNode4, selectedNode.topic);\n          this.add_person(newNode5, selectedNode.topic);\n          this.add_person(newNode6, selectedNode.topic);\n        } else if (selectedNode.type == 5) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let topic1 = \"发行公司\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          newNode1.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.add_stock(newNode1, selectedNode.topic);\n        } else {\n          this.$message({\n            showClose: true,\n            message: \"没有\" + selectedNode.topic\n          });\n        }\n      } else {\n        this.$message.error(\"wrong\");\n      }\n    },\n    delCard() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.remove_node(selectedNode.id);\n        // 获取数据\n        console.log(this.jm.get_data(\"node_tree\"));\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 滚轮缩放\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      e.preventDefault();\n      this.jm.resize();\n    },\n    // 更改颜色\n    changecolor() {\n      console.log(this.bgMap[4].bgcolor);\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type || 3].bgcolor, this.bgMap[item.type || 3].fgcolor));\n      this.dialogVisible2 = false;\n    },\n    // 导出图片\n    screen_shot() {\n      // 去除透明度\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type || 3].bgcolor, this.bgMap[item.type || 3].fgcolor));\n      try {\n        this.jm.screenshot.shootDownload();\n      } catch (error) {\n        console.log(error);\n      }\n      setTimeout(() => {\n        this.setColor();\n      }, 1000);\n    },\n    // 鼠标拖拽\n    mouseDrag() {\n      // 里层\n      const el = document.querySelector(\".jsmind-inner\");\n      // 选中节点\n      let selected;\n      el.onmousedown = ev => {\n        // 选中节点\n        selected = this.jm.get_selected_node();\n        // 标识 是否拖拽节点 避免冲突\n        this.dragNodeFlag = !!selected;\n        const disX = ev.clientX;\n        const disY = ev.clientY;\n        const originalScrollLeft = el.scrollLeft;\n        const originalScrollTop = el.scrollTop;\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\n        const originalPointerEvents = el.style[\"pointer-events\"];\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\n        el.style[\"scroll-behavior\"] = \"auto\";\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\n        document.onmousemove = ev => {\n          if (this.dragNodeFlag) return;\n          this.drag = false;\n          ev.preventDefault();\n          // 计算拖拽的偏移距离\n          const distanceX = ev.clientX - disX;\n          const distanceY = ev.clientY - disY;\n          el.scrollTo(originalScrollLeft - distanceX, originalScrollTop - distanceY);\n\n          // 在鼠标拖动的时候将点击事件屏蔽掉\n          el.style[\"pointer-events\"] = \"none\";\n          el.style.cursor = \"grabbing\";\n        };\n        document.onmouseup = () => {\n          if (!this.dragNodeFlag) {\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\n            el.style[\"pointer-events\"] = originalPointerEvents;\n            el.style.cursor = \"grab\";\n          }\n          document.onmousemove = document.onmouseup = null;\n        };\n      };\n    }\n  },\n  mounted() {\n    this.jm = jsMind.show(this.options, this.mind);\n    this.init();\n    this.mouseWheel();\n    this.mouseDrag();\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\n  }\n};","map":{"version":3,"names":["axios","watch","zoom.value","val","zoom","jm","view","setZoom","selectTypes","v","loopTreeData","mind","data","children","item","length","includes","type","set_node_color","id","bgMap","bgcolor","fgcolor","transparent","computed","pathColor","structure","active","pathActiveColor","pathOrginalColor","rectColor","rectActiveColor","rectOrginalColor","jsmind_containerStyle","width","height","top","transform","lista","listb","select","getData","remindData","input","meta","name","author","version","format","topic","expanded","direction","options","container","editable","support_html","theme","engine","hmargin","vmargin","line_width","line_color","layout","hspace","vspace","pspace","shortcut","enable","value","min","max","original","dialogVisible","dialogVisible2","selectNodeInfo","Name","tempNodeInfo","createType","showMenu","menuStyle","bottom","left","right","typeQueue","Set","methods","querySearch","queryString","cb","console","log","post","select_name","then","response","forEach","obj","push","catch","error","nameTipsArray","handleSelect","regex","match","replace","search","update_node","selectedNode1","get_node","delChild","add_stock","node","len","deli","remove_node","reset","document","querySelector","scrollIntoView","block","behavior","zoomOut","parseInt","actualZoom","zoomIn","list","callback","doOneFloor","Array","isArray","i","setColor","set_node_font_style","init","minZoom","maxZoom","add_event","editor","e","selectedNode","get_selected_node","preventDefault","el","parseFloat","window","getComputedStyle","windowHeight","innerHeight","windowWidth","innerWidth","clientY","clientX","get_selected_nodeid","sureEditNode","handleDrop","draggingNode","dropNode","prevNode","find_node_before","dragForm","modelId","treeNum","thisTreeNum","add_company","addnode","company","relation","parent","nodeid","jsMind","util","uuid","newid","newNode1","add_node","ChiName","num","Stock","person","$message","collapse_node","add_person","share","query_conditional","color_conditional","nodeClick","toggle_node","nodeid1","nodeid2","nodeid3","nodeid4","nodeid5","nodeid6","nodeid7","nodeid8","nodeid9","nodeid10","topic1","topic2","topic3","topic4","topic5","topic6","topic7","topic8","topic9","topic10","newNode2","newNode3","newNode4","newNode5","newNode6","newNode7","newNode8","newNode9","newNode10","showClose","message","delCard","get_data","mouseWheel","addEventListener","scrollFunc","$refs","onmousewheel","event","wheelDelta","detail","resize","changecolor","screen_shot","screenshot","shootDownload","setTimeout","mouseDrag","selected","onmousedown","ev","dragNodeFlag","disX","disY","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","originalScrollBehavior","style","originalPointerEvents","onmousemove","drag","distanceX","distanceY","scrollTo","cursor","onmouseup","mounted","show","beforeDestroy","removeEventListener"],"sources":["src/views/query.vue"],"sourcesContent":["<template>\r\n\r\n    <div class=\"jsmind\">\r\n        数据分析\r\n        <div class=\"header\">\r\n            <div align=\"center\">\r\n                2022年新能源汽车\r\n            </div>\r\n            \r\n        <table>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ '事件类型: 调价事件' }}</td>\r\n          <td>{{ '调价产品: 新能源汽车' }}</td>\r\n          <td>{{ '调价时间： 2022年' }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>{{ '调价方式: 上涨' }}</td>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n        </div>\r\n      <!-- 右上角菜单 -->\r\n      <div class=\"toolbar\">\r\n        <ul class=\"toolbar-list\">\r\n          <li class=\"item\">\r\n            <span\r\n              size=\"16\"\r\n              class=\"percent\"\r\n              style=\"font-size: 14px; color: rgb(29, 29, 31)\"\r\n              @click=\"zoom.value = 100\"\r\n              >{{ zoom.value }}%\r\n            </span>\r\n            <div class=\"scale-slide\">\r\n              <ul>\r\n                <li class=\"normal-item\" title=\"缩小\" @click=\"zoomOut\">\r\n                  <svg\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-5.66 1.22a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7zM4.76 6.6h5.12c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36z\"\r\n                      fill=\"#2B2F36\"\r\n                      fill-rule=\"nonzero\"\r\n                    ></path>\r\n                  </svg>\r\n                </li>\r\n  \r\n                <li class=\"slider\">\r\n                  <el-slider\r\n                    v-model=\"zoom.value\"\r\n                    :show-tooltip=\"false\"\r\n                    :min=\"zoom.min\"\r\n                    :max=\"zoom.max\"\r\n                  ></el-slider>\r\n                </li>\r\n  \r\n                <li class=\"normal-item\" title=\"画布放大\" @click=\"zoomIn\">\r\n                  <svg\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-6.4-5.36V4.76c0-.2.17-.37.37-.37h.73c.2 0 .37.16.37.37v1.83h1.83c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H8.05v1.83c0 .2-.16.37-.37.37h-.73a.37.37 0 01-.36-.37V8.05H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36h1.83zm.74 6.58a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7z\"\r\n                      fill=\"#2B2F36\"\r\n                      fill-rule=\"nonzero\"\r\n                    ></path>\r\n                  </svg>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <div class=\"layout item\" @click=\"color_conditional\">\r\n            <svg\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M12.56 4.06c1.41 0 2.8.28 4.05.8l-.99 1.21a9.3 9.3 0 00-2.67-.5l-.4-.01h-.43a9.14 9.14 0 00-5.28 2c-.72.61-1.3 1.32-1.69 2.09a5.1 5.1 0 000 4.82c.39.74.95 1.41 1.68 2 .73.59 1.59 1.06 2.55 1.39a9.75 9.75 0 004.5.42l.44-.06.53-.11.06-.02c.07-.03.14-.1.2-.2a.8.8 0 00.1-.47l-.03-.12-.03-.1-.05-.22a3.32 3.32 0 01.46-2.53c.52-.8 1.36-1.3 2.27-1.36H19.45l.1-.01c.48-.07.87-.53.96-1.1l.02-.14v-.25l-.02-.22-.05-.29a5.6 5.6 0 00-1.13-2.4l.96-1.2a7.08 7.08 0 011.63 3.34l.06.34.04.34v.37c-.08 1.45-1.12 2.6-2.4 2.7H18.02c-.48 0-.94.26-1.23.7-.22.34-.32.75-.28 1.16l.02.18.07.27a2.3 2.3 0 01-.2 1.75c-.24.41-.6.72-1 .86l-.17.05-.57.12c-.42.08-.84.13-1.26.16l-.42.03h-.44c-1.26 0-2.5-.2-3.65-.6a9.85 9.85 0 01-3-1.63 7.91 7.91 0 01-2.07-2.47 6.58 6.58 0 010-6.19A8.24 8.24 0 015.9 6.42a9.85 9.85 0 013-1.72c.92-.32 1.86-.53 2.81-.6l.41-.02.43-.01h.02zM7.4 12.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm12.29-9.01a.5.5 0 01.63-.13l.07.05.4.31c.18.16.23.42.12.63l-.05.08-7.69 9.6-1.14.51a.2.2 0 01-.28-.17v-.05L12 13l7.69-9.61zM8.4 8.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm4.2-1.5a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2z\"\r\n                fill=\"#2B2F36\"\r\n                fill-rule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n          <div\r\n            class=\"reset item normal-item\"\r\n            title=\"定位到中心主题\"\r\n            @click=\"reset\"\r\n          >\r\n            <svg\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 16 16\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M.77 0h3.46c.21 0 .38.17.38.38v.77c0 .22-.17.39-.38.39h-2.7v2.7c0 .2-.16.38-.38.38H.38A.38.38 0 010 4.23V.77C0 .34.34 0 .77 0zm14.45 16h-3.46a.38.38 0 01-.38-.39v-.76c0-.22.17-.39.38-.39h2.7v-2.7c0-.2.17-.38.38-.38h.77c.21 0 .38.18.38.39v3.46c0 .43-.34.77-.77.77zM0 15.23v-3.46c0-.21.17-.39.38-.39h.77c.22 0 .39.18.39.39v2.7h2.69c.21 0 .38.16.38.38v.77c0 .2-.17.38-.38.38H.77a.77.77 0 01-.77-.77zM16 .78v3.46c0 .21-.17.38-.38.38h-.77a.38.38 0 01-.39-.38v-2.7h-2.69a.38.38 0 01-.38-.38V.4c0-.2.17-.38.38-.38h3.46c.43 0 .77.34.77.77zm-8 9.99a2.77 2.77 0 110-5.54 2.77 2.77 0 010 5.54z\"\r\n                fill=\"#2B2F36\"\r\n                fill-rule=\"nonzero\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n   \r\n      <div class=\"jsmind_layout\">\r\n        相关公司\r\n        <div\r\n          id=\"jsmind_container\"\r\n          ref=\"container\"\r\n          @click=\"nodeClick\"\r\n          @contextmenu.prevent=\"\"\r\n      :style=\"jsmind_containerStyle\"\r\n        ></div>\r\n  \r\n        <el-dialog\r\n          :title=\"'颜色选择器'\"\r\n          :visible.sync=\"dialogVisible2\"\r\n          width=\"600px\"\r\n          @closed=\"form = {}\"\r\n          :destroy-on-close=\"true\"\r\n          :lock-scroll=\"false\"\r\n          :append-to-body=\"true\"\r\n          v-if=\"selectNodeInfo\"\r\n        >\r\n          <el-row>\r\n            <el-col :span=\"8\"\r\n              ><div class=\"block\">\r\n                <el-tag>人</el-tag>\r\n              </div></el-col\r\n            >\r\n            <el-col :span=\"8\">\r\n              <div class=\"block\">\r\n                <el-tag>公司</el-tag>\r\n              </div></el-col\r\n            >\r\n            <el-col :span=\"8\"\r\n              ><div class=\"block\">\r\n                <el-tag>项目</el-tag>\r\n              </div></el-col\r\n            >\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"8\"\r\n              ><div class=\"block\">\r\n                <el-color-picker\r\n                  v-model=\"bgMap[4].bgcolor\"\r\n                ></el-color-picker></div\r\n            ></el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"block\">\r\n                <el-color-picker\r\n                  v-model=\"bgMap[1].bgcolor\"\r\n                ></el-color-picker></div\r\n            ></el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"block\">\r\n                <el-color-picker\r\n                  v-model=\"bgMap[6].bgcolor\"\r\n                ></el-color-picker></div\r\n            ></el-col>\r\n          </el-row>\r\n          <br />\r\n          <el-row>\r\n            <el-col :span=\"8\"\r\n              ><div class=\"block\">\r\n                <el-tag>A股</el-tag>\r\n              </div></el-col\r\n            >\r\n            <el-col :span=\"8\">\r\n              <div class=\"block\">\r\n                <el-tag>B股</el-tag>\r\n              </div></el-col\r\n            >\r\n            <el-col :span=\"8\"\r\n              ><div class=\"block\">\r\n                <el-tag>C股</el-tag>\r\n              </div></el-col\r\n            >\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"8\"\r\n              ><div class=\"block\">\r\n                <el-color-picker\r\n                  v-model=\"bgMap[7].bgcolor\"\r\n                ></el-color-picker></div\r\n            ></el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"block\">\r\n                <el-color-picker\r\n                  v-model=\"bgMap[8].bgcolor\"\r\n                ></el-color-picker></div\r\n            ></el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"block\">\r\n                <el-color-picker\r\n                  v-model=\"bgMap[9].bgcolor\"\r\n                ></el-color-picker></div\r\n            ></el-col>\r\n          </el-row>\r\n  \r\n          <template v-slot:footer>\r\n            <div class=\"right mr-10\">\r\n              <el-button\r\n                type=\"primary\"\r\n                class=\"common-btn\"\r\n                @click=\"changecolor\"\r\n                size=\"medium\"\r\n                >确 定</el-button\r\n              >\r\n            </div>\r\n          </template>\r\n        </el-dialog>\r\n      </div>\r\n      <!-- 右键菜单 -->\r\n      <el-menu\r\n        class=\"context-menu\"\r\n        v-show=\"showMenu\"\r\n        :style=\"{\r\n          left: menuStyle.left,\r\n          top: menuStyle.top,\r\n          bottom: menuStyle.bottom,\r\n          right: menuStyle.right,\r\n        }\"\r\n        ref=\"context\"\r\n      >\r\n        <slot>\r\n          <el-menu-item @click=\"delCard\">隐藏节点</el-menu-item>\r\n        </slot>\r\n      </el-menu>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import axios from \"axios\";\r\n  export default {\r\n    watch: {\r\n      \"zoom.value\"(val) {\r\n        const zoom = val / 100;\r\n        this.jm.view.setZoom(zoom);\r\n      },\r\n      selectTypes(v) {\r\n        this.loopTreeData(this.mind.data.children, (item) => {\r\n          if (v.length) {\r\n            if (v.includes(item.type)) {\r\n              this.jm.set_node_color(\r\n                item.id,\r\n                this.bgMap[item.type].bgcolor,\r\n                this.bgMap[item.type].fgcolor\r\n              );\r\n            } else {\r\n              this.jm.set_node_color(\r\n                item.id,\r\n                this.bgMap[item.type].transparent,\r\n                this.bgMap[item.type].fgcolor\r\n              );\r\n            }\r\n          } else {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].transparent,\r\n              this.bgMap[item.type].fgcolor\r\n            );\r\n          }\r\n        });\r\n      },\r\n    },\r\n    computed: {\r\n      pathColor() {\r\n        return function (type) {\r\n          return this.structure.active === type\r\n            ? this.structure.pathActiveColor\r\n            : this.structure.pathOrginalColor;\r\n        };\r\n      },\r\n      rectColor() {\r\n        return function (type) {\r\n          return this.structure.active === type\r\n            ? this.structure.rectActiveColor\r\n            : this.structure.rectOrginalColor;\r\n        };\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n\r\n       \r\n\r\n        jsmind_containerStyle: {\r\n            width: '1000px',\r\n        height: '600px',\r\n        top: '50%', // 将容器的顶部位置设置为页面的一半\r\n        transform: 'translateY(40%)', // 使用负的自身高度的一半来上移容器\r\n     \r\n\r\n        },\r\n\r\n\r\n        lista: [],\r\n        listb: [],\r\n        select: false,\r\n        getData: [], // 根据输入值  查询到的结果\r\n        remindData: [],\r\n        input: \"\",\r\n        mind: {\r\n          meta: {\r\n            name: \"f10_股票\",\r\n            author: \"\",\r\n            version: \"0.2\",\r\n          },\r\n          format: \"node_tree\",\r\n          data: {\r\n            id: \"root\",\r\n            topic: \"新能源汽车\",\r\n            type: \"2\",\r\n            expanded: true,\r\n            children: [\r\n              {\r\n                id: \"root1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"公司\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"3\", // [可选]自定义节点类型\r\n                children: [\r\n              {\r\n                id: \"company1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"东安动力|600178\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"2\", // [可选]自定义节点类型\r\n              },\r\n              {\r\n                id: \"company2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"申华控股|600653\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"2\", // [可选]自定义节点类型\r\n              },\r\n              {\r\n                id: \"company3\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"北巴传媒|600368\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"2\", // [可选]自定义节点类型\r\n              },\r\n              {\r\n                id: \"company4\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"铜峰电子|600237\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"2\", // [可选]自定义节点类型\r\n              },\r\n              {\r\n                id: \"company5\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"东旭广电|000413\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"2\", // [可选]自定义节点类型\r\n              },\r\n            ]\r\n              },\r\n              {\r\n                id: \"root2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"下游产品\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"3\", // [可选]自定义节点类型\r\n                children: [\r\n              {\r\n                id: \"product1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"充电桩\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"4\", // [可选]自定义节点类型\r\n              },\r\n              {\r\n                id: \"product2\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"机动车维修服务\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"4\", // [可选]自定义节点类型\r\n              },\r\n              {\r\n                id: \"product3\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"汽车贸易\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"4\", // [可选]自定义节点类型\r\n              },\r\n              {\r\n                id: \"product4\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"汽车美容服务\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"4\", // [可选]自定义节点类型\r\n              },\r\n              {\r\n                id: \"product5\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\r\n                topic: \"汽车物流服务\", // [必选] 节点上显示的内容\r\n                direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\r\n                expanded: true, // [可选] 该节点是否是展开状态，默认为 true\r\n                type: \"4\", // [可选]自定义节点类型\r\n              },\r\n            ]\r\n              },\r\n             \r\n            ],\r\n          },\r\n        },\r\n        options: {\r\n          container: \"jsmind_container\", // [必选] 容器的ID\r\n          editable: true, // [可选] 是否启用编辑\r\n          support_html: true, // 是否支持节点里的HTML元素\r\n          theme: \"\", // [可选] 主题\r\n          view: {\r\n            engine: \"svg\", // 思维导图各节点之间线条的绘制引擎\r\n            hmargin: 0, // 思维导图距容器外框的最小水平距离\r\n            vmargin: 0, // 思维导图距容器外框的最小垂直距离\r\n            line_width: 1, // 思维导图线条的粗细\r\n            line_color: \"\t#DCDCDC\", // 思维导图线条的颜色\r\n          },\r\n          layout: {\r\n            hspace: 10, // 节点之间的水平间距\r\n            vspace: 10, // 节点之间的垂直间距\r\n            pspace: 14, // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\r\n          },\r\n          shortcut: {\r\n            // 禁用快捷键\r\n            enable: false,\r\n          },\r\n        },\r\n        zoom: {\r\n          value: 100, // 层级大小\r\n          min: 10, // 最小层级\r\n          max: 400, // 最大层级\r\n        },\r\n        bgMap: {\r\n          //公司\r\n          1: {\r\n            bgcolor: \"#87CEFA \",\r\n            fgcolor: \" #000\",\r\n            original: \"#87CEFA\",\r\n            transparent: \"rgb(25, 144, 255, 0.2)\",\r\n          },\r\n          //根节点\r\n          2: {\r\n            bgcolor: \"#1E90FF\",\r\n            fgcolor: \"#fff\",\r\n            original: \"rgb(100, 201, 53)\",\r\n            transparent: \"rgb(100, 201, 53, 0.2)\",\r\n          },\r\n          3: {\r\n            //其他\r\n            bgcolor: \" \",\r\n            fgcolor: \"#000\",\r\n          },\r\n          4: {\r\n            //人\r\n            bgcolor: \"#FF7F50\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n          5: [\r\n            {\r\n              //发行\r\n              bgcolor: \"#FF6347\",\r\n              fgcolor: \"#fff\",\r\n            },\r\n            {\r\n              bgcolor: \"#fa8072\",\r\n              fgcolor: \"#fff\",\r\n            },\r\n            {\r\n              bgcolor: \"#ff7f50\",\r\n              fgcolor: \"#fff\",\r\n            },\r\n          ],\r\n          6: {\r\n            //项目\r\n            bgcolor: \"#ecb5c9\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n          7: {\r\n            //发行1\r\n            bgcolor: \"#FF6347\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n          8: {\r\n            //发行2\r\n            bgcolor: \"#fa8072\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n          9: {\r\n            //发行3\r\n            bgcolor: \"#ff7f50\",\r\n            fgcolor: \"#fff\",\r\n          },\r\n        },\r\n        structure: {\r\n          active: \"right\",\r\n          pathOrginalColor: \"#2B2F36\",\r\n          pathActiveColor: \"#3370FF\",\r\n          rectOrginalColor: \"#C3C6CB\",\r\n          rectActiveColor: \"#BACEFD\",\r\n        },\r\n        dialogVisible: false,\r\n        dialogVisible2: false,\r\n        selectNodeInfo: {\r\n          id: null,\r\n          Name: \"\",\r\n        }, // 选中节点信息\r\n        tempNodeInfo: null, // 保存修改之前的信息\r\n        createType: \"\", // 添加平级or子级\r\n        showMenu: false, // 是否显示右键菜单栏\r\n        menuStyle: {\r\n          top: \"\",\r\n          bottom: \"\",\r\n          left: \"\",\r\n          right: \"\",\r\n        },\r\n        typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]), // 选中types Set\r\n        selectTypes: [\"1\", \"2\", \"3\", \"4\"], // 选中types Array\r\n      };\r\n    },\r\n    methods: {\r\n\r\n\r\n      querySearch(queryString, cb) {\r\n        console.log(queryString);\r\n        this.remindData = [];\r\n        if (this.input !== \"\") {\r\n          axios\r\n            .post(\"http://localhost:8086//ShareTiShi\", {\r\n              select_name: queryString,\r\n            })\r\n            .then((response) => {\r\n              console.log(\"finish\");\r\n              this.getData = response.data;\r\n              this.getData.forEach((item) => {\r\n                let obj = { value: \"\" };\r\n                obj.value = item;\r\n                this.remindData.push(obj);\r\n              });\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n          let nameTipsArray = this.remindData;\r\n          // 调用 callback 返回建议列表的数据\r\n          cb(nameTipsArray);\r\n        }\r\n      },\r\n  \r\n      handleSelect(item) {\r\n        let regex = /\\[(.+?)\\]/g;\r\n        this.input = item.value.match(regex)[0].replace(\"[\", \"\").replace(\"]\", \"\");\r\n      },\r\n  \r\n      search() {\r\n        this.jm.update_node(\"root\", this.input);\r\n        const selectedNode1 = this.jm.get_node(\"root1\");\r\n        this.delChild(selectedNode1);\r\n        this.add_stock(selectedNode1, this.input);\r\n      },\r\n      delChild(node) {\r\n        if (node.children.length != 0) {\r\n          console.log(node.children);\r\n          let len = node.children.length;\r\n          for (var deli = 0; deli < len; ) {\r\n            console.log(node.children[0]);\r\n            this.jm.remove_node(node.children[0]);\r\n            deli = deli + 1;\r\n          }\r\n        }\r\n      },\r\n      // 重置视图\r\n      reset() {\r\n        document.querySelector(\".root\").scrollIntoView({\r\n          block: \"center\",\r\n          behavior: \"smooth\",\r\n        });\r\n      },\r\n  \r\n      // 缩小\r\n      zoomOut() {\r\n        this.jm.view.zoomOut();\r\n        this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\r\n      },\r\n      // 放大\r\n      zoomIn() {\r\n        this.jm.view.zoomIn();\r\n        this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\r\n      },\r\n  \r\n      // 循环树结构\r\n      loopTreeData(list, callback) {\r\n        (function doOneFloor(list) {\r\n          if (Array.isArray(list)) {\r\n            for (let i = 0; i < list.length; i++) {\r\n              const item = list[i];\r\n              callback(item, i);\r\n              if (item.children && item.children.length > 0) {\r\n                doOneFloor(item.children);\r\n              }\r\n            }\r\n          }\r\n        })(list);\r\n      },\r\n  \r\n      // 设置背景颜色\r\n      setColor() {\r\n        this.jm.set_node_color(\r\n          \"root\",\r\n          this.bgMap[2].bgcolor,\r\n          this.bgMap[2].fgcolor\r\n        );\r\n        this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\r\n        this.loopTreeData(this.mind.data.children, (item) => {\r\n          if (this.selectTypes.length) {\r\n            if (this.selectTypes.includes(item.type)) {\r\n              this.jm.set_node_color(\r\n                item.id,\r\n                this.bgMap[item.type].bgcolor,\r\n                this.bgMap[item.type].fgcolor\r\n              );\r\n            } else {\r\n              this.jm.set_node_color(\r\n                item.id,\r\n                this.bgMap[item.type].transparent,\r\n                \"#fff\"\r\n              );\r\n            }\r\n          } else {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].transparent,\r\n              \"#fff\"\r\n            );\r\n          }\r\n        });\r\n      },\r\n  \r\n      // 初始化配置\r\n      init() {\r\n        this.jm.view.minZoom = 0.1;\r\n        this.jm.view.maxZoom = 5;\r\n  \r\n        this.setColor();\r\n  \r\n        //右键菜单\r\n        this.jm.view.add_event(this.editor, \"contextmenu\", (e) => {\r\n          console.log(\"A\");\r\n          const selectedNode = this.jm.get_selected_node();\r\n          console.log(selectedNode);\r\n          if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\r\n            e.preventDefault();\r\n            const el = document.querySelector(\".context-menu .el-menu-item\");\r\n            const width = parseFloat(window.getComputedStyle(el).width);\r\n            const height =\r\n              parseFloat(window.getComputedStyle(el).height) * 3 + 12;\r\n            const windowHeight = window.innerHeight;\r\n            const windowWidth = window.innerWidth;\r\n  \r\n            // 极限位置 避免越界\r\n            if (e.clientY + height > windowHeight) {\r\n              this.menuStyle.left = e.clientX + \"px\";\r\n              this.menuStyle.top = \"unset\";\r\n              this.menuStyle.bottom = 0;\r\n            } else if (e.clientX + width > windowWidth) {\r\n              this.menuStyle.top = e.clientY + \"px\";\r\n              this.menuStyle.left = \"unset\";\r\n              this.menuStyle.right = 0;\r\n            } else {\r\n              this.menuStyle.left = e.clientX + \"px\";\r\n              this.menuStyle.top = e.clientY + \"px\";\r\n              this.menuStyle.bottom = \"unset\";\r\n            }\r\n            this.showMenu = true;\r\n            if (selectedNode.topic == \"下游产品\") {\r\n              this.select = true;\r\n            } else {\r\n              this.select = false;\r\n            }\r\n          } else {\r\n            this.showMenu = false;\r\n          }\r\n        });\r\n      },\r\n  \r\n      // 获取选中标签的 ID\r\n      get_selected_nodeid() {\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (selectedNode) {\r\n          return selectedNode.id;\r\n        } else {\r\n          return null;\r\n        }\r\n      },\r\n      sureEditNode() {},\r\n      // 拖拽\r\n      handleDrop(draggingNode, dropNode) {\r\n        // 前一个兄弟节点\r\n        const prevNode = this.jm.find_node_before(dropNode);\r\n        // 获取移动后的node\r\n        const dragForm = {\r\n          modelId: \"\",\r\n          treeNum: !prevNode ? draggingNode : prevNode.id,\r\n          thisTreeNum: dropNode,\r\n        };\r\n        //console.log(\"dragForm\", dragForm);\r\n  \r\n        // TODO 调接口\r\n      },\r\n  \r\n      add_company(addnode, company) {\r\n        //console.log(addnode);\r\n        if (addnode.data && addnode.topic == \"董事长\") {\r\n          axios\r\n            .post(\"http://localhost:8086/company\", {\r\n              select_name: company,\r\n              relation: \"董事长\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"4\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"总裁\") {\r\n          axios\r\n            .post(\"http://localhost:8086/company\", {\r\n              select_name: company,\r\n              relation: \"总裁\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"4\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"首席运营官\") {\r\n          axios\r\n            .post(\"http://localhost:8086/company\", {\r\n              select_name: company,\r\n              relation: \"首席运营官\",\r\n            })\r\n            .then((response) => {\r\n              //console.log(\"生产公司\" + response);\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"4\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"监事\") {\r\n          axios\r\n            .post(\"http://localhost:8086/company\", {\r\n              select_name: company,\r\n              relation: \"监事\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"4\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"董事会秘书\") {\r\n          axios\r\n            .post(\"http://localhost:8086/company\", {\r\n              select_name: company,\r\n              relation: \"董事会秘书\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"4\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"发行\") {\r\n          axios\r\n            .post(\"http://localhost:8086/faxing\", {\r\n              select_name: company,\r\n              relation: \"发行\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i].ChiName;\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  let num = 7 + this.lista[i].Stock;\r\n                  newNode1.type = num;\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"参股公司\") {\r\n          axios\r\n            .post(\"http://localhost:8086/company\", {\r\n              select_name: company,\r\n              relation: \"参股公司\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"控股股东\") {\r\n           axios\r\n            .post(\"http://localhost:8086/company\", {\r\n              select_name: company,\r\n              relation: \"控股股东\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"大股东\") {\r\n          axios\r\n            .post(\"http://localhost:8086/gudong\", {\r\n              select_name: company,\r\n              //relation: \"大股东\",\r\n            })\r\n            .then((response) => {\r\n              if ((response.data.company.length ==0 || !response.data.person.length == 0) && addnode.parent.id != \"root\") {\r\n                console.log(response.data.company.length)\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                console.log(response.data)\r\n                this.lista = response.data.person;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"4\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n                \r\n                this.listb = response.data.company;\r\n                console.log(\"b:\"+ this.listb)\r\n                for (var i = 0; i < this.listb.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.listb[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                \r\n              }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"投资\") {\r\n          axios\r\n            .post(\"http://localhost:8086/company\", {\r\n              select_name: company,\r\n              relation: \"投资\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"6\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else {\r\n          this.$message.error(\"something wrong\");\r\n        }\r\n        this.jm.collapse_node(addnode);\r\n      },\r\n      add_person(addnode, person) {\r\n        if (addnode.data && addnode.topic == \"担任董事长\") {\r\n          axios\r\n            .post(\"http://localhost:8086/person\", {\r\n              select_name: person,\r\n              relation: \"担任董事长\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              }\r\n              this.lista = response.data;\r\n              var len = this.lista.length;\r\n  \r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"担任总裁\") {\r\n          axios\r\n            .post(\"http://localhost:8086/person\", {\r\n              select_name: person,\r\n              relation: \"担任总裁\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n  \r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"担任首席运营官\") {\r\n          axios\r\n            .post(\"http://localhost:8086/person\", {\r\n              select_name: person,\r\n              relation: \"担任首席运营官\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"担任监事\") {\r\n          axios\r\n            .post(\"http://localhost:8086/person\", {\r\n              select_name: person,\r\n              relation: \"担任监事\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n  \r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"担任董事会秘书\") {\r\n          axios\r\n            .post(\"http://localhost:8086/person\", {\r\n              select_name: person,\r\n              relation: \"担任董事会秘书\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"实际控制人\") {\r\n          axios\r\n            .post(\"http://localhost:8086/person\", {\r\n              select_name: person,\r\n              relation: \"实际控制人\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              } else {\r\n                this.lista = response.data;\r\n                for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.lista[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else {\r\n          this.$message.error(\"something wrong\" + addnode.topic);\r\n        }\r\n        this.jm.collapse_node(addnode);\r\n      },\r\n      add_stock(addnode, share) {\r\n        //console.log(addnode);\r\n        if (addnode.data && addnode.topic == \"发行公司\") {\r\n          axios\r\n            .post(\"http://localhost:8086/share\", {\r\n              select_name: share,\r\n              relation: \"发行公司\",\r\n            })\r\n            .then((response) => {\r\n              if (!response.data.length && addnode.parent.id != \"root\") {\r\n                this.jm.remove_node(addnode.id);\r\n              }\r\n              this.lista = response.data;\r\n              console.log(this.lista);\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"1\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else {\r\n          this.$message.error(\"something wrong\");\r\n        }\r\n        this.jm.collapse_node(addnode);\r\n      },\r\n      query_conditional() {\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (selectedNode.data) {\r\n          this.dialogVisible = true;\r\n        } else {\r\n          this.$message.error(\"请选择卡片\");\r\n        }\r\n  \r\n        this.showMenu = false;\r\n      },\r\n      query_conditional() {\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (selectedNode.data) {\r\n          this.dialogVisible = true;\r\n        } else {\r\n          this.$message.error(\"请选择卡片\");\r\n        }\r\n  \r\n        this.showMenu = false;\r\n      },\r\n      color_conditional() {\r\n        this.dialogVisible2 = true;\r\n        this.showMenu = false;\r\n      },\r\n      nodeClick() {\r\n        this.showMenu = false;\r\n        const selectedNode = this.jm.get_selected_node();\r\n        console.log(selectedNode.id)\r\n        //let newNode1 = this.jm.add_node(selectedNode, \"table1\", \"topic1\");*/\r\n        if (!selectedNode) return;\r\n        //console.log(selectedNode.type)\r\n        if (selectedNode.data) {\r\n          if (selectedNode.children.length != 0) {\r\n            this.jm.toggle_node(selectedNode);\r\n          } else if (selectedNode.type == 1) {\r\n            let nodeid1 = jsMind.util.uuid.newid();\r\n            let nodeid2 = jsMind.util.uuid.newid();\r\n            let nodeid3 = jsMind.util.uuid.newid();\r\n            let nodeid4 = jsMind.util.uuid.newid();\r\n            let nodeid5 = jsMind.util.uuid.newid();\r\n            let nodeid6 = jsMind.util.uuid.newid();\r\n            let nodeid7 = jsMind.util.uuid.newid();\r\n            let nodeid8 = jsMind.util.uuid.newid();\r\n            let nodeid9 = jsMind.util.uuid.newid();\r\n            let nodeid10 = jsMind.util.uuid.newid();\r\n            let topic1 = \"董事长\";\r\n            let topic2 = \"总裁\";\r\n            let topic3 = \"首席运营官\";\r\n            let topic4 = \"监事\";\r\n            let topic5 = \"董事会秘书\";\r\n            let topic6 = \"发行\";\r\n            let topic7 = \"参股公司\";\r\n            let topic8 = \"控股股东\";\r\n            let topic9 = \"大股东\";\r\n            let topic10 = \"投资\";\r\n            let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n            let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\r\n            let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\r\n            let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\r\n            let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\r\n            let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\r\n            let newNode7 = this.jm.add_node(selectedNode, nodeid7, topic7);\r\n            let newNode8 = this.jm.add_node(selectedNode, nodeid8, topic8);\r\n            let newNode9 = this.jm.add_node(selectedNode, nodeid9, topic9);\r\n            let newNode10 = this.jm.add_node(selectedNode, nodeid10, topic10);\r\n            newNode1.type = \"3\";\r\n            newNode2.type = \"3\";\r\n            newNode3.type = \"3\";\r\n            newNode4.type = \"3\";\r\n            newNode5.type = \"3\";\r\n            newNode6.type = \"3\";\r\n            newNode7.type = \"3\";\r\n            newNode8.type = \"3\";\r\n            newNode9.type = \"3\";\r\n            newNode10.type = \"3\";\r\n            this.jm.set_node_color(\r\n              newNode1.id,\r\n              this.bgMap[newNode1.type].bgcolor,\r\n              this.bgMap[newNode1.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode2.id,\r\n              this.bgMap[newNode2.type].bgcolor,\r\n              this.bgMap[newNode2.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode3.id,\r\n              this.bgMap[newNode3.type].bgcolor,\r\n              this.bgMap[newNode3.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode4.id,\r\n              this.bgMap[newNode4.type].bgcolor,\r\n              this.bgMap[newNode4.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode5.id,\r\n              this.bgMap[newNode5.type].bgcolor,\r\n              this.bgMap[newNode5.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode6.id,\r\n              this.bgMap[newNode6.type].bgcolor,\r\n              this.bgMap[newNode6.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode7.id,\r\n              this.bgMap[newNode7.type].bgcolor,\r\n              this.bgMap[newNode7.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode8.id,\r\n              this.bgMap[newNode8.type].bgcolor,\r\n              this.bgMap[newNode8.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode9.id,\r\n              this.bgMap[newNode9.type].bgcolor,\r\n              this.bgMap[newNode9.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode10.id,\r\n              this.bgMap[newNode10.type].bgcolor,\r\n              this.bgMap[newNode10.type].fgcolor\r\n            );\r\n            this.add_company(newNode1, selectedNode.topic);\r\n            this.add_company(newNode2, selectedNode.topic);\r\n            this.add_company(newNode3, selectedNode.topic);\r\n            this.add_company(newNode4, selectedNode.topic);\r\n            this.add_company(newNode5, selectedNode.topic);\r\n            this.add_company(newNode6, selectedNode.topic);\r\n            this.add_company(newNode7, selectedNode.topic);\r\n            this.add_company(newNode8, selectedNode.topic);\r\n            this.add_company(newNode9, selectedNode.topic);\r\n            this.add_company(newNode10, selectedNode.topic);\r\n          } else if (selectedNode.type == 4) {\r\n            let nodeid1 = jsMind.util.uuid.newid();\r\n            let nodeid2 = jsMind.util.uuid.newid();\r\n            let nodeid3 = jsMind.util.uuid.newid();\r\n            let nodeid4 = jsMind.util.uuid.newid();\r\n            let nodeid5 = jsMind.util.uuid.newid();\r\n            let nodeid6 = jsMind.util.uuid.newid();\r\n            let topic1 = \"担任董事长\";\r\n            let topic2 = \"担任总裁\";\r\n            let topic3 = \"担任首席运营官\";\r\n            let topic4 = \"担任监事\";\r\n            let topic5 = \"担任董事会秘书\";\r\n            let topic6 = \"实际控制人\";\r\n            let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n            let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\r\n            let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\r\n            let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\r\n            let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\r\n            let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\r\n            newNode1.type = \"3\";\r\n            newNode2.type = \"3\";\r\n            newNode3.type = \"3\";\r\n            newNode4.type = \"3\";\r\n            newNode5.type = \"3\";\r\n            newNode6.type = \"3\";\r\n            this.jm.set_node_color(\r\n              newNode1.id,\r\n              this.bgMap[newNode1.type].bgcolor,\r\n              this.bgMap[newNode1.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode2.id,\r\n              this.bgMap[newNode2.type].bgcolor,\r\n              this.bgMap[newNode2.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode3.id,\r\n              this.bgMap[newNode3.type].bgcolor,\r\n              this.bgMap[newNode3.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode4.id,\r\n              this.bgMap[newNode4.type].bgcolor,\r\n              this.bgMap[newNode4.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode5.id,\r\n              this.bgMap[newNode5.type].bgcolor,\r\n              this.bgMap[newNode5.type].fgcolor\r\n            );\r\n            this.jm.set_node_color(\r\n              newNode6.id,\r\n              this.bgMap[newNode6.type].bgcolor,\r\n              this.bgMap[newNode6.type].fgcolor\r\n            );\r\n            this.add_person(newNode1, selectedNode.topic);\r\n            this.add_person(newNode2, selectedNode.topic);\r\n            this.add_person(newNode3, selectedNode.topic);\r\n            this.add_person(newNode4, selectedNode.topic);\r\n            this.add_person(newNode5, selectedNode.topic);\r\n            this.add_person(newNode6, selectedNode.topic);\r\n          } else if (selectedNode.type == 5) {\r\n            let nodeid1 = jsMind.util.uuid.newid();\r\n            let topic1 = \"发行公司\";\r\n            let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\r\n            newNode1.type = \"3\";\r\n            this.jm.set_node_color(\r\n              newNode1.id,\r\n              this.bgMap[newNode1.type].bgcolor,\r\n              this.bgMap[newNode1.type].fgcolor\r\n            );\r\n            this.add_stock(newNode1, selectedNode.topic);\r\n          } else {\r\n            this.$message({\r\n              showClose: true,\r\n              message: \"没有\" + selectedNode.topic,\r\n            });\r\n          }\r\n        } else {\r\n          this.$message.error(\"wrong\");\r\n        }\r\n      },\r\n      delCard() {\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (selectedNode.data) {\r\n          // TODO\r\n          this.jm.remove_node(selectedNode.id);\r\n          // 获取数据\r\n          console.log(this.jm.get_data(\"node_tree\"));\r\n        } else {\r\n          this.$message.error(\"请选择卡片\");\r\n        }\r\n        this.showMenu = false;\r\n      },\r\n      // 鼠标滚轮放大缩小\r\n      mouseWheel() {\r\n        if (document.addEventListener) {\r\n          document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\r\n        }\r\n        this.$refs.container.onmousewheel = this.scrollFunc;\r\n      },\r\n      // 滚轮缩放\r\n      scrollFunc(e) {\r\n        e = e || window.event;\r\n        if (e.wheelDelta) {\r\n          if (e.wheelDelta > 0) {\r\n            this.zoomIn();\r\n          } else {\r\n            this.zoomOut();\r\n          }\r\n        } else if (e.detail) {\r\n          if (e.detail > 0) {\r\n            this.zoomIn();\r\n          } else {\r\n            this.zoomOut();\r\n          }\r\n        }\r\n        e.preventDefault();\r\n        this.jm.resize();\r\n      },\r\n  \r\n      // 更改颜色\r\n      changecolor() {\r\n        console.log(this.bgMap[4].bgcolor);\r\n        const node = this.jm.get_node(\"root\");\r\n        this.loopTreeData(node.children, (item) =>\r\n          this.jm.set_node_color(\r\n            item.id,\r\n            this.bgMap[item.type || 3].bgcolor,\r\n            this.bgMap[item.type || 3].fgcolor\r\n          )\r\n        );\r\n        this.dialogVisible2 = false;\r\n      },\r\n      // 导出图片\r\n      screen_shot() {\r\n        // 去除透明度\r\n        const node = this.jm.get_node(\"root\");\r\n        this.loopTreeData(node.children, (item) =>\r\n          this.jm.set_node_color(\r\n            item.id,\r\n            this.bgMap[item.type || 3].bgcolor,\r\n            this.bgMap[item.type || 3].fgcolor\r\n          )\r\n        );\r\n        try {\r\n          this.jm.screenshot.shootDownload();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        setTimeout(() => {\r\n          this.setColor();\r\n        }, 1000);\r\n      },\r\n      // 鼠标拖拽\r\n      mouseDrag() {\r\n        // 里层\r\n        const el = document.querySelector(\".jsmind-inner\");\r\n        // 选中节点\r\n        let selected;\r\n  \r\n        el.onmousedown = (ev) => {\r\n          // 选中节点\r\n          selected = this.jm.get_selected_node();\r\n          // 标识 是否拖拽节点 避免冲突\r\n          this.dragNodeFlag = !!selected;\r\n  \r\n          const disX = ev.clientX;\r\n          const disY = ev.clientY;\r\n          const originalScrollLeft = el.scrollLeft;\r\n          const originalScrollTop = el.scrollTop;\r\n          const originalScrollBehavior = el.style[\"scroll-behavior\"];\r\n          const originalPointerEvents = el.style[\"pointer-events\"];\r\n          // auto: 默认值，表示滚动框立即滚动到指定位置。\r\n          el.style[\"scroll-behavior\"] = \"auto\";\r\n          // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\r\n          document.onmousemove = (ev) => {\r\n            if (this.dragNodeFlag) return;\r\n            this.drag = false;\r\n            ev.preventDefault();\r\n            // 计算拖拽的偏移距离\r\n            const distanceX = ev.clientX - disX;\r\n            const distanceY = ev.clientY - disY;\r\n  \r\n            el.scrollTo(\r\n              originalScrollLeft - distanceX,\r\n              originalScrollTop - distanceY\r\n            );\r\n  \r\n            // 在鼠标拖动的时候将点击事件屏蔽掉\r\n            el.style[\"pointer-events\"] = \"none\";\r\n            el.style.cursor = \"grabbing\";\r\n          };\r\n          document.onmouseup = () => {\r\n            if (!this.dragNodeFlag) {\r\n              el.style[\"scroll-behavior\"] = originalScrollBehavior;\r\n              el.style[\"pointer-events\"] = originalPointerEvents;\r\n              el.style.cursor = \"grab\";\r\n            }\r\n            document.onmousemove = document.onmouseup = null;\r\n          };\r\n        };\r\n      },\r\n    },\r\n    mounted() {\r\n      this.jm = jsMind.show(this.options, this.mind);\r\n      this.init();\r\n      this.mouseWheel();\r\n      this.mouseDrag();\r\n    },\r\n    beforeDestroy() {\r\n      document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style lang=\"less\">\r\n  @import \"../assets/css/style.less\";\r\n  </style>\r\n  "],"mappings":"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ACAD,QAAA;cAAA;cACAjC,IAAA;YACA;UAEA;QAGA;MACA;;MACAmC,OAAA;QACAC,SAAA;QAAA;QACAC,QAAA;QAAA;QACAC,YAAA;QAAA;QACAC,KAAA;QAAA;QACAlD,IAAA;UACAmD,MAAA;UAAA;UACAC,OAAA;UAAA;UACAC,OAAA;UAAA;UACAC,UAAA;UAAA;UACAC,UAAA;QACA;;QACAC,MAAA;UACAC,MAAA;UAAA;UACAC,MAAA;UAAA;UACAC,MAAA;QACA;;QACAC,QAAA;UACA;UACAC,MAAA;QACA;MACA;MACA/D,IAAA;QACAgE,KAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;MACA;;MACAlD,KAAA;QACA;QACA;UACAC,OAAA;UACAC,OAAA;UACAiD,QAAA;UACAhD,WAAA;QACA;QACA;QACA;UACAF,OAAA;UACAC,OAAA;UACAiD,QAAA;UACAhD,WAAA;QACA;QACA;UACA;UACAF,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA,IACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA,GACA;UACAD,OAAA;UACAC,OAAA;QACA,GACA;UACAD,OAAA;UACAC,OAAA;QACA,EACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;MACA;MACAI,SAAA;QACAC,MAAA;QACAE,gBAAA;QACAD,eAAA;QACAI,gBAAA;QACAD,eAAA;MACA;MACAyC,aAAA;MACAC,cAAA;MACAC,cAAA;QACAvD,EAAA;QACAwD,IAAA;MACA;MAAA;MACAC,YAAA;MAAA;MACAC,UAAA;MAAA;MACAC,QAAA;MAAA;MACAC,SAAA;QACA3C,GAAA;QACA4C,MAAA;QACAC,IAAA;QACAC,KAAA;MACA;MACAC,SAAA,MAAAC,GAAA;MAAA;MACA5E,WAAA;IACA;EACA;;EACA6E,OAAA;IAGAC,YAAAC,WAAA,EAAAC,EAAA;MACAC,OAAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}