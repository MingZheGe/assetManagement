{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  watch: {\n    \"zoom.value\"(val) {\n      const zoom = val / 100;\n      this.jm.view.setZoom(zoom);\n    },\n    selectTypes(v) {\n      this.loopTreeData(this.mind.data.children, item => {\n        if (v.length) {\n          if (v.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n        }\n      });\n    }\n  },\n  computed: {\n    pathColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.pathActiveColor : this.structure.pathOrginalColor;\n      };\n    },\n    rectColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.rectActiveColor : this.structure.rectOrginalColor;\n      };\n    }\n  },\n  data() {\n    return {\n      select: false,\n      getData: [],\n      // 根据输入值  查询到的结果  \n      remindData: [],\n      lista: [],\n      listb: [],\n      input: \"\",\n      input_select: \"\",\n      input_node: \"\",\n      mind: {\n        meta: {\n          name: \"脑图\",\n          author: \"\",\n          version: \"0.2\"\n        },\n        format: \"node_tree\",\n        data: {\n          id: \"root\",\n          topic: \"主产品\",\n          type: \"1\",\n          expanded: false\n        }\n      },\n      options: {\n        container: \"jsmind_container\",\n        // [必选] 容器的ID\n        editable: true,\n        // [可选] 是否启用编辑\n        support_html: true,\n        // 是否支持节点里的HTML元素\n        theme: \"\",\n        // [可选] 主题\n        view: {\n          engine: \"svg\",\n          // 思维导图各节点之间线条的绘制引擎\n          hmargin: 120,\n          // 思维导图距容器外框的最小水平距离\n          vmargin: 50,\n          // 思维导图距容器外框的最小垂直距离\n          line_width: 1,\n          // 思维导图线条的粗细\n          line_color: \"\t#DCDCDC\" // 思维导图线条的颜色\n        },\n\n        layout: {\n          hspace: 120,\n          // 节点之间的水平间距\n          vspace: 25,\n          // 节点之间的垂直间距\n          pspace: 14 // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\n        },\n\n        shortcut: {\n          // 禁用快捷键\n          enable: false\n        }\n      },\n      zoom: {\n        value: 100,\n        // 层级大小\n        min: 10,\n        // 最小层级\n        max: 400 // 最大层级\n      },\n\n      bgMap: {\n        //公司\n        1: {\n          bgcolor: \"#0014B7 \",\n          fgcolor: \" #fff\",\n          original: \"rgb(25, 144, 255)\",\n          transparent: \"rgb(25, 144, 255, 0.2)\"\n        },\n        //产品\n        2: {\n          bgcolor: \"#A16222\",\n          fgcolor: \"#fff\",\n          original: \"rgb(100, 201, 53)\",\n          transparent: \"rgb(100, 201, 53, 0.2)\"\n        },\n        3: {\n          //其他\n          bgcolor: \" \",\n          fgcolor: \"#000\"\n        }\n      },\n      structure: {\n        active: \"right\",\n        pathOrginalColor: \"#2B2F36\",\n        pathActiveColor: \"#3370FF\",\n        rectOrginalColor: \"#C3C6CB\",\n        rectActiveColor: \"#BACEFD\"\n      },\n      dialogVisible: false,\n      dialogVisible2: false,\n      moredia: false,\n      drawer: false,\n      drawerinfo: {\n        title: null,\n        shouxi: null,\n        dongshi: null,\n        share: null,\n        businessMajor: null\n      },\n      tableData: null,\n      selectNodeInfo: {\n        id: null,\n        Name: \"\"\n      },\n      // 选中节点信息\n      tempNodeInfo: null,\n      // 保存修改之前的信息\n      createType: \"\",\n      // 添加平级or子级\n      showMenu: false,\n      // 是否显示右键菜单栏\n      menuStyle: {\n        top: \"\",\n        bottom: \"\",\n        left: \"\",\n        right: \"\"\n      },\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]),\n      // 选中types Set\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"] // 选中types Array\n    };\n  },\n\n  methods: {\n    querySearch(queryString, cb) {\n      console.log(queryString);\n      this.remindData = [];\n      if (this.input !== \"\") {\n        axios.post(\"http://localhost:8087//ProductTiShi\", {\n          select_name: queryString\n        }).then(response => {\n          console.log(\"finish\");\n          this.getData = response.data;\n          this.getData.forEach(item => {\n            let obj = {\n              value: \"\"\n            };\n            obj.value = item;\n            this.remindData.push(obj);\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n        let nameTipsArray = this.remindData;\n        // 调用 callback 返回建议列表的数据\n        cb(nameTipsArray);\n      }\n    },\n    handleSelect(item) {\n      console.log(item);\n      this.input = item.value;\n    },\n    search() {\n      // this.jm.show(this.mind);\n      this.jm.update_node(\"root\", this.input);\n      const selectedNode1 = this.jm.get_node(\"root1\");\n      const selectedNode2 = this.jm.get_node(\"root2\");\n      if (selectedNode1.children.length != 0 || selectedNode2.children.length != 0) {\n        this.jm.remove_node(selectedNode1);\n        this.jm.remove_node(selectedNode2);\n        let nodeid = \"root1\";\n        let topic = \"下游产品\";\n        let nodeid2 = \"root2\";\n        let topic2 = \"公司\";\n        let newNode1 = this.jm.add_node(\"root\", nodeid, topic);\n        newNode1.type = \"3\";\n        this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n        let newNode2 = this.jm.add_node(\"root\", nodeid2, topic2);\n        newNode2.type = \"3\";\n        this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n\n        //this.add(newNode2, this.input);\n      }\n\n      const selectedNode1_ = this.jm.get_node(\"root1\");\n      const selectedNode2_ = this.jm.get_node(\"root2\");\n      this.add(selectedNode1_, this.input);\n      this.add(selectedNode2_, this.input);\n    },\n    //删除子节点\n    delChild(node) {\n      if (node.children.length != 0) {\n        console.log(node.children);\n        let len = node.children.length;\n        for (var deli = 0; deli < len;) {\n          console.log(node.children[0]);\n          this.jm.remove_node(node.children[0]);\n          deli = deli + 1;\n        }\n      }\n    },\n    // 重置视图\n    reset() {\n      document.querySelector(\".root\").scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\"\n      });\n    },\n    // 缩小\n    zoomOut() {\n      this.jm.view.zoomOut();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 放大\n    zoomIn() {\n      this.jm.view.zoomIn();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 循环树结构\n    loopTreeData(list, callback) {\n      (function doOneFloor(list) {\n        if (Array.isArray(list)) {\n          for (let i = 0; i < list.length; i++) {\n            const item = list[i];\n            callback(item, i);\n            if (item.children && item.children.length > 0) {\n              doOneFloor(item.children);\n            }\n          }\n        }\n      })(list);\n    },\n    // 设置背景颜色\n    setColor() {\n      this.jm.set_node_color(\"root\", this.bgMap[2].bgcolor, this.bgMap[2].fgcolor);\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\n      this.loopTreeData(this.mind.data.children, item => {\n        if (this.selectTypes.length) {\n          if (this.selectTypes.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n        }\n      });\n    },\n    // 初始化配置\n    init() {\n      this.jm.view.minZoom = 0.1;\n      this.jm.view.maxZoom = 5;\n      //this.jm.expand_all();\n      let nodeid = \"root1\";\n      let topic = \"下游产品\";\n      let nodeid2 = \"root2\";\n      let topic2 = \"公司\";\n      let newNode1 = this.jm.add_node(\"root\", nodeid, topic);\n      newNode1.type = \"3\";\n      this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n      let newNode2 = this.jm.add_node(\"root\", nodeid2, topic2);\n      newNode2.type = \"3\";\n      this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n      this.setColor();\n\n      //右键菜单\n      this.jm.view.add_event(this.editor, \"contextmenu\", e => {\n        console.log(\"A\");\n        const selectedNode = this.jm.get_selected_node();\n        console.log(selectedNode);\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\n          e.preventDefault();\n          const el = document.querySelector(\".context-menu .el-menu-item\");\n          const width = parseFloat(window.getComputedStyle(el).width);\n          const height = parseFloat(window.getComputedStyle(el).height) * 3 + 12;\n          const windowHeight = window.innerHeight;\n          const windowWidth = window.innerWidth;\n\n          // 极限位置 避免越界\n          if (e.clientY + height > windowHeight) {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = \"unset\";\n            this.menuStyle.bottom = 0;\n          } else if (e.clientX + width > windowWidth) {\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.left = \"unset\";\n            this.menuStyle.right = 0;\n          } else {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.bottom = \"unset\";\n          }\n          this.showMenu = true;\n          if (selectedNode.topic == \"下游产品\") {\n            this.select = true;\n          } else {\n            this.select = false;\n          }\n        } else {\n          this.showMenu = false;\n        }\n      });\n    },\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    sureEditNode() {\n      return;\n    },\n    // 拖拽\n    handleDrop(draggingNode, dropNode) {\n      // 前一个兄弟节点\n      const prevNode = this.jm.find_node_before(dropNode);\n      // 获取移动后的node\n      const dragForm = {\n        modelId: \"\",\n        treeNum: !prevNode ? draggingNode : prevNode.id,\n        thisTreeNum: dropNode\n      };\n      //console.log(\"dragForm\", dragForm);\n\n      // TODO 调接口\n    },\n\n    add(addnode, product) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"下游产品\") {\n        axios.post(\"http://localhost:8087/index\", {\n          select_name: product,\n          relation: \"下游产品\"\n        }).then(response => {\n          if (!response.data.length) {\n            this.$message({\n              showClose: true,\n              message: \"没有下游产品\"\n            });\n          }\n          this.lista = response.data;\n          console.log(this.lista);\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n            newNode1.type = \"2\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          }\n          if (this.lista.length > 12) {\n            this.lista = this.lista.slice(12);\n            let nodeid = \"more\" + jsMind.util.uuid.newid();\n            let len = this.lista.length;\n            let newNode1 = this.jm.add_node(addnode, nodeid, \"更多: \" + len, this.lista);\n            console.log(newNode1);\n            newNode1.type = \"2\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            console.log(newNode1.id);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"公司\") {\n        axios.post(\"http://localhost:8087/xiayou\", {\n          select_name: product,\n          relation: \"生产公司\"\n        }).then(response => {\n          //console.log(\"生产公司\" + response);\n          if (!response.data.length) {\n            this.$message({\n              showClose: true,\n              message: \"没有所属公司\"\n            });\n          } else {\n            this.listb = response.data;\n            for (var i = 0; i < this.listb.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.listb[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n            if (this.listb.length > 12) {\n              this.listb = this.listb.slice(12);\n              let nodeid = \"more\" + jsMind.util.uuid.newid();\n              let len = this.listb.length;\n              let newNode1 = this.jm.add_node(addnode, nodeid, \"更多: \" + len, this.listb);\n              console.log(newNode1);\n              newNode1.type = \"2\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n              console.log(newNode1.id);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n        this.input_node = selectedNode;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    conditional_query() {\n      const selectedNode = this.input_node;\n      this.dialogVisible = false;\n      this.delChild(selectedNode);\n      const node = selectedNode.parent;\n      axios.post(\"http://localhost:8087/mohu\", {\n        select_name: node.topic,\n        shaixuan: this.input_select\n      }).then(response => {\n        if (!response.data.length) {\n          this.$message({\n            showClose: true,\n            message: \"没有相关产品\"\n          });\n        }\n        this.lista = response.data;\n        var len = this.lista.length;\n        for (var i = 0; i < this.lista.length && i < 12; i++) {\n          let nodeid = jsMind.util.uuid.newid();\n          let topic = this.lista[i];\n          let newNode1 = this.jm.add_node(selectedNode, nodeid, topic);\n          newNode1.type = \"2\";\n          newNode1.expanded = \"false\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n        }\n        if (len > 12) {\n          this.lista = this.lista.slice(12);\n          let nodeid = \"more\" + jsMind.util.uuid.newid();\n          let len = this.lista.length;\n          let newNode1 = this.jm.add_node(selectedNode, nodeid, \"更多: \" + len, this.lista);\n          console.log(newNode1);\n          newNode1.type = \"2\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          console.log(newNode1.id);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    nodeClick() {\n      this.showMenu = false;\n      const selectedNode = this.jm.get_selected_node();\n      if (!selectedNode) {\n        return;\n      }\n      if (!!selectedNode.data) {\n        if (selectedNode.children.length != 0) {\n          this.jm.toggle_node(selectedNode);\n        } else if (selectedNode.topic.indexOf(\"|\") != -1) {\n          console.log(selectedNode.topic);\n          axios.post(\"http://localhost:8086/info\", {\n            select_name: selectedNode.topic\n          }).then(response => {\n            if (!response.data.length) {}\n            console.log(response.data);\n            this.drawerinfo.title = selectedNode.topic;\n            this.drawerinfo.businessMajor = response.data.businessMajor;\n            this.drawerinfo.dongshi = response.data.dongshi + \"\";\n            this.drawerinfo.share = response.data.share;\n            this.drawerinfo.shouxi = response.data.shouxi + \"\";\n          }).catch(function (error) {\n            console.log(error);\n          });\n          this.drawer = true;\n        } else if (selectedNode.id.indexOf(\"more\") != -1) {\n          console.log(\"more\");\n          console.log(selectedNode.data);\n          this.tableData = new Array();\n          for (let i = 0; i < selectedNode.data.length; i++) {\n            let obj = {};\n            obj.name = selectedNode.data[i];\n            this.tableData.push(obj);\n          }\n          console.log(this.tableData);\n          this.moredia = true;\n        } else if (\n        //没有子节点，产品\n        selectedNode.topic != \"下游产品\" && selectedNode.topic.indexOf(\"公司\") == -1) {\n          let nodeid = jsMind.util.uuid.newid();\n          let topic = \"下游产品\";\n          let nodeid2 = jsMind.util.uuid.newid();\n          let topic2 = \"公司\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid, topic);\n          newNode1.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          newNode2.type = \"3\";\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          let parent = newNode1.parent;\n          this.add(newNode1, parent.topic);\n          let parent2 = newNode2.parent;\n          this.add(newNode2, parent2.topic);\n        } else {\n          //没有子节点，下游产品或公司\n          if (selectedNode.topic == \"下游产品\" || selectedNode.topic == \"公司\") {\n            let parent = selectedNode.parent;\n            this.add(selectedNode, parent.topic);\n          } else {\n            this.$message.error(\"无\" + selectedNode.topic);\n          }\n        }\n      } else {\n        this.$message.error(\"wrong\");\n      }\n    },\n    delCard() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.remove_node(selectedNode.id);\n        // 获取数据\n        console.log(this.jm.get_data(\"node_tree\"));\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    setcolor2() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.set_node_color(selectedNode.id, \"#3E241A\", \"#1F1815\");\n        // 获取数据\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 滚轮缩放\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      e.preventDefault();\n      this.jm.resize();\n    },\n    color_conditional() {\n      this.dialogVisible2 = true;\n      this.showMenu = false;\n    },\n    changecolor() {\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor));\n      this.dialogVisible2 = false;\n    },\n    closemore() {\n      this.moredia = false;\n    },\n    // 导出图片\n    screen_shot() {\n      // 去除透明度\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor));\n      try {\n        this.jm.screenshot.shootDownload();\n      } catch (error) {\n        console.log(error);\n      }\n      setTimeout(() => {\n        this.setColor();\n      }, 1000);\n    },\n    // 鼠标拖拽\n    mouseDrag() {\n      // 里层\n      const el = document.querySelector(\".jsmind-inner\");\n      // 选中节点\n      let selected;\n      el.onmousedown = ev => {\n        // 选中节点\n        selected = this.jm.get_selected_node();\n        // 标识 是否拖拽节点 避免冲突\n        this.dragNodeFlag = !!selected;\n        const disX = ev.clientX;\n        const disY = ev.clientY;\n        const originalScrollLeft = el.scrollLeft;\n        const originalScrollTop = el.scrollTop;\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\n        const originalPointerEvents = el.style[\"pointer-events\"];\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\n        el.style[\"scroll-behavior\"] = \"auto\";\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\n        document.onmousemove = ev => {\n          if (this.dragNodeFlag) return;\n          this.drag = false;\n          ev.preventDefault();\n          // 计算拖拽的偏移距离\n          const distanceX = ev.clientX - disX;\n          const distanceY = ev.clientY - disY;\n          el.scrollTo(originalScrollLeft - distanceX, originalScrollTop - distanceY);\n\n          // 在鼠标拖动的时候将点击事件屏蔽掉\n          el.style[\"pointer-events\"] = \"none\";\n          el.style.cursor = \"grabbing\";\n        };\n        document.onmouseup = () => {\n          if (!this.dragNodeFlag) {\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\n            el.style[\"pointer-events\"] = originalPointerEvents;\n            el.style.cursor = \"grab\";\n          }\n          document.onmousemove = document.onmouseup = null;\n        };\n      };\n    }\n  },\n  mounted() {\n    this.jm = jsMind.show(this.options, this.mind);\n    this.init();\n    this.mouseWheel();\n    this.mouseDrag();\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\n  }\n};","map":{"version":3,"names":["axios","watch","zoom.value","val","zoom","jm","view","setZoom","selectTypes","v","loopTreeData","mind","data","children","item","length","includes","type","set_node_color","id","bgMap","bgcolor","fgcolor","transparent","computed","pathColor","structure","active","pathActiveColor","pathOrginalColor","rectColor","rectActiveColor","rectOrginalColor","select","getData","remindData","lista","listb","input","input_select","input_node","meta","name","author","version","format","topic","expanded","options","container","editable","support_html","theme","engine","hmargin","vmargin","line_width","line_color","layout","hspace","vspace","pspace","shortcut","enable","value","min","max","original","dialogVisible","dialogVisible2","moredia","drawer","drawerinfo","title","shouxi","dongshi","share","businessMajor","tableData","selectNodeInfo","Name","tempNodeInfo","createType","showMenu","menuStyle","top","bottom","left","right","typeQueue","Set","methods","querySearch","queryString","cb","console","log","post","select_name","then","response","forEach","obj","push","catch","error","nameTipsArray","handleSelect","search","update_node","selectedNode1","get_node","selectedNode2","remove_node","nodeid","nodeid2","topic2","newNode1","add_node","newNode2","selectedNode1_","selectedNode2_","add","delChild","node","len","deli","reset","document","querySelector","scrollIntoView","block","behavior","zoomOut","parseInt","actualZoom","zoomIn","list","callback","doOneFloor","Array","isArray","i","setColor","set_node_font_style","init","minZoom","maxZoom","add_event","editor","e","selectedNode","get_selected_node","preventDefault","el","width","parseFloat","window","getComputedStyle","height","windowHeight","innerHeight","windowWidth","innerWidth","clientY","clientX","get_selected_nodeid","sureEditNode","handleDrop","draggingNode","dropNode","prevNode","find_node_before","dragForm","modelId","treeNum","thisTreeNum","addnode","product","relation","$message","showClose","message","jsMind","util","uuid","newid","slice","collapse_node","query_conditional","conditional_query","parent","shaixuan","nodeClick","toggle_node","indexOf","parent2","delCard","get_data","setcolor2","mouseWheel","addEventListener","scrollFunc","$refs","onmousewheel","event","wheelDelta","detail","resize","color_conditional","changecolor","closemore","screen_shot","screenshot","shootDownload","setTimeout","mouseDrag","selected","onmousedown","ev","dragNodeFlag","disX","disY","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","originalScrollBehavior","style","originalPointerEvents","onmousemove","drag","distanceX","distanceY","scrollTo","cursor","onmouseup","mounted","show","beforeDestroy","removeEventListener"],"sources":["src/components/modify.vue"],"sourcesContent":["<template>\n  <div class=\"jsmind\">\n    <el-drawer title=\"我是标题\" :visible.sync=\"drawer\" :with-header=\"false\">\n      <span\n        style=\"\n          display: inline-block;\n          font-weight: bold;\n          font-size: 25px;\n          margin: 10px 10px;\n        \"\n        >{{ drawerinfo.title }}</span\n      >\n\n      <el-descriptions :column=\"1\" border=\"true\">\n        <el-descriptions-item\n          label=\"董事\"\n          :contentStyle=\"{ 'text-align': 'left', 'font-size': '18px' }\"\n          :labelStyle=\"{ width: '150px', 'font-size': '18px' }\"\n          >{{ drawerinfo.dongshi }}</el-descriptions-item\n        >\n        <el-descriptions-item\n          label=\"首席\"\n          :contentStyle=\"{ 'text-align': 'left', 'font-size': '18px' }\"\n          :labelStyle=\"{ width: '150px', 'font-size': '18px' }\"\n          >{{ drawerinfo.shouxi }}</el-descriptions-item\n        >\n        <el-descriptions-item\n          label=\"主营信息\"\n          :contentStyle=\"{ 'text-align': 'left', 'font-size': '18px' }\"\n          :labelStyle=\"{ width: '150px', 'font-size': '18px' }\"\n          >{{ drawerinfo.businessMajor }}</el-descriptions-item\n        >\n        <el-descriptions-item\n          label=\"发行股票\"\n          :contentStyle=\"{ 'text-align': 'left', 'font-size': '18px' }\"\n          :labelStyle=\"{ width: '150px', 'font-size': '18px' }\"\n          >{{ drawerinfo.share }}</el-descriptions-item\n        >\n      </el-descriptions>\n    </el-drawer>\n    <!-- 右上角菜单 -->\n    <div class=\"toolbar\">\n      <ul class=\"toolbar-list\">\n        <li class=\"item\">\n          <span\n            size=\"16\"\n            class=\"percent\"\n            style=\"font-size: 14px; color: rgb(29, 29, 31)\"\n            @click=\"zoom.value = 100\"\n            >{{ zoom.value }}%\n          </span>\n          <div class=\"scale-slide\">\n            <ul>\n              <li class=\"normal-item\" title=\"缩小\" @click=\"zoomOut\">\n                <svg\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 16 16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-5.66 1.22a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7zM4.76 6.6h5.12c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36z\"\n                    fill=\"#2B2F36\"\n                    fill-rule=\"nonzero\"\n                  ></path>\n                </svg>\n              </li>\n\n              <li class=\"slider\">\n                <el-slider\n                  v-model=\"zoom.value\"\n                  :show-tooltip=\"false\"\n                  :min=\"zoom.min\"\n                  :max=\"zoom.max\"\n                ></el-slider>\n              </li>\n\n              <li class=\"normal-item\" title=\"画布放大\" @click=\"zoomIn\">\n                <svg\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 16 16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-6.4-5.36V4.76c0-.2.17-.37.37-.37h.73c.2 0 .37.16.37.37v1.83h1.83c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H8.05v1.83c0 .2-.16.37-.37.37h-.73a.37.37 0 01-.36-.37V8.05H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36h1.83zm.74 6.58a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7z\"\n                    fill=\"#2B2F36\"\n                    fill-rule=\"nonzero\"\n                  ></path>\n                </svg>\n              </li>\n            </ul>\n          </div>\n        </li>\n        <div class=\"layout item\" @click=\"color_conditional\">\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M12.56 4.06c1.41 0 2.8.28 4.05.8l-.99 1.21a9.3 9.3 0 00-2.67-.5l-.4-.01h-.43a9.14 9.14 0 00-5.28 2c-.72.61-1.3 1.32-1.69 2.09a5.1 5.1 0 000 4.82c.39.74.95 1.41 1.68 2 .73.59 1.59 1.06 2.55 1.39a9.75 9.75 0 004.5.42l.44-.06.53-.11.06-.02c.07-.03.14-.1.2-.2a.8.8 0 00.1-.47l-.03-.12-.03-.1-.05-.22a3.32 3.32 0 01.46-2.53c.52-.8 1.36-1.3 2.27-1.36H19.45l.1-.01c.48-.07.87-.53.96-1.1l.02-.14v-.25l-.02-.22-.05-.29a5.6 5.6 0 00-1.13-2.4l.96-1.2a7.08 7.08 0 011.63 3.34l.06.34.04.34v.37c-.08 1.45-1.12 2.6-2.4 2.7H18.02c-.48 0-.94.26-1.23.7-.22.34-.32.75-.28 1.16l.02.18.07.27a2.3 2.3 0 01-.2 1.75c-.24.41-.6.72-1 .86l-.17.05-.57.12c-.42.08-.84.13-1.26.16l-.42.03h-.44c-1.26 0-2.5-.2-3.65-.6a9.85 9.85 0 01-3-1.63 7.91 7.91 0 01-2.07-2.47 6.58 6.58 0 010-6.19A8.24 8.24 0 015.9 6.42a9.85 9.85 0 013-1.72c.92-.32 1.86-.53 2.81-.6l.41-.02.43-.01h.02zM7.4 12.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm12.29-9.01a.5.5 0 01.63-.13l.07.05.4.31c.18.16.23.42.12.63l-.05.08-7.69 9.6-1.14.51a.2.2 0 01-.28-.17v-.05L12 13l7.69-9.61zM8.4 8.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm4.2-1.5a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2z\"\n              fill=\"#2B2F36\"\n              fill-rule=\"evenodd\"\n            ></path>\n          </svg>\n        </div>\n        <div\n          class=\"reset item normal-item\"\n          title=\"定位到中心主题\"\n          @click=\"reset\"\n        >\n          <svg\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M.77 0h3.46c.21 0 .38.17.38.38v.77c0 .22-.17.39-.38.39h-2.7v2.7c0 .2-.16.38-.38.38H.38A.38.38 0 010 4.23V.77C0 .34.34 0 .77 0zm14.45 16h-3.46a.38.38 0 01-.38-.39v-.76c0-.22.17-.39.38-.39h2.7v-2.7c0-.2.17-.38.38-.38h.77c.21 0 .38.18.38.39v3.46c0 .43-.34.77-.77.77zM0 15.23v-3.46c0-.21.17-.39.38-.39h.77c.22 0 .39.18.39.39v2.7h2.69c.21 0 .38.16.38.38v.77c0 .2-.17.38-.38.38H.77a.77.77 0 01-.77-.77zM16 .78v3.46c0 .21-.17.38-.38.38h-.77a.38.38 0 01-.39-.38v-2.7h-2.69a.38.38 0 01-.38-.38V.4c0-.2.17-.38.38-.38h3.46c.43 0 .77.34.77.77zm-8 9.99a2.77 2.77 0 110-5.54 2.77 2.77 0 010 5.54z\"\n              fill=\"#2B2F36\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </svg>\n        </div>\n      </ul>\n    </div>\n    <div class=\"top-bar\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"10\" :offset=\"6\">\n          <el-autocomplete\n            v-model=\"input\"\n            :popper-append-to-body=\"false\"\n            placeholder=\"请输入查询产品名称\"\n            size=\"medium\"\n            label-width=400px\n            :fetch-suggestions=\"querySearch\"\n            @select=\"handleSelect\"\n          ></el-autocomplete>\n        </el-col>\n        <el-col :span=\"3\">\n          <el-button type=\"primary\" @click=\"search\">查 询</el-button></el-col\n        >\n        <el-col :span=\"3\" :offset=\"1\"\n          ><el-button\n            class=\"export\"\n            icon=\"el-icon-download\"\n            type=\"primary\"\n            @click=\"screen_shot\"\n          ></el-button>\n        </el-col>\n      </el-row>\n    </div>\n    <div class=\"jsmind_layout\">\n      <div\n        id=\"jsmind_container\"\n        ref=\"container\"\n        @click=\"nodeClick\"\n        @contextmenu.prevent=\"\"\n      ></div>\n      <el-dialog\n        :title=\"'条件查询'\"\n        :visible.sync=\"dialogVisible\"\n        width=\"600px\"\n        @closed=\"form = {}\"\n        :destroy-on-close=\"true\"\n        :lock-scroll=\"false\"\n        :append-to-body=\"true\"\n        v-if=\"selectNodeInfo\"\n      >\n        <el-form label-width=\"80px\" class=\"form-con\">\n          <el-form-item label=\"查询内容\">\n            <el-input\n              type=\"text\"\n              :rows=\"2\"\n              v-model=\"input_select\"\n              class=\"ele-width\"\n              maxLength=\"64\"\n            ></el-input>\n          </el-form-item>\n        </el-form>\n        <template v-slot:footer>\n          <div class=\"right mr-10\">\n            <el-button\n              type=\"primary\"\n              class=\"common-btn\"\n              @click=\"conditional_query\"\n              size=\"medium\"\n              >确 定</el-button\n            >\n          </div>\n        </template>\n      </el-dialog>\n      <el-dialog\n        :title=\"'颜色选择器'\"\n        :visible.sync=\"dialogVisible2\"\n        width=\"600px\"\n        @closed=\"form = {}\"\n        :destroy-on-close=\"true\"\n        :lock-scroll=\"false\"\n        :append-to-body=\"true\"\n        v-if=\"selectNodeInfo\"\n      >\n        <el-row>\n          <el-col :span=\"12\"\n            ><div class=\"block\">\n              <el-tag>产品</el-tag>\n            </div></el-col\n          >\n          <el-col :span=\"12\">\n            <div class=\"block\">\n              <el-tag>公司</el-tag>\n            </div></el-col\n          >\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\"\n            ><div class=\"block\">\n              <el-color-picker\n                v-model=\"bgMap[2].bgcolor\"\n              ></el-color-picker></div\n          ></el-col>\n          <el-col :span=\"12\">\n            <div class=\"block\">\n              <el-color-picker\n                v-model=\"bgMap[1].bgcolor\"\n              ></el-color-picker></div\n          ></el-col>\n        </el-row>\n\n        <template v-slot:footer>\n          <div class=\"right mr-10\">\n            <el-button\n              type=\"primary\"\n              class=\"common-btn\"\n              @click=\"changecolor\"\n              size=\"medium\"\n              >确 定</el-button\n            >\n          </div>\n        </template>\n      </el-dialog>\n      <el-dialog\n        :title=\"'更多'\"\n        :visible.sync=\"moredia\"\n        width=\"600px\"\n        @closed=\"form = {}\"\n        :destroy-on-close=\"true\"\n        :lock-scroll=\"false\"\n        :append-to-body=\"true\"\n        v-if=\"selectNodeInfo\"\n      >\n        <template>\n          <el-table :data=\"tableData\" max-height=\"250\" style=\"width: 100%\">\n            <el-table-column prop=\"name\" label=\"产品\"> </el-table-column>\n          </el-table>\n        </template>\n        <template v-slot:footer>\n          <div class=\"right mr-10\">\n            <el-button\n              type=\"primary\"\n              class=\"common-btn\"\n              @click=\"closemore\"\n              size=\"medium\"\n              >确 定</el-button\n            >\n          </div>\n        </template>\n      </el-dialog>\n    </div>\n    <!-- 右键菜单 -->\n    <el-menu\n      class=\"context-menu\"\n      v-show=\"showMenu\"\n      :style=\"{\n        left: menuStyle.left,\n        top: menuStyle.top,\n        bottom: menuStyle.bottom,\n        right: menuStyle.right,\n      }\"\n      ref=\"context\"\n    >\n      <slot>\n        <el-menu-item @click=\"query_conditional\" v-if=\"select\"\n          >条件查询</el-menu-item\n        >\n        <el-menu-item @click=\"delCard\">隐藏节点</el-menu-item>\n      </slot>\n    </el-menu>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  watch: {\n    \"zoom.value\"(val) {\n      const zoom = val / 100;\n      this.jm.view.setZoom(zoom);\n    },\n    selectTypes(v) {\n      this.loopTreeData(this.mind.data.children, (item) => {\n        if (v.length) {\n          if (v.includes(item.type)) {\n            this.jm.set_node_color(\n              item.id,\n              this.bgMap[item.type].bgcolor,\n              this.bgMap[item.type].fgcolor\n            );\n          } else {\n            this.jm.set_node_color(\n              item.id,\n              this.bgMap[item.type].transparent,\n              this.bgMap[item.type].fgcolor\n            );\n          }\n        } else {\n          this.jm.set_node_color(\n            item.id,\n            this.bgMap[item.type].transparent,\n            this.bgMap[item.type].fgcolor\n          );\n        }\n      });\n    },\n  },\n  computed: {\n    pathColor() {\n      return function (type) {\n        return this.structure.active === type\n          ? this.structure.pathActiveColor\n          : this.structure.pathOrginalColor;\n      };\n    },\n    rectColor() {\n      return function (type) {\n        return this.structure.active === type\n          ? this.structure.rectActiveColor\n          : this.structure.rectOrginalColor;\n      };\n    },\n  },\n  data() {\n    return {\n      select: false,\n      getData: [],// 根据输入值  查询到的结果  \n      remindData: [],\n      lista: [],\n      listb: [],\n      input: \"\",\n      input_select: \"\",\n      input_node: \"\",\n      mind: {\n        meta: {\n          name: \"脑图\",\n          author: \"\",\n          version: \"0.2\",\n        },\n        format: \"node_tree\",\n        data: {\n          id: \"root\",\n          topic: \"主产品\",\n          type: \"1\",\n          expanded: false,\n        },\n      },\n      options: {\n        container: \"jsmind_container\", // [必选] 容器的ID\n        editable: true, // [可选] 是否启用编辑\n        support_html: true, // 是否支持节点里的HTML元素\n        theme: \"\", // [可选] 主题\n        view: {\n          engine: \"svg\", // 思维导图各节点之间线条的绘制引擎\n          hmargin: 120, // 思维导图距容器外框的最小水平距离\n          vmargin: 50, // 思维导图距容器外框的最小垂直距离\n          line_width: 1, // 思维导图线条的粗细\n          line_color: \"\t#DCDCDC\", // 思维导图线条的颜色\n        },\n        layout: {\n          hspace: 120, // 节点之间的水平间距\n          vspace: 25, // 节点之间的垂直间距\n          pspace: 14, // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\n        },\n        shortcut: {\n          // 禁用快捷键\n          enable: false,\n        },\n      },\n      zoom: {\n        value: 100, // 层级大小\n        min: 10, // 最小层级\n        max: 400, // 最大层级\n      },\n      bgMap: {\n        //公司\n        1: {\n          bgcolor: \"#0014B7 \",\n          fgcolor: \" #fff\",\n          original: \"rgb(25, 144, 255)\",\n          transparent: \"rgb(25, 144, 255, 0.2)\",\n        },\n        //产品\n        2: {\n          bgcolor: \"#A16222\",\n          fgcolor: \"#fff\",\n          original: \"rgb(100, 201, 53)\",\n          transparent: \"rgb(100, 201, 53, 0.2)\",\n        },\n        3: {\n          //其他\n          bgcolor: \" \",\n          fgcolor: \"#000\",\n        },\n      },\n      structure: {\n        active: \"right\",\n        pathOrginalColor: \"#2B2F36\",\n        pathActiveColor: \"#3370FF\",\n        rectOrginalColor: \"#C3C6CB\",\n        rectActiveColor: \"#BACEFD\",\n      },\n      dialogVisible: false,\n      dialogVisible2: false,\n      moredia: false,\n      drawer: false,\n      drawerinfo: {\n        title: null,\n        shouxi: null,\n        dongshi: null,\n        share: null,\n        businessMajor: null,\n      },\n      tableData: null,\n      selectNodeInfo: {\n        id: null,\n        Name: \"\",\n      }, // 选中节点信息\n      tempNodeInfo: null, // 保存修改之前的信息\n      createType: \"\", // 添加平级or子级\n      showMenu: false, // 是否显示右键菜单栏\n      menuStyle: {\n        top: \"\",\n        bottom: \"\",\n        left: \"\",\n        right: \"\",\n      },\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]), // 选中types Set\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"], // 选中types Array\n    };\n  },\n  methods: {\n    querySearch(queryString, cb) {\n      console.log(queryString)\n      this.remindData=[]\n      if (this.input !== \"\") {\n        axios\n        .post(\"http://localhost:8087//ProductTiShi\", {\n          select_name: queryString\n        })\n        .then((response) => {\n          console.log(\"finish\")\n          this.getData = response.data; \n          this.getData.forEach((item) => { \n          let obj = { value: \"\"}; \n          obj.value = item; \n          this.remindData.push(obj);})\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n        let nameTipsArray = this.remindData;\n        // 调用 callback 返回建议列表的数据\n        cb(nameTipsArray);\n      }\n      \n    },\n\n    handleSelect(item) {\n      console.log(item);\n      this.input = item.value;\n      \n    },\n    search() {\n      // this.jm.show(this.mind);\n      this.jm.update_node(\"root\", this.input);\n      const selectedNode1 = this.jm.get_node(\"root1\");\n      const selectedNode2 = this.jm.get_node(\"root2\");\n      if (\n        selectedNode1.children.length != 0 ||\n        selectedNode2.children.length != 0\n      ) {\n        this.jm.remove_node(selectedNode1);\n        this.jm.remove_node(selectedNode2);\n        let nodeid = \"root1\";\n        let topic = \"下游产品\";\n        let nodeid2 = \"root2\";\n        let topic2 = \"公司\";\n        let newNode1 = this.jm.add_node(\"root\", nodeid, topic);\n        newNode1.type = \"3\";\n        this.jm.set_node_color(\n          newNode1.id,\n          this.bgMap[newNode1.type].bgcolor,\n          this.bgMap[newNode1.type].fgcolor\n        );\n        let newNode2 = this.jm.add_node(\"root\", nodeid2, topic2);\n        newNode2.type = \"3\";\n        this.jm.set_node_color(\n          newNode2.id,\n          this.bgMap[newNode2.type].bgcolor,\n          this.bgMap[newNode2.type].fgcolor\n        );\n\n        //this.add(newNode2, this.input);\n      }\n      const selectedNode1_ = this.jm.get_node(\"root1\");\n      const selectedNode2_ = this.jm.get_node(\"root2\");\n      this.add(selectedNode1_, this.input);\n      this.add(selectedNode2_, this.input);\n    },\n    //删除子节点\n    delChild(node) {\n      if (node.children.length != 0) {\n        console.log(node.children);\n        let len = node.children.length;\n        for (var deli = 0; deli < len; ) {\n          console.log(node.children[0]);\n          this.jm.remove_node(node.children[0]);\n          deli = deli + 1;\n        }\n      }\n    },\n    // 重置视图\n    reset() {\n      document.querySelector(\".root\").scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\",\n      });\n    },\n\n    // 缩小\n    zoomOut() {\n      this.jm.view.zoomOut();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 放大\n    zoomIn() {\n      this.jm.view.zoomIn();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n\n    // 循环树结构\n    loopTreeData(list, callback) {\n      (function doOneFloor(list) {\n        if (Array.isArray(list)) {\n          for (let i = 0; i < list.length; i++) {\n            const item = list[i];\n            callback(item, i);\n            if (item.children && item.children.length > 0) {\n              doOneFloor(item.children);\n            }\n          }\n        }\n      })(list);\n    },\n\n    // 设置背景颜色\n    setColor() {\n      this.jm.set_node_color(\n        \"root\",\n        this.bgMap[2].bgcolor,\n        this.bgMap[2].fgcolor\n      );\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\n      this.loopTreeData(this.mind.data.children, (item) => {\n        if (this.selectTypes.length) {\n          if (this.selectTypes.includes(item.type)) {\n            this.jm.set_node_color(\n              item.id,\n              this.bgMap[item.type].bgcolor,\n              this.bgMap[item.type].fgcolor\n            );\n          } else {\n            this.jm.set_node_color(\n              item.id,\n              this.bgMap[item.type].transparent,\n              \"#fff\"\n            );\n          }\n        } else {\n          this.jm.set_node_color(\n            item.id,\n            this.bgMap[item.type].transparent,\n            \"#fff\"\n          );\n        }\n      });\n    },\n\n    // 初始化配置\n    init() {\n      this.jm.view.minZoom = 0.1;\n      this.jm.view.maxZoom = 5;\n      //this.jm.expand_all();\n      let nodeid = \"root1\";\n      let topic = \"下游产品\";\n      let nodeid2 = \"root2\";\n      let topic2 = \"公司\";\n      let newNode1 = this.jm.add_node(\"root\", nodeid, topic);\n      newNode1.type = \"3\";\n      this.jm.set_node_color(\n        newNode1.id,\n        this.bgMap[newNode1.type].bgcolor,\n        this.bgMap[newNode1.type].fgcolor\n      );\n      let newNode2 = this.jm.add_node(\"root\", nodeid2, topic2);\n      newNode2.type = \"3\";\n      this.jm.set_node_color(\n        newNode2.id,\n        this.bgMap[newNode2.type].bgcolor,\n        this.bgMap[newNode2.type].fgcolor\n      );\n      this.setColor();\n\n      //右键菜单\n      this.jm.view.add_event(this.editor, \"contextmenu\", (e) => {\n        console.log(\"A\");\n        const selectedNode = this.jm.get_selected_node();\n        console.log(selectedNode);\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\n          e.preventDefault();\n          const el = document.querySelector(\".context-menu .el-menu-item\");\n          const width = parseFloat(window.getComputedStyle(el).width);\n          const height =\n            parseFloat(window.getComputedStyle(el).height) * 3 + 12;\n          const windowHeight = window.innerHeight;\n          const windowWidth = window.innerWidth;\n\n          // 极限位置 避免越界\n          if (e.clientY + height > windowHeight) {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = \"unset\";\n            this.menuStyle.bottom = 0;\n          } else if (e.clientX + width > windowWidth) {\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.left = \"unset\";\n            this.menuStyle.right = 0;\n          } else {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.bottom = \"unset\";\n          }\n          this.showMenu = true;\n          if (selectedNode.topic == \"下游产品\") {\n            this.select = true;\n          } else {\n            this.select = false;\n          }\n        } else {\n          this.showMenu = false;\n        }\n      });\n    },\n\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    sureEditNode() {\n      return;\n    },\n    // 拖拽\n    handleDrop(draggingNode, dropNode) {\n      // 前一个兄弟节点\n      const prevNode = this.jm.find_node_before(dropNode);\n      // 获取移动后的node\n      const dragForm = {\n        modelId: \"\",\n        treeNum: !prevNode ? draggingNode : prevNode.id,\n        thisTreeNum: dropNode,\n      };\n      //console.log(\"dragForm\", dragForm);\n\n      // TODO 调接口\n    },\n\n    add(addnode, product) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"下游产品\") {\n        axios\n          .post(\"http://localhost:8087/index\", {\n            select_name: product,\n            relation: \"下游产品\",\n          })\n          .then((response) => {\n            if (!response.data.length) {\n              this.$message({\n                showClose: true,\n                message: \"没有下游产品\",\n              });\n            }\n            this.lista = response.data;\n            console.log(this.lista);\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"2\";\n              this.jm.set_node_color(\n                newNode1.id,\n                this.bgMap[newNode1.type].bgcolor,\n                this.bgMap[newNode1.type].fgcolor\n              );\n            }\n            if (this.lista.length > 12) {\n              this.lista = this.lista.slice(12);\n              let nodeid = \"more\" + jsMind.util.uuid.newid();\n              let len = this.lista.length;\n              let newNode1 = this.jm.add_node(\n                addnode,\n                nodeid,\n                \"更多: \" + len,\n                this.lista\n              );\n              console.log(newNode1);\n              newNode1.type = \"2\";\n              this.jm.set_node_color(\n                newNode1.id,\n                this.bgMap[newNode1.type].bgcolor,\n                this.bgMap[newNode1.type].fgcolor\n              );\n              console.log(newNode1.id);\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"公司\") {\n        axios\n          .post(\"http://localhost:8087/xiayou\", {\n            select_name: product,\n            relation: \"生产公司\",\n          })\n          .then((response) => {\n            //console.log(\"生产公司\" + response);\n            if (!response.data.length) {\n              this.$message({\n                showClose: true,\n                message: \"没有所属公司\",\n              });\n            } else {\n              this.listb = response.data;\n              for (var i = 0; i < this.listb.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.listb[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n              if (this.listb.length > 12) {\n                this.listb = this.listb.slice(12);\n                let nodeid = \"more\" + jsMind.util.uuid.newid();\n                let len = this.listb.length;\n                let newNode1 = this.jm.add_node(\n                  addnode,\n                  nodeid,\n                  \"更多: \" + len,\n                  this.listb\n                );\n                console.log(newNode1);\n                newNode1.type = \"2\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n                console.log(newNode1.id);\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n        this.input_node = selectedNode;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n\n      this.showMenu = false;\n    },\n    conditional_query() {\n      const selectedNode = this.input_node;\n      this.dialogVisible = false;\n      this.delChild(selectedNode);\n      const node = selectedNode.parent;\n      axios\n        .post(\"http://localhost:8087/mohu\", {\n          select_name: node.topic,\n          shaixuan: this.input_select,\n        })\n        .then((response) => {\n          if (!response.data.length) {\n            this.$message({\n              showClose: true,\n              message: \"没有相关产品\",\n            });\n          }\n          this.lista = response.data;\n          var len = this.lista.length;\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(selectedNode, nodeid, topic);\n            newNode1.type = \"2\";\n            newNode1.expanded = \"false\";\n            this.jm.set_node_color(\n              newNode1.id,\n              this.bgMap[newNode1.type].bgcolor,\n              this.bgMap[newNode1.type].fgcolor\n            );\n          }\n          if (len > 12) {\n            this.lista = this.lista.slice(12);\n            let nodeid = \"more\" + jsMind.util.uuid.newid();\n            let len = this.lista.length;\n            let newNode1 = this.jm.add_node(\n              selectedNode,\n              nodeid,\n              \"更多: \" + len,\n              this.lista\n            );\n            console.log(newNode1);\n            newNode1.type = \"2\";\n            this.jm.set_node_color(\n              newNode1.id,\n              this.bgMap[newNode1.type].bgcolor,\n              this.bgMap[newNode1.type].fgcolor\n            );\n            console.log(newNode1.id);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    nodeClick() {\n      this.showMenu = false;\n      const selectedNode = this.jm.get_selected_node();\n      if (!selectedNode) {\n        return;\n      }\n      if (!!selectedNode.data) {\n        if (selectedNode.children.length != 0) {\n          this.jm.toggle_node(selectedNode);\n        } else if (selectedNode.topic.indexOf(\"|\") != -1) {\n          console.log(selectedNode.topic);\n          axios\n            .post(\"http://localhost:8086/info\", {\n              select_name: selectedNode.topic,\n            })\n            .then((response) => {\n              if (!response.data.length) {\n              }\n              console.log(response.data);\n              this.drawerinfo.title = selectedNode.topic;\n              this.drawerinfo.businessMajor = response.data.businessMajor;\n              this.drawerinfo.dongshi = response.data.dongshi + \"\";\n              this.drawerinfo.share = response.data.share;\n              this.drawerinfo.shouxi = response.data.shouxi + \"\";\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n          this.drawer = true;\n        } else if (selectedNode.id.indexOf(\"more\") != -1) {\n          console.log(\"more\");\n          console.log(selectedNode.data);\n\n          this.tableData = new Array();\n          for (let i = 0; i < selectedNode.data.length; i++) {\n            let obj = {};\n            obj.name = selectedNode.data[i];\n            this.tableData.push(obj);\n          }\n\n          console.log(this.tableData);\n\n          this.moredia = true;\n        } else if (\n          //没有子节点，产品\n          selectedNode.topic != \"下游产品\" &&\n          selectedNode.topic.indexOf(\"公司\") == -1\n        ) {\n          let nodeid = jsMind.util.uuid.newid();\n          let topic = \"下游产品\";\n          let nodeid2 = jsMind.util.uuid.newid();\n          let topic2 = \"公司\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid, topic);\n          newNode1.type = \"3\";\n          this.jm.set_node_color(\n            newNode1.id,\n            this.bgMap[newNode1.type].bgcolor,\n            this.bgMap[newNode1.type].fgcolor\n          );\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          newNode2.type = \"3\";\n          this.jm.set_node_color(\n            newNode2.id,\n            this.bgMap[newNode2.type].bgcolor,\n            this.bgMap[newNode2.type].fgcolor\n          );\n          let parent = newNode1.parent;\n          this.add(newNode1, parent.topic);\n          let parent2 = newNode2.parent;\n          this.add(newNode2, parent2.topic);\n        } else {\n          //没有子节点，下游产品或公司\n          if (\n            selectedNode.topic == \"下游产品\" ||\n            selectedNode.topic == \"公司\"\n          ) {\n            let parent = selectedNode.parent;\n            this.add(selectedNode, parent.topic);\n          } else {\n            this.$message.error(\"无\" + selectedNode.topic);\n          }\n        }\n      } else {\n        this.$message.error(\"wrong\");\n      }\n    },\n    delCard() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.remove_node(selectedNode.id);\n        // 获取数据\n        console.log(this.jm.get_data(\"node_tree\"));\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    setcolor2() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.set_node_color(selectedNode.id, \"#3E241A\", \"#1F1815\");\n        // 获取数据\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 滚轮缩放\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      e.preventDefault();\n      this.jm.resize();\n    },\n    color_conditional() {\n      this.dialogVisible2 = true;\n      this.showMenu = false;\n    },\n    changecolor() {\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, (item) =>\n        this.jm.set_node_color(\n          item.id,\n          this.bgMap[item.type].bgcolor,\n          this.bgMap[item.type].fgcolor\n        )\n      );\n      this.dialogVisible2 = false;\n    },\n    closemore() {\n      this.moredia = false;\n    },\n    // 导出图片\n    screen_shot() {\n      // 去除透明度\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, (item) =>\n        this.jm.set_node_color(\n          item.id,\n          this.bgMap[item.type].bgcolor,\n          this.bgMap[item.type].fgcolor\n        )\n      );\n      try {\n        this.jm.screenshot.shootDownload();\n      } catch (error) {\n        console.log(error);\n      }\n      setTimeout(() => {\n        this.setColor();\n      }, 1000);\n    },\n    // 鼠标拖拽\n    mouseDrag() {\n      // 里层\n      const el = document.querySelector(\".jsmind-inner\");\n      // 选中节点\n      let selected;\n\n      el.onmousedown = (ev) => {\n        // 选中节点\n        selected = this.jm.get_selected_node();\n        // 标识 是否拖拽节点 避免冲突\n        this.dragNodeFlag = !!selected;\n\n        const disX = ev.clientX;\n        const disY = ev.clientY;\n        const originalScrollLeft = el.scrollLeft;\n        const originalScrollTop = el.scrollTop;\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\n        const originalPointerEvents = el.style[\"pointer-events\"];\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\n        el.style[\"scroll-behavior\"] = \"auto\";\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\n        document.onmousemove = (ev) => {\n          if (this.dragNodeFlag) return;\n          this.drag = false;\n          ev.preventDefault();\n          // 计算拖拽的偏移距离\n          const distanceX = ev.clientX - disX;\n          const distanceY = ev.clientY - disY;\n\n          el.scrollTo(\n            originalScrollLeft - distanceX,\n            originalScrollTop - distanceY\n          );\n\n          // 在鼠标拖动的时候将点击事件屏蔽掉\n          el.style[\"pointer-events\"] = \"none\";\n          el.style.cursor = \"grabbing\";\n        };\n        document.onmouseup = () => {\n          if (!this.dragNodeFlag) {\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\n            el.style[\"pointer-events\"] = originalPointerEvents;\n            el.style.cursor = \"grab\";\n          }\n          document.onmousemove = document.onmouseup = null;\n        };\n      };\n    },\n  },\n  mounted() {\n    this.jm = jsMind.show(this.options, this.mind);\n    this.init();\n    this.mouseWheel();\n    this.mouseDrag();\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\n  },\n};\n</script>\n\n<style lang=\"less\">\n@import \"../assets/css/style.less\";\n</style>\n"],"mappings":";AAqSA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA,YAAAC,CAAAC,GAAA;MACA,MAAAC,IAAA,GAAAD,GAAA;MACA,KAAAE,EAAA,CAAAC,IAAA,CAAAC,OAAA,CAAAH,IAAA;IACA;IACAI,YAAAC,CAAA;MACA,KAAAC,YAAA,MAAAC,IAAA,CAAAC,IAAA,CAAAC,QAAA,EAAAC,IAAA;QACA,IAAAL,CAAA,CAAAM,MAAA;UACA,IAAAN,CAAA,CAAAO,QAAA,CAAAF,IAAA,CAAAG,IAAA;YACA,KAAAZ,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;YACA,KAAAjB,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,KAAAH,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;QACA;UACA,KAAAjB,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,KAAAH,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;QACA;MACA;IACA;EACA;EACAE,QAAA;IACAC,UAAA;MACA,iBAAAR,IAAA;QACA,YAAAS,SAAA,CAAAC,MAAA,KAAAV,IAAA,GACA,KAAAS,SAAA,CAAAE,eAAA,GACA,KAAAF,SAAA,CAAAG,gBAAA;MACA;IACA;IACAC,UAAA;MACA,iBAAAb,IAAA;QACA,YAAAS,SAAA,CAAAC,MAAA,KAAAV,IAAA,GACA,KAAAS,SAAA,CAAAK,eAAA,GACA,KAAAL,SAAA,CAAAM,gBAAA;MACA;IACA;EACA;EACApB,KAAA;IACA;MACAqB,MAAA;MACAC,OAAA;MAAA;MACAC,UAAA;MACAC,KAAA;MACAC,KAAA;MACAC,KAAA;MACAC,YAAA;MACAC,UAAA;MACA7B,IAAA;QACA8B,IAAA;UACAC,IAAA;UACAC,MAAA;UACAC,OAAA;QACA;QACAC,MAAA;QACAjC,IAAA;UACAO,EAAA;UACA2B,KAAA;UACA7B,IAAA;UACA8B,QAAA;QACA;MACA;MACAC,OAAA;QACAC,SAAA;QAAA;QACAC,QAAA;QAAA;QACAC,YAAA;QAAA;QACAC,KAAA;QAAA;QACA9C,IAAA;UACA+C,MAAA;UAAA;UACAC,OAAA;UAAA;UACAC,OAAA;UAAA;UACAC,UAAA;UAAA;UACAC,UAAA;QACA;;QACAC,MAAA;UACAC,MAAA;UAAA;UACAC,MAAA;UAAA;UACAC,MAAA;QACA;;QACAC,QAAA;UACA;UACAC,MAAA;QACA;MACA;MACA3D,IAAA;QACA4D,KAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;MACA;;MACA9C,KAAA;QACA;QACA;UACAC,OAAA;UACAC,OAAA;UACA6C,QAAA;UACA5C,WAAA;QACA;QACA;QACA;UACAF,OAAA;UACAC,OAAA;UACA6C,QAAA;UACA5C,WAAA;QACA;QACA;UACA;UACAF,OAAA;UACAC,OAAA;QACA;MACA;MACAI,SAAA;QACAC,MAAA;QACAE,gBAAA;QACAD,eAAA;QACAI,gBAAA;QACAD,eAAA;MACA;MACAqC,aAAA;MACAC,cAAA;MACAC,OAAA;MACAC,MAAA;MACAC,UAAA;QACAC,KAAA;QACAC,MAAA;QACAC,OAAA;QACAC,KAAA;QACAC,aAAA;MACA;MACAC,SAAA;MACAC,cAAA;QACA5D,EAAA;QACA6D,IAAA;MACA;MAAA;MACAC,YAAA;MAAA;MACAC,UAAA;MAAA;MACAC,QAAA;MAAA;MACAC,SAAA;QACAC,GAAA;QACAC,MAAA;QACAC,IAAA;QACAC,KAAA;MACA;MACAC,SAAA,MAAAC,GAAA;MAAA;MACAlF,WAAA;IACA;EACA;;EACAmF,OAAA;IACAC,YAAAC,WAAA,EAAAC,EAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,WAAA;MACA,KAAA1D,UAAA;MACA,SAAAG,KAAA;QACAtC,KAAA,CACAiG,IAAA;UACAC,WAAA,EAAAL;QACA,GACAM,IAAA,CAAAC,QAAA;UACAL,OAAA,CAAAC,GAAA;UACA,KAAA9D,OAAA,GAAAkE,QAAA,CAAAxF,IAAA;UACA,KAAAsB,OAAA,CAAAmE,OAAA,CAAAvF,IAAA;YACA,IAAAwF,GAAA;cAAAtC,KAAA;YAAA;YACAsC,GAAA,CAAAtC,KAAA,GAAAlD,IAAA;YACA,KAAAqB,UAAA,CAAAoE,IAAA,CAAAD,GAAA;UAAA;QACA,GACAE,KAAA,WAAAC,KAAA;UACAV,OAAA,CAAAC,GAAA,CAAAS,KAAA;QACA;QACA,IAAAC,aAAA,QAAAvE,UAAA;QACA;QACA2D,EAAA,CAAAY,aAAA;MACA;IAEA;IAEAC,aAAA7F,IAAA;MACAiF,OAAA,CAAAC,GAAA,CAAAlF,IAAA;MACA,KAAAwB,KAAA,GAAAxB,IAAA,CAAAkD,KAAA;IAEA;IACA4C,OAAA;MACA;MACA,KAAAvG,EAAA,CAAAwG,WAAA,cAAAvE,KAAA;MACA,MAAAwE,aAAA,QAAAzG,EAAA,CAAA0G,QAAA;MACA,MAAAC,aAAA,QAAA3G,EAAA,CAAA0G,QAAA;MACA,IACAD,aAAA,CAAAjG,QAAA,CAAAE,MAAA,SACAiG,aAAA,CAAAnG,QAAA,CAAAE,MAAA,OACA;QACA,KAAAV,EAAA,CAAA4G,WAAA,CAAAH,aAAA;QACA,KAAAzG,EAAA,CAAA4G,WAAA,CAAAD,aAAA;QACA,IAAAE,MAAA;QACA,IAAApE,KAAA;QACA,IAAAqE,OAAA;QACA,IAAAC,MAAA;QACA,IAAAC,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,SAAAJ,MAAA,EAAApE,KAAA;QACAuE,QAAA,CAAApG,IAAA;QACA,KAAAZ,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;QACA,IAAAiG,QAAA,QAAAlH,EAAA,CAAAiH,QAAA,SAAAH,OAAA,EAAAC,MAAA;QACAG,QAAA,CAAAtG,IAAA;QACA,KAAAZ,EAAA,CAAAa,cAAA,CACAqG,QAAA,CAAApG,EAAA,EACA,KAAAC,KAAA,CAAAmG,QAAA,CAAAtG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAmG,QAAA,CAAAtG,IAAA,EAAAK,OAAA,CACA;;QAEA;MACA;;MACA,MAAAkG,cAAA,QAAAnH,EAAA,CAAA0G,QAAA;MACA,MAAAU,cAAA,QAAApH,EAAA,CAAA0G,QAAA;MACA,KAAAW,GAAA,CAAAF,cAAA,OAAAlF,KAAA;MACA,KAAAoF,GAAA,CAAAD,cAAA,OAAAnF,KAAA;IACA;IACA;IACAqF,SAAAC,IAAA;MACA,IAAAA,IAAA,CAAA/G,QAAA,CAAAE,MAAA;QACAgF,OAAA,CAAAC,GAAA,CAAA4B,IAAA,CAAA/G,QAAA;QACA,IAAAgH,GAAA,GAAAD,IAAA,CAAA/G,QAAA,CAAAE,MAAA;QACA,SAAA+G,IAAA,MAAAA,IAAA,GAAAD,GAAA;UACA9B,OAAA,CAAAC,GAAA,CAAA4B,IAAA,CAAA/G,QAAA;UACA,KAAAR,EAAA,CAAA4G,WAAA,CAAAW,IAAA,CAAA/G,QAAA;UACAiH,IAAA,GAAAA,IAAA;QACA;MACA;IACA;IACA;IACAC,MAAA;MACAC,QAAA,CAAAC,aAAA,UAAAC,cAAA;QACAC,KAAA;QACAC,QAAA;MACA;IACA;IAEA;IACAC,QAAA;MACA,KAAAhI,EAAA,CAAAC,IAAA,CAAA+H,OAAA;MACA,KAAAjI,IAAA,CAAA4D,KAAA,GAAAsE,QAAA,MAAAjI,EAAA,CAAAC,IAAA,CAAAiI,UAAA;IACA;IACA;IACAC,OAAA;MACA,KAAAnI,EAAA,CAAAC,IAAA,CAAAkI,MAAA;MACA,KAAApI,IAAA,CAAA4D,KAAA,GAAAsE,QAAA,MAAAjI,EAAA,CAAAC,IAAA,CAAAiI,UAAA;IACA;IAEA;IACA7H,aAAA+H,IAAA,EAAAC,QAAA;MACA,UAAAC,WAAAF,IAAA;QACA,IAAAG,KAAA,CAAAC,OAAA,CAAAJ,IAAA;UACA,SAAAK,CAAA,MAAAA,CAAA,GAAAL,IAAA,CAAA1H,MAAA,EAAA+H,CAAA;YACA,MAAAhI,IAAA,GAAA2H,IAAA,CAAAK,CAAA;YACAJ,QAAA,CAAA5H,IAAA,EAAAgI,CAAA;YACA,IAAAhI,IAAA,CAAAD,QAAA,IAAAC,IAAA,CAAAD,QAAA,CAAAE,MAAA;cACA4H,UAAA,CAAA7H,IAAA,CAAAD,QAAA;YACA;UACA;QACA;MACA,GAAA4H,IAAA;IACA;IAEA;IACAM,SAAA;MACA,KAAA1I,EAAA,CAAAa,cAAA,CACA,QACA,KAAAE,KAAA,IAAAC,OAAA,EACA,KAAAD,KAAA,IAAAE,OAAA,CACA;MACA,KAAAjB,EAAA,CAAA2I,mBAAA;MACA,KAAAtI,YAAA,MAAAC,IAAA,CAAAC,IAAA,CAAAC,QAAA,EAAAC,IAAA;QACA,SAAAN,WAAA,CAAAO,MAAA;UACA,SAAAP,WAAA,CAAAQ,QAAA,CAAAF,IAAA,CAAAG,IAAA;YACA,KAAAZ,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;YACA,KAAAjB,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,OACA;UACA;QACA;UACA,KAAAlB,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,OACA;QACA;MACA;IACA;IAEA;IACA0H,KAAA;MACA,KAAA5I,EAAA,CAAAC,IAAA,CAAA4I,OAAA;MACA,KAAA7I,EAAA,CAAAC,IAAA,CAAA6I,OAAA;MACA;MACA,IAAAjC,MAAA;MACA,IAAApE,KAAA;MACA,IAAAqE,OAAA;MACA,IAAAC,MAAA;MACA,IAAAC,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,SAAAJ,MAAA,EAAApE,KAAA;MACAuE,QAAA,CAAApG,IAAA;MACA,KAAAZ,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;MACA,IAAAiG,QAAA,QAAAlH,EAAA,CAAAiH,QAAA,SAAAH,OAAA,EAAAC,MAAA;MACAG,QAAA,CAAAtG,IAAA;MACA,KAAAZ,EAAA,CAAAa,cAAA,CACAqG,QAAA,CAAApG,EAAA,EACA,KAAAC,KAAA,CAAAmG,QAAA,CAAAtG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAmG,QAAA,CAAAtG,IAAA,EAAAK,OAAA,CACA;MACA,KAAAyH,QAAA;;MAEA;MACA,KAAA1I,EAAA,CAAAC,IAAA,CAAA8I,SAAA,MAAAC,MAAA,iBAAAC,CAAA;QACAvD,OAAA,CAAAC,GAAA;QACA,MAAAuD,YAAA,QAAAlJ,EAAA,CAAAmJ,iBAAA;QACAzD,OAAA,CAAAC,GAAA,CAAAuD,YAAA;QACA,IAAAA,YAAA,KAAAA,YAAA,CAAAtI,IAAA,IAAAsI,YAAA,CAAA3I,IAAA,CAAAK,IAAA;UACAqI,CAAA,CAAAG,cAAA;UACA,MAAAC,EAAA,GAAA1B,QAAA,CAAAC,aAAA;UACA,MAAA0B,KAAA,GAAAC,UAAA,CAAAC,MAAA,CAAAC,gBAAA,CAAAJ,EAAA,EAAAC,KAAA;UACA,MAAAI,MAAA,GACAH,UAAA,CAAAC,MAAA,CAAAC,gBAAA,CAAAJ,EAAA,EAAAK,MAAA;UACA,MAAAC,YAAA,GAAAH,MAAA,CAAAI,WAAA;UACA,MAAAC,WAAA,GAAAL,MAAA,CAAAM,UAAA;;UAEA;UACA,IAAAb,CAAA,CAAAc,OAAA,GAAAL,MAAA,GAAAC,YAAA;YACA,KAAA5E,SAAA,CAAAG,IAAA,GAAA+D,CAAA,CAAAe,OAAA;YACA,KAAAjF,SAAA,CAAAC,GAAA;YACA,KAAAD,SAAA,CAAAE,MAAA;UACA,WAAAgE,CAAA,CAAAe,OAAA,GAAAV,KAAA,GAAAO,WAAA;YACA,KAAA9E,SAAA,CAAAC,GAAA,GAAAiE,CAAA,CAAAc,OAAA;YACA,KAAAhF,SAAA,CAAAG,IAAA;YACA,KAAAH,SAAA,CAAAI,KAAA;UACA;YACA,KAAAJ,SAAA,CAAAG,IAAA,GAAA+D,CAAA,CAAAe,OAAA;YACA,KAAAjF,SAAA,CAAAC,GAAA,GAAAiE,CAAA,CAAAc,OAAA;YACA,KAAAhF,SAAA,CAAAE,MAAA;UACA;UACA,KAAAH,QAAA;UACA,IAAAoE,YAAA,CAAAzG,KAAA;YACA,KAAAb,MAAA;UACA;YACA,KAAAA,MAAA;UACA;QACA;UACA,KAAAkD,QAAA;QACA;MACA;IACA;IAEA;IACAmF,oBAAA;MACA,MAAAf,YAAA,QAAAlJ,EAAA,CAAAmJ,iBAAA;MACA,IAAAD,YAAA;QACA,OAAAA,YAAA,CAAApI,EAAA;MACA;QACA;MACA;IACA;IACAoJ,aAAA;MACA;IACA;IACA;IACAC,WAAAC,YAAA,EAAAC,QAAA;MACA;MACA,MAAAC,QAAA,QAAAtK,EAAA,CAAAuK,gBAAA,CAAAF,QAAA;MACA;MACA,MAAAG,QAAA;QACAC,OAAA;QACAC,OAAA,GAAAJ,QAAA,GAAAF,YAAA,GAAAE,QAAA,CAAAxJ,EAAA;QACA6J,WAAA,EAAAN;MACA;MACA;;MAEA;IACA;;IAEAhD,IAAAuD,OAAA,EAAAC,OAAA;MACA;MACA,IAAAD,OAAA,CAAArK,IAAA,IAAAqK,OAAA,CAAAnI,KAAA;QACA9C,KAAA,CACAiG,IAAA;UACAC,WAAA,EAAAgF,OAAA;UACAC,QAAA;QACA,GACAhF,IAAA,CAAAC,QAAA;UACA,KAAAA,QAAA,CAAAxF,IAAA,CAAAG,MAAA;YACA,KAAAqK,QAAA;cACAC,SAAA;cACAC,OAAA;YACA;UACA;UACA,KAAAlJ,KAAA,GAAAgE,QAAA,CAAAxF,IAAA;UACAmF,OAAA,CAAAC,GAAA,MAAA5D,KAAA;UACA,SAAA0G,CAAA,MAAAA,CAAA,QAAA1G,KAAA,CAAArB,MAAA,IAAA+H,CAAA,OAAAA,CAAA;YACA,IAAA5B,MAAA,GAAAqE,MAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;YACA,IAAA5I,KAAA,QAAAV,KAAA,CAAA0G,CAAA;YACA,IAAAzB,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,CAAA2D,OAAA,EAAA/D,MAAA,EAAApE,KAAA;YACAuE,QAAA,CAAApG,IAAA;YACA,KAAAZ,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;UACA;UACA,SAAAc,KAAA,CAAArB,MAAA;YACA,KAAAqB,KAAA,QAAAA,KAAA,CAAAuJ,KAAA;YACA,IAAAzE,MAAA,YAAAqE,MAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;YACA,IAAA7D,GAAA,QAAAzF,KAAA,CAAArB,MAAA;YACA,IAAAsG,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,CACA2D,OAAA,EACA/D,MAAA,EACA,SAAAW,GAAA,EACA,KAAAzF,KAAA,CACA;YACA2D,OAAA,CAAAC,GAAA,CAAAqB,QAAA;YACAA,QAAA,CAAApG,IAAA;YACA,KAAAZ,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;YACAyE,OAAA,CAAAC,GAAA,CAAAqB,QAAA,CAAAlG,EAAA;UACA;QACA,GACAqF,KAAA,WAAAC,KAAA;UACAV,OAAA,CAAAC,GAAA,CAAAS,KAAA;QACA;MACA,WAAAwE,OAAA,CAAAnI,KAAA;QACA9C,KAAA,CACAiG,IAAA;UACAC,WAAA,EAAAgF,OAAA;UACAC,QAAA;QACA,GACAhF,IAAA,CAAAC,QAAA;UACA;UACA,KAAAA,QAAA,CAAAxF,IAAA,CAAAG,MAAA;YACA,KAAAqK,QAAA;cACAC,SAAA;cACAC,OAAA;YACA;UACA;YACA,KAAAjJ,KAAA,GAAA+D,QAAA,CAAAxF,IAAA;YACA,SAAAkI,CAAA,MAAAA,CAAA,QAAAzG,KAAA,CAAAtB,MAAA,IAAA+H,CAAA,OAAAA,CAAA;cACA,IAAA5B,MAAA,GAAAqE,MAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;cACA,IAAA5I,KAAA,QAAAT,KAAA,CAAAyG,CAAA;cACA,IAAAzB,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,CAAA2D,OAAA,EAAA/D,MAAA,EAAApE,KAAA;cACAuE,QAAA,CAAApG,IAAA;cACA,KAAAZ,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;YACA;YACA,SAAAe,KAAA,CAAAtB,MAAA;cACA,KAAAsB,KAAA,QAAAA,KAAA,CAAAsJ,KAAA;cACA,IAAAzE,MAAA,YAAAqE,MAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;cACA,IAAA7D,GAAA,QAAAxF,KAAA,CAAAtB,MAAA;cACA,IAAAsG,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,CACA2D,OAAA,EACA/D,MAAA,EACA,SAAAW,GAAA,EACA,KAAAxF,KAAA,CACA;cACA0D,OAAA,CAAAC,GAAA,CAAAqB,QAAA;cACAA,QAAA,CAAApG,IAAA;cACA,KAAAZ,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;cACAyE,OAAA,CAAAC,GAAA,CAAAqB,QAAA,CAAAlG,EAAA;YACA;UACA;QACA,GACAqF,KAAA,WAAAC,KAAA;UACAV,OAAA,CAAAC,GAAA,CAAAS,KAAA;QACA;MACA;QACA,KAAA2E,QAAA,CAAA3E,KAAA;MACA;MACA,KAAApG,EAAA,CAAAuL,aAAA,CAAAX,OAAA;IACA;IACAY,kBAAA;MACA,MAAAtC,YAAA,QAAAlJ,EAAA,CAAAmJ,iBAAA;MACA,IAAAD,YAAA,CAAA3I,IAAA;QACA,KAAAwD,aAAA;QACA,KAAA5B,UAAA,GAAA+G,YAAA;MACA;QACA,KAAA6B,QAAA,CAAA3E,KAAA;MACA;MAEA,KAAAtB,QAAA;IACA;IACA2G,kBAAA;MACA,MAAAvC,YAAA,QAAA/G,UAAA;MACA,KAAA4B,aAAA;MACA,KAAAuD,QAAA,CAAA4B,YAAA;MACA,MAAA3B,IAAA,GAAA2B,YAAA,CAAAwC,MAAA;MACA/L,KAAA,CACAiG,IAAA;QACAC,WAAA,EAAA0B,IAAA,CAAA9E,KAAA;QACAkJ,QAAA,OAAAzJ;MACA,GACA4D,IAAA,CAAAC,QAAA;QACA,KAAAA,QAAA,CAAAxF,IAAA,CAAAG,MAAA;UACA,KAAAqK,QAAA;YACAC,SAAA;YACAC,OAAA;UACA;QACA;QACA,KAAAlJ,KAAA,GAAAgE,QAAA,CAAAxF,IAAA;QACA,IAAAiH,GAAA,QAAAzF,KAAA,CAAArB,MAAA;QACA,SAAA+H,CAAA,MAAAA,CAAA,QAAA1G,KAAA,CAAArB,MAAA,IAAA+H,CAAA,OAAAA,CAAA;UACA,IAAA5B,MAAA,GAAAqE,MAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;UACA,IAAA5I,KAAA,QAAAV,KAAA,CAAA0G,CAAA;UACA,IAAAzB,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,CAAAiC,YAAA,EAAArC,MAAA,EAAApE,KAAA;UACAuE,QAAA,CAAApG,IAAA;UACAoG,QAAA,CAAAtE,QAAA;UACA,KAAA1C,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;QACA;QACA,IAAAuG,GAAA;UACA,KAAAzF,KAAA,QAAAA,KAAA,CAAAuJ,KAAA;UACA,IAAAzE,MAAA,YAAAqE,MAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;UACA,IAAA7D,GAAA,QAAAzF,KAAA,CAAArB,MAAA;UACA,IAAAsG,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,CACAiC,YAAA,EACArC,MAAA,EACA,SAAAW,GAAA,EACA,KAAAzF,KAAA,CACA;UACA2D,OAAA,CAAAC,GAAA,CAAAqB,QAAA;UACAA,QAAA,CAAApG,IAAA;UACA,KAAAZ,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;UACAyE,OAAA,CAAAC,GAAA,CAAAqB,QAAA,CAAAlG,EAAA;QACA;MACA,GACAqF,KAAA,WAAAC,KAAA;QACAV,OAAA,CAAAC,GAAA,CAAAS,KAAA;MACA;IACA;IACAwF,UAAA;MACA,KAAA9G,QAAA;MACA,MAAAoE,YAAA,QAAAlJ,EAAA,CAAAmJ,iBAAA;MACA,KAAAD,YAAA;QACA;MACA;MACA,MAAAA,YAAA,CAAA3I,IAAA;QACA,IAAA2I,YAAA,CAAA1I,QAAA,CAAAE,MAAA;UACA,KAAAV,EAAA,CAAA6L,WAAA,CAAA3C,YAAA;QACA,WAAAA,YAAA,CAAAzG,KAAA,CAAAqJ,OAAA;UACApG,OAAA,CAAAC,GAAA,CAAAuD,YAAA,CAAAzG,KAAA;UACA9C,KAAA,CACAiG,IAAA;YACAC,WAAA,EAAAqD,YAAA,CAAAzG;UACA,GACAqD,IAAA,CAAAC,QAAA;YACA,KAAAA,QAAA,CAAAxF,IAAA,CAAAG,MAAA,GACA;YACAgF,OAAA,CAAAC,GAAA,CAAAI,QAAA,CAAAxF,IAAA;YACA,KAAA4D,UAAA,CAAAC,KAAA,GAAA8E,YAAA,CAAAzG,KAAA;YACA,KAAA0B,UAAA,CAAAK,aAAA,GAAAuB,QAAA,CAAAxF,IAAA,CAAAiE,aAAA;YACA,KAAAL,UAAA,CAAAG,OAAA,GAAAyB,QAAA,CAAAxF,IAAA,CAAA+D,OAAA;YACA,KAAAH,UAAA,CAAAI,KAAA,GAAAwB,QAAA,CAAAxF,IAAA,CAAAgE,KAAA;YACA,KAAAJ,UAAA,CAAAE,MAAA,GAAA0B,QAAA,CAAAxF,IAAA,CAAA8D,MAAA;UACA,GACA8B,KAAA,WAAAC,KAAA;YACAV,OAAA,CAAAC,GAAA,CAAAS,KAAA;UACA;UACA,KAAAlC,MAAA;QACA,WAAAgF,YAAA,CAAApI,EAAA,CAAAgL,OAAA;UACApG,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAC,GAAA,CAAAuD,YAAA,CAAA3I,IAAA;UAEA,KAAAkE,SAAA,OAAA8D,KAAA;UACA,SAAAE,CAAA,MAAAA,CAAA,GAAAS,YAAA,CAAA3I,IAAA,CAAAG,MAAA,EAAA+H,CAAA;YACA,IAAAxC,GAAA;YACAA,GAAA,CAAA5D,IAAA,GAAA6G,YAAA,CAAA3I,IAAA,CAAAkI,CAAA;YACA,KAAAhE,SAAA,CAAAyB,IAAA,CAAAD,GAAA;UACA;UAEAP,OAAA,CAAAC,GAAA,MAAAlB,SAAA;UAEA,KAAAR,OAAA;QACA;QACA;QACAiF,YAAA,CAAAzG,KAAA,cACAyG,YAAA,CAAAzG,KAAA,CAAAqJ,OAAA,cACA;UACA,IAAAjF,MAAA,GAAAqE,MAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;UACA,IAAA5I,KAAA;UACA,IAAAqE,OAAA,GAAAoE,MAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;UACA,IAAAtE,MAAA;UACA,IAAAC,QAAA,QAAAhH,EAAA,CAAAiH,QAAA,CAAAiC,YAAA,EAAArC,MAAA,EAAApE,KAAA;UACAuE,QAAA,CAAApG,IAAA;UACA,KAAAZ,EAAA,CAAAa,cAAA,CACAmG,QAAA,CAAAlG,EAAA,EACA,KAAAC,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAiG,QAAA,CAAApG,IAAA,EAAAK,OAAA,CACA;UACA,IAAAiG,QAAA,QAAAlH,EAAA,CAAAiH,QAAA,CAAAiC,YAAA,EAAApC,OAAA,EAAAC,MAAA;UACAG,QAAA,CAAAtG,IAAA;UACA,KAAAZ,EAAA,CAAAa,cAAA,CACAqG,QAAA,CAAApG,EAAA,EACA,KAAAC,KAAA,CAAAmG,QAAA,CAAAtG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAmG,QAAA,CAAAtG,IAAA,EAAAK,OAAA,CACA;UACA,IAAAyK,MAAA,GAAA1E,QAAA,CAAA0E,MAAA;UACA,KAAArE,GAAA,CAAAL,QAAA,EAAA0E,MAAA,CAAAjJ,KAAA;UACA,IAAAsJ,OAAA,GAAA7E,QAAA,CAAAwE,MAAA;UACA,KAAArE,GAAA,CAAAH,QAAA,EAAA6E,OAAA,CAAAtJ,KAAA;QACA;UACA;UACA,IACAyG,YAAA,CAAAzG,KAAA,cACAyG,YAAA,CAAAzG,KAAA,UACA;YACA,IAAAiJ,MAAA,GAAAxC,YAAA,CAAAwC,MAAA;YACA,KAAArE,GAAA,CAAA6B,YAAA,EAAAwC,MAAA,CAAAjJ,KAAA;UACA;YACA,KAAAsI,QAAA,CAAA3E,KAAA,OAAA8C,YAAA,CAAAzG,KAAA;UACA;QACA;MACA;QACA,KAAAsI,QAAA,CAAA3E,KAAA;MACA;IACA;IACA4F,QAAA;MACA,MAAA9C,YAAA,QAAAlJ,EAAA,CAAAmJ,iBAAA;MACA,IAAAD,YAAA,CAAA3I,IAAA;QACA;QACA,KAAAP,EAAA,CAAA4G,WAAA,CAAAsC,YAAA,CAAApI,EAAA;QACA;QACA4E,OAAA,CAAAC,GAAA,MAAA3F,EAAA,CAAAiM,QAAA;MACA;QACA,KAAAlB,QAAA,CAAA3E,KAAA;MACA;MACA,KAAAtB,QAAA;IACA;IACAoH,UAAA;MACA,MAAAhD,YAAA,QAAAlJ,EAAA,CAAAmJ,iBAAA;MACA,IAAAD,YAAA,CAAA3I,IAAA;QACA;QACA,KAAAP,EAAA,CAAAa,cAAA,CAAAqI,YAAA,CAAApI,EAAA;QACA;MACA;QACA,KAAAiK,QAAA,CAAA3E,KAAA;MACA;MACA,KAAAtB,QAAA;IACA;IACA;IACAqH,WAAA;MACA,IAAAxE,QAAA,CAAAyE,gBAAA;QACAzE,QAAA,CAAAyE,gBAAA,wBAAAC,UAAA;MACA;MACA,KAAAC,KAAA,CAAA1J,SAAA,CAAA2J,YAAA,QAAAF,UAAA;IACA;IACA;IACAA,WAAApD,CAAA;MACAA,CAAA,GAAAA,CAAA,IAAAO,MAAA,CAAAgD,KAAA;MACA,IAAAvD,CAAA,CAAAwD,UAAA;QACA,IAAAxD,CAAA,CAAAwD,UAAA;UACA,KAAAtE,MAAA;QACA;UACA,KAAAH,OAAA;QACA;MACA,WAAAiB,CAAA,CAAAyD,MAAA;QACA,IAAAzD,CAAA,CAAAyD,MAAA;UACA,KAAAvE,MAAA;QACA;UACA,KAAAH,OAAA;QACA;MACA;MACAiB,CAAA,CAAAG,cAAA;MACA,KAAApJ,EAAA,CAAA2M,MAAA;IACA;IACAC,kBAAA;MACA,KAAA5I,cAAA;MACA,KAAAc,QAAA;IACA;IACA+H,YAAA;MACA,MAAAtF,IAAA,QAAAvH,EAAA,CAAA0G,QAAA;MACA,KAAArG,YAAA,CAAAkH,IAAA,CAAA/G,QAAA,EAAAC,IAAA,IACA,KAAAT,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA,CACA;MACA,KAAA+C,cAAA;IACA;IACA8I,UAAA;MACA,KAAA7I,OAAA;IACA;IACA;IACA8I,YAAA;MACA;MACA,MAAAxF,IAAA,QAAAvH,EAAA,CAAA0G,QAAA;MACA,KAAArG,YAAA,CAAAkH,IAAA,CAAA/G,QAAA,EAAAC,IAAA,IACA,KAAAT,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA,CACA;MACA;QACA,KAAAjB,EAAA,CAAAgN,UAAA,CAAAC,aAAA;MACA,SAAA7G,KAAA;QACAV,OAAA,CAAAC,GAAA,CAAAS,KAAA;MACA;MACA8G,UAAA;QACA,KAAAxE,QAAA;MACA;IACA;IACA;IACAyE,UAAA;MACA;MACA,MAAA9D,EAAA,GAAA1B,QAAA,CAAAC,aAAA;MACA;MACA,IAAAwF,QAAA;MAEA/D,EAAA,CAAAgE,WAAA,GAAAC,EAAA;QACA;QACAF,QAAA,QAAApN,EAAA,CAAAmJ,iBAAA;QACA;QACA,KAAAoE,YAAA,KAAAH,QAAA;QAEA,MAAAI,IAAA,GAAAF,EAAA,CAAAtD,OAAA;QACA,MAAAyD,IAAA,GAAAH,EAAA,CAAAvD,OAAA;QACA,MAAA2D,kBAAA,GAAArE,EAAA,CAAAsE,UAAA;QACA,MAAAC,iBAAA,GAAAvE,EAAA,CAAAwE,SAAA;QACA,MAAAC,sBAAA,GAAAzE,EAAA,CAAA0E,KAAA;QACA,MAAAC,qBAAA,GAAA3E,EAAA,CAAA0E,KAAA;QACA;QACA1E,EAAA,CAAA0E,KAAA;QACA;QACApG,QAAA,CAAAsG,WAAA,GAAAX,EAAA;UACA,SAAAC,YAAA;UACA,KAAAW,IAAA;UACAZ,EAAA,CAAAlE,cAAA;UACA;UACA,MAAA+E,SAAA,GAAAb,EAAA,CAAAtD,OAAA,GAAAwD,IAAA;UACA,MAAAY,SAAA,GAAAd,EAAA,CAAAvD,OAAA,GAAA0D,IAAA;UAEApE,EAAA,CAAAgF,QAAA,CACAX,kBAAA,GAAAS,SAAA,EACAP,iBAAA,GAAAQ,SAAA,CACA;;UAEA;UACA/E,EAAA,CAAA0E,KAAA;UACA1E,EAAA,CAAA0E,KAAA,CAAAO,MAAA;QACA;QACA3G,QAAA,CAAA4G,SAAA;UACA,UAAAhB,YAAA;YACAlE,EAAA,CAAA0E,KAAA,sBAAAD,sBAAA;YACAzE,EAAA,CAAA0E,KAAA,qBAAAC,qBAAA;YACA3E,EAAA,CAAA0E,KAAA,CAAAO,MAAA;UACA;UACA3G,QAAA,CAAAsG,WAAA,GAAAtG,QAAA,CAAA4G,SAAA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAxO,EAAA,GAAAkL,MAAA,CAAAuD,IAAA,MAAA9L,OAAA,OAAArC,IAAA;IACA,KAAAsI,IAAA;IACA,KAAAuD,UAAA;IACA,KAAAgB,SAAA;EACA;EACAuB,cAAA;IACA/G,QAAA,CAAAgH,mBAAA,wBAAAtC,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}