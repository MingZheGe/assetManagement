{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport test from \"../components/test.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    mytest: test\n  },\n  watch: {\n    \"zoom.value\"(val) {\n      const zoom = val / 100;\n      this.jm.view.setZoom(zoom);\n    },\n    selectTypes(v) {\n      this.loopTreeData(this.mind.data.children, item => {\n        if (v.length) {\n          if (v.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n        }\n      });\n    }\n  },\n  computed: {\n    pathColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.pathActiveColor : this.structure.pathOrginalColor;\n      };\n    },\n    rectColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.rectActiveColor : this.structure.rectOrginalColor;\n      };\n    }\n  },\n  data() {\n    return {\n      user: 'ligang',\n      lista: [],\n      listb: [],\n      select: false,\n      getData: [],\n      // 根据输入值  查询到的结果\n      remindData: [],\n      input: \"\",\n      mind: {\n        meta: {\n          name: \"f10_股票\",\n          author: \"\",\n          version: \"0.2\"\n        },\n        format: \"node_tree\",\n        data: {\n          id: \"root\",\n          topic: \"某股票\",\n          type: \"2\",\n          expanded: true,\n          children: [{\n            id: \"root1\",\n            // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n            topic: \"发行公司\",\n            // [必选] 节点上显示的内容\n            direction: \"right\",\n            // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n            expanded: true,\n            // [可选] 该节点是否是展开状态，默认为 true\n            type: \"3\" // [可选]自定义节点类型\n          }]\n        }\n      },\n\n      options: {\n        container: \"jsmind_container\",\n        // [必选] 容器的ID\n        editable: true,\n        // [可选] 是否启用编辑\n        support_html: true,\n        // 是否支持节点里的HTML元素\n        theme: \"\",\n        // [可选] 主题\n        view: {\n          engine: \"svg\",\n          // 思维导图各节点之间线条的绘制引擎\n          hmargin: 120,\n          // 思维导图距容器外框的最小水平距离\n          vmargin: 50,\n          // 思维导图距容器外框的最小垂直距离\n          line_width: 1,\n          // 思维导图线条的粗细\n          line_color: \"\t#DCDCDC\" // 思维导图线条的颜色\n        },\n\n        layout: {\n          hspace: 120,\n          // 节点之间的水平间距\n          vspace: 25,\n          // 节点之间的垂直间距\n          pspace: 14 // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\n        },\n\n        shortcut: {\n          // 禁用快捷键\n          enable: false\n        }\n      },\n      zoom: {\n        value: 100,\n        // 层级大小\n        min: 10,\n        // 最小层级\n        max: 400 // 最大层级\n      },\n\n      bgMap: {\n        //公司\n        1: {\n          bgcolor: \"#87CEFA \",\n          fgcolor: \" #000\",\n          original: \"#87CEFA\",\n          transparent: \"rgb(25, 144, 255, 0.2)\"\n        },\n        //根节点\n        2: {\n          bgcolor: \"#1E90FF\",\n          fgcolor: \"#fff\",\n          original: \"rgb(100, 201, 53)\",\n          transparent: \"rgb(100, 201, 53, 0.2)\"\n        },\n        3: {\n          //其他\n          bgcolor: \" \",\n          fgcolor: \"#000\"\n        },\n        4: {\n          //人\n          bgcolor: \"#FF7F50\",\n          fgcolor: \"#fff\"\n        },\n        5: [{\n          //发行\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\"\n        }, {\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\"\n        }, {\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\"\n        }],\n        6: {\n          //项目\n          bgcolor: \"#ecb5c9\",\n          fgcolor: \"#fff\"\n        },\n        7: {\n          //发行1\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\"\n        },\n        8: {\n          //发行2\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\"\n        },\n        9: {\n          //发行3\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\"\n        }\n      },\n      structure: {\n        active: \"right\",\n        pathOrginalColor: \"#2B2F36\",\n        pathActiveColor: \"#3370FF\",\n        rectOrginalColor: \"#C3C6CB\",\n        rectActiveColor: \"#BACEFD\"\n      },\n      dialogVisible: false,\n      dialogVisible2: false,\n      selectNodeInfo: {\n        id: null,\n        Name: \"\"\n      },\n      // 选中节点信息\n      tempNodeInfo: null,\n      // 保存修改之前的信息\n      createType: \"\",\n      // 添加平级or子级\n      showMenu: false,\n      // 是否显示右键菜单栏\n      menuStyle: {\n        top: \"\",\n        bottom: \"\",\n        left: \"\",\n        right: \"\"\n      },\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]),\n      // 选中types Set\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"] // 选中types Array\n    };\n  },\n\n  methods: {\n    querySearch(queryString, cb) {\n      console.log(queryString);\n      this.remindData = [];\n      if (this.input !== \"\") {\n        axios.post(\"http://localhost:8086//ShareTiShi\", {\n          select_name: queryString\n        }).then(response => {\n          console.log(\"finish\");\n          this.getData = response.data;\n          this.getData.forEach(item => {\n            let obj = {\n              value: \"\"\n            };\n            obj.value = item;\n            this.remindData.push(obj);\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n        let nameTipsArray = this.remindData;\n        // 调用 callback 返回建议列表的数据\n        cb(nameTipsArray);\n      }\n    },\n    handleSelect(item) {\n      let regex = /\\[(.+?)\\]/g;\n      this.input = item.value.match(regex)[0].replace(\"[\", \"\").replace(\"]\", \"\");\n    },\n    search() {\n      this.jm.update_node(\"root\", this.input);\n      const selectedNode1 = this.jm.get_node(\"root1\");\n      this.delChild(selectedNode1);\n      this.add_stock(selectedNode1, this.input);\n    },\n    delChild(node) {\n      if (node.children.length != 0) {\n        console.log(node.children);\n        let len = node.children.length;\n        for (var deli = 0; deli < len;) {\n          console.log(node.children[0]);\n          this.jm.remove_node(node.children[0]);\n          deli = deli + 1;\n        }\n      }\n    },\n    // 重置视图\n    reset() {\n      document.querySelector(\".root\").scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\"\n      });\n    },\n    // 缩小\n    zoomOut() {\n      this.jm.view.zoomOut();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 放大\n    zoomIn() {\n      this.jm.view.zoomIn();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 循环树结构\n    loopTreeData(list, callback) {\n      (function doOneFloor(list) {\n        if (Array.isArray(list)) {\n          for (let i = 0; i < list.length; i++) {\n            const item = list[i];\n            callback(item, i);\n            if (item.children && item.children.length > 0) {\n              doOneFloor(item.children);\n            }\n          }\n        }\n      })(list);\n    },\n    // 设置背景颜色\n    setColor() {\n      this.jm.set_node_color(\"root\", this.bgMap[2].bgcolor, this.bgMap[2].fgcolor);\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\n      this.loopTreeData(this.mind.data.children, item => {\n        if (this.selectTypes.length) {\n          if (this.selectTypes.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n        }\n      });\n    },\n    // 初始化配置\n    init() {\n      this.jm.view.minZoom = 0.1;\n      this.jm.view.maxZoom = 5;\n      this.setColor();\n\n      //右键菜单\n      this.jm.view.add_event(this.editor, \"contextmenu\", e => {\n        console.log(\"A\");\n        const selectedNode = this.jm.get_selected_node();\n        console.log(selectedNode);\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\n          e.preventDefault();\n          const el = document.querySelector(\".context-menu .el-menu-item\");\n          const width = parseFloat(window.getComputedStyle(el).width);\n          const height = parseFloat(window.getComputedStyle(el).height) * 3 + 12;\n          const windowHeight = window.innerHeight;\n          const windowWidth = window.innerWidth;\n\n          // 极限位置 避免越界\n          if (e.clientY + height > windowHeight) {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = \"unset\";\n            this.menuStyle.bottom = 0;\n          } else if (e.clientX + width > windowWidth) {\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.left = \"unset\";\n            this.menuStyle.right = 0;\n          } else {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.bottom = \"unset\";\n          }\n          this.showMenu = true;\n          if (selectedNode.topic == \"下游产品\") {\n            this.select = true;\n          } else {\n            this.select = false;\n          }\n        } else {\n          this.showMenu = false;\n        }\n      });\n    },\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    sureEditNode() {},\n    // 拖拽\n    handleDrop(draggingNode, dropNode) {\n      // 前一个兄弟节点\n      const prevNode = this.jm.find_node_before(dropNode);\n      // 获取移动后的node\n      const dragForm = {\n        modelId: \"\",\n        treeNum: !prevNode ? draggingNode : prevNode.id,\n        thisTreeNum: dropNode\n      };\n      //console.log(\"dragForm\", dragForm);\n\n      // TODO 调接口\n    },\n\n    add_company(addnode, company) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"董事长\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"董事长\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"总裁\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"总裁\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"首席运营官\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"首席运营官\"\n        }).then(response => {\n          //console.log(\"生产公司\" + response);\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"监事\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"监事\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"董事会秘书\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"董事会秘书\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"发行\") {\n        axios.post(\"http://localhost:8086/faxing\", {\n          select_name: company,\n          relation: \"发行\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i].ChiName;\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              let num = 7 + this.lista[i].Stock;\n              newNode1.type = num;\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"参股公司\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"参股公司\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"控股股东\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"控股股东\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"大股东\") {\n        axios.post(\"http://localhost:8086/gudong\", {\n          select_name: company\n          //relation: \"大股东\",\n        }).then(response => {\n          if ((response.data.company.length == 0 || !response.data.person.length == 0) && addnode.parent.id != \"root\") {\n            console.log(response.data.company.length);\n            this.jm.remove_node(addnode.id);\n          } else {\n            console.log(response.data);\n            this.lista = response.data.person;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"4\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n            this.listb = response.data.company;\n            console.log(\"b:\" + this.listb);\n            for (var i = 0; i < this.listb.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.listb[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"投资\") {\n        axios.post(\"http://localhost:8086/company\", {\n          select_name: company,\n          relation: \"投资\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"6\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    add_person(addnode, person) {\n      if (addnode.data && addnode.topic == \"担任董事长\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任董事长\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          }\n          this.lista = response.data;\n          var len = this.lista.length;\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n            newNode1.type = \"1\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任总裁\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任总裁\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任首席运营官\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任首席运营官\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任监事\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任监事\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"担任董事会秘书\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"担任董事会秘书\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"实际控制人\") {\n        axios.post(\"http://localhost:8086/person\", {\n          select_name: person,\n          relation: \"实际控制人\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          } else {\n            this.lista = response.data;\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\" + addnode.topic);\n      }\n      this.jm.collapse_node(addnode);\n    },\n    add_stock(addnode, share) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"发行公司\") {\n        axios.post(\"http://localhost:8086/share\", {\n          select_name: share,\n          relation: \"发行公司\"\n        }).then(response => {\n          if (!response.data.length && addnode.parent.id != \"root\") {\n            this.jm.remove_node(addnode.id);\n          }\n          this.lista = response.data;\n          console.log(this.lista);\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n            newNode1.type = \"1\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    color_conditional() {\n      this.dialogVisible2 = true;\n      this.showMenu = false;\n    },\n    nodeClick() {\n      this.showMenu = false;\n      const selectedNode = this.jm.get_selected_node();\n      console.log(selectedNode.id);\n      //let newNode1 = this.jm.add_node(selectedNode, \"table1\", \"topic1\");*/\n      if (!selectedNode) return;\n      //console.log(selectedNode.type)\n      if (selectedNode.data) {\n        if (selectedNode.children.length != 0) {\n          this.jm.toggle_node(selectedNode);\n        } else if (selectedNode.type == 1) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let nodeid7 = jsMind.util.uuid.newid();\n          let nodeid8 = jsMind.util.uuid.newid();\n          let nodeid9 = jsMind.util.uuid.newid();\n          let nodeid10 = jsMind.util.uuid.newid();\n          let topic1 = \"董事长\";\n          let topic2 = \"总裁\";\n          let topic3 = \"首席运营官\";\n          let topic4 = \"监事\";\n          let topic5 = \"董事会秘书\";\n          let topic6 = \"发行\";\n          let topic7 = \"参股公司\";\n          let topic8 = \"控股股东\";\n          let topic9 = \"大股东\";\n          let topic10 = \"投资\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          let newNode7 = this.jm.add_node(selectedNode, nodeid7, topic7);\n          let newNode8 = this.jm.add_node(selectedNode, nodeid8, topic8);\n          let newNode9 = this.jm.add_node(selectedNode, nodeid9, topic9);\n          let newNode10 = this.jm.add_node(selectedNode, nodeid10, topic10);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          newNode7.type = \"3\";\n          newNode8.type = \"3\";\n          newNode9.type = \"3\";\n          newNode10.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          this.jm.set_node_color(newNode3.id, this.bgMap[newNode3.type].bgcolor, this.bgMap[newNode3.type].fgcolor);\n          this.jm.set_node_color(newNode4.id, this.bgMap[newNode4.type].bgcolor, this.bgMap[newNode4.type].fgcolor);\n          this.jm.set_node_color(newNode5.id, this.bgMap[newNode5.type].bgcolor, this.bgMap[newNode5.type].fgcolor);\n          this.jm.set_node_color(newNode6.id, this.bgMap[newNode6.type].bgcolor, this.bgMap[newNode6.type].fgcolor);\n          this.jm.set_node_color(newNode7.id, this.bgMap[newNode7.type].bgcolor, this.bgMap[newNode7.type].fgcolor);\n          this.jm.set_node_color(newNode8.id, this.bgMap[newNode8.type].bgcolor, this.bgMap[newNode8.type].fgcolor);\n          this.jm.set_node_color(newNode9.id, this.bgMap[newNode9.type].bgcolor, this.bgMap[newNode9.type].fgcolor);\n          this.jm.set_node_color(newNode10.id, this.bgMap[newNode10.type].bgcolor, this.bgMap[newNode10.type].fgcolor);\n          this.add_company(newNode1, selectedNode.topic);\n          this.add_company(newNode2, selectedNode.topic);\n          this.add_company(newNode3, selectedNode.topic);\n          this.add_company(newNode4, selectedNode.topic);\n          this.add_company(newNode5, selectedNode.topic);\n          this.add_company(newNode6, selectedNode.topic);\n          this.add_company(newNode7, selectedNode.topic);\n          this.add_company(newNode8, selectedNode.topic);\n          this.add_company(newNode9, selectedNode.topic);\n          this.add_company(newNode10, selectedNode.topic);\n        } else if (selectedNode.type == 4) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let topic1 = \"担任董事长\";\n          let topic2 = \"担任总裁\";\n          let topic3 = \"担任首席运营官\";\n          let topic4 = \"担任监事\";\n          let topic5 = \"担任董事会秘书\";\n          let topic6 = \"实际控制人\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          this.jm.set_node_color(newNode3.id, this.bgMap[newNode3.type].bgcolor, this.bgMap[newNode3.type].fgcolor);\n          this.jm.set_node_color(newNode4.id, this.bgMap[newNode4.type].bgcolor, this.bgMap[newNode4.type].fgcolor);\n          this.jm.set_node_color(newNode5.id, this.bgMap[newNode5.type].bgcolor, this.bgMap[newNode5.type].fgcolor);\n          this.jm.set_node_color(newNode6.id, this.bgMap[newNode6.type].bgcolor, this.bgMap[newNode6.type].fgcolor);\n          this.add_person(newNode1, selectedNode.topic);\n          this.add_person(newNode2, selectedNode.topic);\n          this.add_person(newNode3, selectedNode.topic);\n          this.add_person(newNode4, selectedNode.topic);\n          this.add_person(newNode5, selectedNode.topic);\n          this.add_person(newNode6, selectedNode.topic);\n        } else if (selectedNode.type == 5) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let topic1 = \"发行公司\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          newNode1.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          this.add_stock(newNode1, selectedNode.topic);\n        } else {\n          this.$message({\n            showClose: true,\n            message: \"没有\" + selectedNode.topic\n          });\n        }\n      } else {\n        this.$message.error(\"wrong\");\n      }\n    },\n    delCard() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.remove_node(selectedNode.id);\n        // 获取数据\n        console.log(this.jm.get_data(\"node_tree\"));\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 滚轮缩放\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      e.preventDefault();\n      this.jm.resize();\n    },\n    // 更改颜色\n    changecolor() {\n      console.log(this.bgMap[4].bgcolor);\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type || 3].bgcolor, this.bgMap[item.type || 3].fgcolor));\n      this.dialogVisible2 = false;\n    },\n    // 导出图片\n    screen_shot() {\n      // 去除透明度\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type || 3].bgcolor, this.bgMap[item.type || 3].fgcolor));\n      try {\n        this.jm.screenshot.shootDownload();\n      } catch (error) {\n        console.log(error);\n      }\n      setTimeout(() => {\n        this.setColor();\n      }, 1000);\n    },\n    // 鼠标拖拽\n    mouseDrag() {\n      // 里层\n      const el = document.querySelector(\".jsmind-inner\");\n      // 选中节点\n      let selected;\n      el.onmousedown = ev => {\n        // 选中节点\n        selected = this.jm.get_selected_node();\n        // 标识 是否拖拽节点 避免冲突\n        this.dragNodeFlag = !!selected;\n        const disX = ev.clientX;\n        const disY = ev.clientY;\n        const originalScrollLeft = el.scrollLeft;\n        const originalScrollTop = el.scrollTop;\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\n        const originalPointerEvents = el.style[\"pointer-events\"];\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\n        el.style[\"scroll-behavior\"] = \"auto\";\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\n        document.onmousemove = ev => {\n          if (this.dragNodeFlag) return;\n          this.drag = false;\n          ev.preventDefault();\n          // 计算拖拽的偏移距离\n          const distanceX = ev.clientX - disX;\n          const distanceY = ev.clientY - disY;\n          el.scrollTo(originalScrollLeft - distanceX, originalScrollTop - distanceY);\n\n          // 在鼠标拖动的时候将点击事件屏蔽掉\n          el.style[\"pointer-events\"] = \"none\";\n          el.style.cursor = \"grabbing\";\n        };\n        document.onmouseup = () => {\n          if (!this.dragNodeFlag) {\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\n            el.style[\"pointer-events\"] = originalPointerEvents;\n            el.style.cursor = \"grab\";\n          }\n          document.onmousemove = document.onmouseup = null;\n        };\n      };\n    }\n  },\n  mounted() {\n    this.jm = jsMind.show(this.options, this.mind);\n    this.init();\n    this.mouseWheel();\n    this.mouseDrag();\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\n  }\n};","map":{"version":3,"names":["test","axios","components","mytest","watch","zoom.value","val","zoom","jm","view","setZoom","selectTypes","v","loopTreeData","mind","data","children","item","length","includes","type","set_node_color","id","bgMap","bgcolor","fgcolor","transparent","computed","pathColor","structure","active","pathActiveColor","pathOrginalColor","rectColor","rectActiveColor","rectOrginalColor","user","lista","listb","select","getData","remindData","input","meta","name","author","version","format","topic","expanded","direction","options","container","editable","support_html","theme","engine","hmargin","vmargin","line_width","line_color","layout","hspace","vspace","pspace","shortcut","enable","value","min","max","original","dialogVisible","dialogVisible2","selectNodeInfo","Name","tempNodeInfo","createType","showMenu","menuStyle","top","bottom","left","right","typeQueue","Set","methods","querySearch","queryString","cb","console","log","post","select_name","then","response","forEach","obj","push","catch","error","nameTipsArray","handleSelect","regex","match","replace","search","update_node","selectedNode1","get_node","delChild","add_stock","node","len","deli","remove_node","reset","document","querySelector","scrollIntoView","block","behavior","zoomOut","parseInt","actualZoom","zoomIn","list","callback","doOneFloor","Array","isArray","i","setColor","set_node_font_style","init","minZoom","maxZoom","add_event","editor","e","selectedNode","get_selected_node","preventDefault","el","width","parseFloat","window","getComputedStyle","height","windowHeight","innerHeight","windowWidth","innerWidth","clientY","clientX","get_selected_nodeid","sureEditNode","handleDrop","draggingNode","dropNode","prevNode","find_node_before","dragForm","modelId","treeNum","thisTreeNum","add_company","addnode","company","relation","parent","nodeid","jsMind","util","uuid","newid","newNode1","add_node","ChiName","num","Stock","person","$message","collapse_node","add_person","share","query_conditional","color_conditional","nodeClick","toggle_node","nodeid1","nodeid2","nodeid3","nodeid4","nodeid5","nodeid6","nodeid7","nodeid8","nodeid9","nodeid10","topic1","topic2","topic3","topic4","topic5","topic6","topic7","topic8","topic9","topic10","newNode2","newNode3","newNode4","newNode5","newNode6","newNode7","newNode8","newNode9","newNode10","showClose","message","delCard","get_data","mouseWheel","addEventListener","scrollFunc","$refs","onmousewheel","event","wheelDelta","detail","resize","changecolor","screen_shot","screenshot","shootDownload","setTimeout","mouseDrag","selected","onmousedown","ev","dragNodeFlag","disX","disY","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","originalScrollBehavior","style","originalPointerEvents","onmousemove","drag","distanceX","distanceY","scrollTo","cursor","onmouseup","mounted","show","beforeDestroy","removeEventListener"],"sources":["src/views/f10_stock.vue"],"sourcesContent":["<template>\n  <div class=\"jsmind\">\n    <mytest :user=\"user\"></mytest>\n    <!-- 右上角菜单 -->\n    <div class=\"toolbar\">\n      <ul class=\"toolbar-list\">\n        <li class=\"item\">\n          <span\n            size=\"16\"\n            class=\"percent\"\n            style=\"font-size: 14px; color: rgb(29, 29, 31)\"\n            @click=\"zoom.value = 100\"\n            >{{ zoom.value }}%\n          </span>\n          <div class=\"scale-slide\">\n            <ul>\n              <li class=\"normal-item\" title=\"缩小\" @click=\"zoomOut\">\n                <svg\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 16 16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-5.66 1.22a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7zM4.76 6.6h5.12c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36z\"\n                    fill=\"#2B2F36\"\n                    fill-rule=\"nonzero\"\n                  ></path>\n                </svg>\n              </li>\n\n              <li class=\"slider\">\n                <el-slider\n                  v-model=\"zoom.value\"\n                  :show-tooltip=\"false\"\n                  :min=\"zoom.min\"\n                  :max=\"zoom.max\"\n                ></el-slider>\n              </li>\n\n              <li class=\"normal-item\" title=\"画布放大\" @click=\"zoomIn\">\n                <svg\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 16 16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-6.4-5.36V4.76c0-.2.17-.37.37-.37h.73c.2 0 .37.16.37.37v1.83h1.83c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H8.05v1.83c0 .2-.16.37-.37.37h-.73a.37.37 0 01-.36-.37V8.05H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36h1.83zm.74 6.58a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7z\"\n                    fill=\"#2B2F36\"\n                    fill-rule=\"nonzero\"\n                  ></path>\n                </svg>\n              </li>\n            </ul>\n          </div>\n        </li>\n        <div class=\"layout item\" @click=\"color_conditional\">\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M12.56 4.06c1.41 0 2.8.28 4.05.8l-.99 1.21a9.3 9.3 0 00-2.67-.5l-.4-.01h-.43a9.14 9.14 0 00-5.28 2c-.72.61-1.3 1.32-1.69 2.09a5.1 5.1 0 000 4.82c.39.74.95 1.41 1.68 2 .73.59 1.59 1.06 2.55 1.39a9.75 9.75 0 004.5.42l.44-.06.53-.11.06-.02c.07-.03.14-.1.2-.2a.8.8 0 00.1-.47l-.03-.12-.03-.1-.05-.22a3.32 3.32 0 01.46-2.53c.52-.8 1.36-1.3 2.27-1.36H19.45l.1-.01c.48-.07.87-.53.96-1.1l.02-.14v-.25l-.02-.22-.05-.29a5.6 5.6 0 00-1.13-2.4l.96-1.2a7.08 7.08 0 011.63 3.34l.06.34.04.34v.37c-.08 1.45-1.12 2.6-2.4 2.7H18.02c-.48 0-.94.26-1.23.7-.22.34-.32.75-.28 1.16l.02.18.07.27a2.3 2.3 0 01-.2 1.75c-.24.41-.6.72-1 .86l-.17.05-.57.12c-.42.08-.84.13-1.26.16l-.42.03h-.44c-1.26 0-2.5-.2-3.65-.6a9.85 9.85 0 01-3-1.63 7.91 7.91 0 01-2.07-2.47 6.58 6.58 0 010-6.19A8.24 8.24 0 015.9 6.42a9.85 9.85 0 013-1.72c.92-.32 1.86-.53 2.81-.6l.41-.02.43-.01h.02zM7.4 12.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm12.29-9.01a.5.5 0 01.63-.13l.07.05.4.31c.18.16.23.42.12.63l-.05.08-7.69 9.6-1.14.51a.2.2 0 01-.28-.17v-.05L12 13l7.69-9.61zM8.4 8.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm4.2-1.5a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2z\"\n              fill=\"#2B2F36\"\n              fill-rule=\"evenodd\"\n            ></path>\n          </svg>\n        </div>\n        <div\n          class=\"reset item normal-item\"\n          title=\"定位到中心主题\"\n          @click=\"reset\"\n        >\n          <svg\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M.77 0h3.46c.21 0 .38.17.38.38v.77c0 .22-.17.39-.38.39h-2.7v2.7c0 .2-.16.38-.38.38H.38A.38.38 0 010 4.23V.77C0 .34.34 0 .77 0zm14.45 16h-3.46a.38.38 0 01-.38-.39v-.76c0-.22.17-.39.38-.39h2.7v-2.7c0-.2.17-.38.38-.38h.77c.21 0 .38.18.38.39v3.46c0 .43-.34.77-.77.77zM0 15.23v-3.46c0-.21.17-.39.38-.39h.77c.22 0 .39.18.39.39v2.7h2.69c.21 0 .38.16.38.38v.77c0 .2-.17.38-.38.38H.77a.77.77 0 01-.77-.77zM16 .78v3.46c0 .21-.17.38-.38.38h-.77a.38.38 0 01-.39-.38v-2.7h-2.69a.38.38 0 01-.38-.38V.4c0-.2.17-.38.38-.38h3.46c.43 0 .77.34.77.77zm-8 9.99a2.77 2.77 0 110-5.54 2.77 2.77 0 010 5.54z\"\n              fill=\"#2B2F36\"\n              fill-rule=\"nonzero\"\n            ></path>\n          </svg>\n        </div>\n      </ul>\n    </div>\n    <div class=\"top-bar\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"10\" :offset=\"6\">\n          <el-autocomplete\n            v-model=\"input\"\n            :popper-append-to-body=\"false\"\n            placeholder=\"请输入查询股票名称或代码\"\n            size=\"medium\"\n            label-width=\"400px\"\n            :fetch-suggestions=\"querySearch\"\n            @select=\"handleSelect\"\n          ></el-autocomplete\n        ></el-col>\n        <el-col :span=\"3\">\n          <el-button type=\"primary\" @click=\"search\">查 询</el-button></el-col\n        >\n        <el-col :span=\"3\" :offset=\"1\"\n          ><el-button\n            class=\"export\"\n            icon=\"el-icon-download\"\n            type=\"primary\"\n            @click=\"screen_shot\"\n          ></el-button>\n        </el-col>\n      </el-row>\n    </div>\n    <div class=\"jsmind_layout\">\n      <div\n        id=\"jsmind_container\"\n        ref=\"container\"\n        @click=\"nodeClick\"\n        @contextmenu.prevent=\"\"\n      ></div>\n\n      <el-dialog\n        :title=\"'颜色选择器'\"\n        :visible.sync=\"dialogVisible2\"\n        width=\"600px\"\n        @closed=\"form = {}\"\n        :destroy-on-close=\"true\"\n        :lock-scroll=\"false\"\n        :append-to-body=\"true\"\n        v-if=\"selectNodeInfo\"\n      >\n        <el-row>\n          <el-col :span=\"8\"\n            ><div class=\"block\">\n              <el-tag>人</el-tag>\n            </div></el-col\n          >\n          <el-col :span=\"8\">\n            <div class=\"block\">\n              <el-tag>公司</el-tag>\n            </div></el-col\n          >\n          <el-col :span=\"8\"\n            ><div class=\"block\">\n              <el-tag>项目</el-tag>\n            </div></el-col\n          >\n        </el-row>\n        <el-row>\n          <el-col :span=\"8\"\n            ><div class=\"block\">\n              <el-color-picker\n                v-model=\"bgMap[4].bgcolor\"\n              ></el-color-picker></div\n          ></el-col>\n          <el-col :span=\"8\">\n            <div class=\"block\">\n              <el-color-picker\n                v-model=\"bgMap[1].bgcolor\"\n              ></el-color-picker></div\n          ></el-col>\n          <el-col :span=\"8\">\n            <div class=\"block\">\n              <el-color-picker\n                v-model=\"bgMap[6].bgcolor\"\n              ></el-color-picker></div\n          ></el-col>\n        </el-row>\n        <br />\n        <el-row>\n          <el-col :span=\"8\"\n            ><div class=\"block\">\n              <el-tag>A股</el-tag>\n            </div></el-col\n          >\n          <el-col :span=\"8\">\n            <div class=\"block\">\n              <el-tag>B股</el-tag>\n            </div></el-col\n          >\n          <el-col :span=\"8\"\n            ><div class=\"block\">\n              <el-tag>C股</el-tag>\n            </div></el-col\n          >\n        </el-row>\n        <el-row>\n          <el-col :span=\"8\"\n            ><div class=\"block\">\n              <el-color-picker\n                v-model=\"bgMap[7].bgcolor\"\n              ></el-color-picker></div\n          ></el-col>\n          <el-col :span=\"8\">\n            <div class=\"block\">\n              <el-color-picker\n                v-model=\"bgMap[8].bgcolor\"\n              ></el-color-picker></div\n          ></el-col>\n          <el-col :span=\"8\">\n            <div class=\"block\">\n              <el-color-picker\n                v-model=\"bgMap[9].bgcolor\"\n              ></el-color-picker></div\n          ></el-col>\n        </el-row>\n\n        <template v-slot:footer>\n          <div class=\"right mr-10\">\n            <el-button\n              type=\"primary\"\n              class=\"common-btn\"\n              @click=\"changecolor\"\n              size=\"medium\"\n              >确 定</el-button\n            >\n          </div>\n        </template>\n      </el-dialog>\n    </div>\n    <!-- 右键菜单 -->\n    <el-menu\n      class=\"context-menu\"\n      v-show=\"showMenu\"\n      :style=\"{\n        left: menuStyle.left,\n        top: menuStyle.top,\n        bottom: menuStyle.bottom,\n        right: menuStyle.right,\n      }\"\n      ref=\"context\"\n    >\n      <slot>\n        <el-menu-item @click=\"delCard\">隐藏节点</el-menu-item>\n      </slot>\n    </el-menu>\n  </div>\n</template>\n<script>\nimport test from \"../components/test.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    mytest:test,\n  },\n \n  watch: {\n    \"zoom.value\"(val) {\n      const zoom = val / 100;\n      this.jm.view.setZoom(zoom);\n    },\n    selectTypes(v) {\n      this.loopTreeData(this.mind.data.children, (item) => {\n        if (v.length) {\n          if (v.includes(item.type)) {\n            this.jm.set_node_color(\n              item.id,\n              this.bgMap[item.type].bgcolor,\n              this.bgMap[item.type].fgcolor\n            );\n          } else {\n            this.jm.set_node_color(\n              item.id,\n              this.bgMap[item.type].transparent,\n              this.bgMap[item.type].fgcolor\n            );\n          }\n        } else {\n          this.jm.set_node_color(\n            item.id,\n            this.bgMap[item.type].transparent,\n            this.bgMap[item.type].fgcolor\n          );\n        }\n      });\n    },\n  },\n  computed: {\n    pathColor() {\n      return function (type) {\n        return this.structure.active === type\n          ? this.structure.pathActiveColor\n          : this.structure.pathOrginalColor;\n      };\n    },\n    rectColor() {\n      return function (type) {\n        return this.structure.active === type\n          ? this.structure.rectActiveColor\n          : this.structure.rectOrginalColor;\n      };\n    },\n  },\n  data() {\n    return {\n      user:'ligang',\n\n      lista: [],\n      listb: [],\n      select: false,\n      getData: [], // 根据输入值  查询到的结果\n      remindData: [],\n      input: \"\",\n      mind: {\n        meta: {\n          name: \"f10_股票\",\n          author: \"\",\n          version: \"0.2\",\n        },\n        format: \"node_tree\",\n        data: {\n          id: \"root\",\n          topic: \"某股票\",\n          type: \"2\",\n          expanded: true,\n          children: [\n            {\n              id: \"root1\", // [必选] ID, 所有节点的ID不应有重复，否则ID重复的结节将被忽略\n              topic: \"发行公司\", // [必选] 节点上显示的内容\n              direction: \"right\", // [可选] 节点的方向，此数据仅在第一层节点上有效，目前仅支持 left 和 right 两种，默认为 right\n              expanded: true, // [可选] 该节点是否是展开状态，默认为 true\n              type: \"3\", // [可选]自定义节点类型\n            },\n          ],\n        },\n      },\n      options: {\n        container: \"jsmind_container\", // [必选] 容器的ID\n        editable: true, // [可选] 是否启用编辑\n        support_html: true, // 是否支持节点里的HTML元素\n        theme: \"\", // [可选] 主题\n        view: {\n          engine: \"svg\", // 思维导图各节点之间线条的绘制引擎\n          hmargin: 120, // 思维导图距容器外框的最小水平距离\n          vmargin: 50, // 思维导图距容器外框的最小垂直距离\n          line_width: 1, // 思维导图线条的粗细\n          line_color: \"\t#DCDCDC\", // 思维导图线条的颜色\n        },\n        layout: {\n          hspace: 120, // 节点之间的水平间距\n          vspace: 25, // 节点之间的垂直间距\n          pspace: 14, // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\n        },\n        shortcut: {\n          // 禁用快捷键\n          enable: false,\n        },\n      },\n      zoom: {\n        value: 100, // 层级大小\n        min: 10, // 最小层级\n        max: 400, // 最大层级\n      },\n      bgMap: {\n        //公司\n        1: {\n          bgcolor: \"#87CEFA \",\n          fgcolor: \" #000\",\n          original: \"#87CEFA\",\n          transparent: \"rgb(25, 144, 255, 0.2)\",\n        },\n        //根节点\n        2: {\n          bgcolor: \"#1E90FF\",\n          fgcolor: \"#fff\",\n          original: \"rgb(100, 201, 53)\",\n          transparent: \"rgb(100, 201, 53, 0.2)\",\n        },\n        3: {\n          //其他\n          bgcolor: \" \",\n          fgcolor: \"#000\",\n        },\n        4: {\n          //人\n          bgcolor: \"#FF7F50\",\n          fgcolor: \"#fff\",\n        },\n        5: [\n          {\n            //发行\n            bgcolor: \"#FF6347\",\n            fgcolor: \"#fff\",\n          },\n          {\n            bgcolor: \"#fa8072\",\n            fgcolor: \"#fff\",\n          },\n          {\n            bgcolor: \"#ff7f50\",\n            fgcolor: \"#fff\",\n          },\n        ],\n        6: {\n          //项目\n          bgcolor: \"#ecb5c9\",\n          fgcolor: \"#fff\",\n        },\n        7: {\n          //发行1\n          bgcolor: \"#FF6347\",\n          fgcolor: \"#fff\",\n        },\n        8: {\n          //发行2\n          bgcolor: \"#fa8072\",\n          fgcolor: \"#fff\",\n        },\n        9: {\n          //发行3\n          bgcolor: \"#ff7f50\",\n          fgcolor: \"#fff\",\n        },\n      },\n      structure: {\n        active: \"right\",\n        pathOrginalColor: \"#2B2F36\",\n        pathActiveColor: \"#3370FF\",\n        rectOrginalColor: \"#C3C6CB\",\n        rectActiveColor: \"#BACEFD\",\n      },\n      dialogVisible: false,\n      dialogVisible2: false,\n      selectNodeInfo: {\n        id: null,\n        Name: \"\",\n      }, // 选中节点信息\n      tempNodeInfo: null, // 保存修改之前的信息\n      createType: \"\", // 添加平级or子级\n      showMenu: false, // 是否显示右键菜单栏\n      menuStyle: {\n        top: \"\",\n        bottom: \"\",\n        left: \"\",\n        right: \"\",\n      },\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]), // 选中types Set\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"], // 选中types Array\n    };\n  },\n  methods: {\n    querySearch(queryString, cb) {\n      console.log(queryString);\n      this.remindData = [];\n      if (this.input !== \"\") {\n        axios\n          .post(\"http://localhost:8086//ShareTiShi\", {\n            select_name: queryString,\n          })\n          .then((response) => {\n            console.log(\"finish\");\n            this.getData = response.data;\n            this.getData.forEach((item) => {\n              let obj = { value: \"\" };\n              obj.value = item;\n              this.remindData.push(obj);\n            });\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n        let nameTipsArray = this.remindData;\n        // 调用 callback 返回建议列表的数据\n        cb(nameTipsArray);\n      }\n    },\n\n    handleSelect(item) {\n      let regex = /\\[(.+?)\\]/g;\n      this.input = item.value.match(regex)[0].replace(\"[\", \"\").replace(\"]\", \"\");\n    },\n\n    search() {\n      this.jm.update_node(\"root\", this.input);\n      const selectedNode1 = this.jm.get_node(\"root1\");\n      this.delChild(selectedNode1);\n      this.add_stock(selectedNode1, this.input);\n    },\n    delChild(node) {\n      if (node.children.length != 0) {\n        console.log(node.children);\n        let len = node.children.length;\n        for (var deli = 0; deli < len; ) {\n          console.log(node.children[0]);\n          this.jm.remove_node(node.children[0]);\n          deli = deli + 1;\n        }\n      }\n    },\n    // 重置视图\n    reset() {\n      document.querySelector(\".root\").scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\",\n      });\n    },\n\n    // 缩小\n    zoomOut() {\n      this.jm.view.zoomOut();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 放大\n    zoomIn() {\n      this.jm.view.zoomIn();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n\n    // 循环树结构\n    loopTreeData(list, callback) {\n      (function doOneFloor(list) {\n        if (Array.isArray(list)) {\n          for (let i = 0; i < list.length; i++) {\n            const item = list[i];\n            callback(item, i);\n            if (item.children && item.children.length > 0) {\n              doOneFloor(item.children);\n            }\n          }\n        }\n      })(list);\n    },\n\n    // 设置背景颜色\n    setColor() {\n      this.jm.set_node_color(\n        \"root\",\n        this.bgMap[2].bgcolor,\n        this.bgMap[2].fgcolor\n      );\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\n      this.loopTreeData(this.mind.data.children, (item) => {\n        if (this.selectTypes.length) {\n          if (this.selectTypes.includes(item.type)) {\n            this.jm.set_node_color(\n              item.id,\n              this.bgMap[item.type].bgcolor,\n              this.bgMap[item.type].fgcolor\n            );\n          } else {\n            this.jm.set_node_color(\n              item.id,\n              this.bgMap[item.type].transparent,\n              \"#fff\"\n            );\n          }\n        } else {\n          this.jm.set_node_color(\n            item.id,\n            this.bgMap[item.type].transparent,\n            \"#fff\"\n          );\n        }\n      });\n    },\n\n    // 初始化配置\n    init() {\n      this.jm.view.minZoom = 0.1;\n      this.jm.view.maxZoom = 5;\n\n      this.setColor();\n\n      //右键菜单\n      this.jm.view.add_event(this.editor, \"contextmenu\", (e) => {\n        console.log(\"A\");\n        const selectedNode = this.jm.get_selected_node();\n        console.log(selectedNode);\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\n          e.preventDefault();\n          const el = document.querySelector(\".context-menu .el-menu-item\");\n          const width = parseFloat(window.getComputedStyle(el).width);\n          const height =\n            parseFloat(window.getComputedStyle(el).height) * 3 + 12;\n          const windowHeight = window.innerHeight;\n          const windowWidth = window.innerWidth;\n\n          // 极限位置 避免越界\n          if (e.clientY + height > windowHeight) {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = \"unset\";\n            this.menuStyle.bottom = 0;\n          } else if (e.clientX + width > windowWidth) {\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.left = \"unset\";\n            this.menuStyle.right = 0;\n          } else {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.bottom = \"unset\";\n          }\n          this.showMenu = true;\n          if (selectedNode.topic == \"下游产品\") {\n            this.select = true;\n          } else {\n            this.select = false;\n          }\n        } else {\n          this.showMenu = false;\n        }\n      });\n    },\n\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    sureEditNode() {},\n    // 拖拽\n    handleDrop(draggingNode, dropNode) {\n      // 前一个兄弟节点\n      const prevNode = this.jm.find_node_before(dropNode);\n      // 获取移动后的node\n      const dragForm = {\n        modelId: \"\",\n        treeNum: !prevNode ? draggingNode : prevNode.id,\n        thisTreeNum: dropNode,\n      };\n      //console.log(\"dragForm\", dragForm);\n\n      // TODO 调接口\n    },\n\n    add_company(addnode, company) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"董事长\") {\n        axios\n          .post(\"http://localhost:8086/company\", {\n            select_name: company,\n            relation: \"董事长\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"4\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"总裁\") {\n        axios\n          .post(\"http://localhost:8086/company\", {\n            select_name: company,\n            relation: \"总裁\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"4\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"首席运营官\") {\n        axios\n          .post(\"http://localhost:8086/company\", {\n            select_name: company,\n            relation: \"首席运营官\",\n          })\n          .then((response) => {\n            //console.log(\"生产公司\" + response);\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"4\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"监事\") {\n        axios\n          .post(\"http://localhost:8086/company\", {\n            select_name: company,\n            relation: \"监事\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"4\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"董事会秘书\") {\n        axios\n          .post(\"http://localhost:8086/company\", {\n            select_name: company,\n            relation: \"董事会秘书\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"4\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"发行\") {\n        axios\n          .post(\"http://localhost:8086/faxing\", {\n            select_name: company,\n            relation: \"发行\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i].ChiName;\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                let num = 7 + this.lista[i].Stock;\n                newNode1.type = num;\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"参股公司\") {\n        axios\n          .post(\"http://localhost:8086/company\", {\n            select_name: company,\n            relation: \"参股公司\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"控股股东\") {\n         axios\n          .post(\"http://localhost:8086/company\", {\n            select_name: company,\n            relation: \"控股股东\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"大股东\") {\n        axios\n          .post(\"http://localhost:8086/gudong\", {\n            select_name: company,\n            //relation: \"大股东\",\n          })\n          .then((response) => {\n            if ((response.data.company.length ==0 || !response.data.person.length == 0) && addnode.parent.id != \"root\") {\n              console.log(response.data.company.length)\n              this.jm.remove_node(addnode.id);\n            } else {\n              console.log(response.data)\n              this.lista = response.data.person;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"4\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n              \n              this.listb = response.data.company;\n              console.log(\"b:\"+ this.listb)\n              for (var i = 0; i < this.listb.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.listb[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              \n            }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"投资\") {\n        axios\n          .post(\"http://localhost:8086/company\", {\n            select_name: company,\n            relation: \"投资\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"6\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    add_person(addnode, person) {\n      if (addnode.data && addnode.topic == \"担任董事长\") {\n        axios\n          .post(\"http://localhost:8086/person\", {\n            select_name: person,\n            relation: \"担任董事长\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            }\n            this.lista = response.data;\n            var len = this.lista.length;\n\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(\n                newNode1.id,\n                this.bgMap[newNode1.type].bgcolor,\n                this.bgMap[newNode1.type].fgcolor\n              );\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"担任总裁\") {\n        axios\n          .post(\"http://localhost:8086/person\", {\n            select_name: person,\n            relation: \"担任总裁\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"担任首席运营官\") {\n        axios\n          .post(\"http://localhost:8086/person\", {\n            select_name: person,\n            relation: \"担任首席运营官\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"担任监事\") {\n        axios\n          .post(\"http://localhost:8086/person\", {\n            select_name: person,\n            relation: \"担任监事\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"担任董事会秘书\") {\n        axios\n          .post(\"http://localhost:8086/person\", {\n            select_name: person,\n            relation: \"担任董事会秘书\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else if (addnode.topic == \"实际控制人\") {\n        axios\n          .post(\"http://localhost:8086/person\", {\n            select_name: person,\n            relation: \"实际控制人\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            } else {\n              this.lista = response.data;\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\n                let nodeid = jsMind.util.uuid.newid();\n                let topic = this.lista[i];\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n                newNode1.type = \"1\";\n                this.jm.set_node_color(\n                  newNode1.id,\n                  this.bgMap[newNode1.type].bgcolor,\n                  this.bgMap[newNode1.type].fgcolor\n                );\n              }\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else {\n        this.$message.error(\"something wrong\" + addnode.topic);\n      }\n      this.jm.collapse_node(addnode);\n    },\n    add_stock(addnode, share) {\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"发行公司\") {\n        axios\n          .post(\"http://localhost:8086/share\", {\n            select_name: share,\n            relation: \"发行公司\",\n          })\n          .then((response) => {\n            if (!response.data.length && addnode.parent.id != \"root\") {\n              this.jm.remove_node(addnode.id);\n            }\n            this.lista = response.data;\n            console.log(this.lista);\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.lista[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(\n                newNode1.id,\n                this.bgMap[newNode1.type].bgcolor,\n                this.bgMap[newNode1.type].fgcolor\n              );\n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n\n      this.showMenu = false;\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n\n      this.showMenu = false;\n    },\n    color_conditional() {\n      this.dialogVisible2 = true;\n      this.showMenu = false;\n    },\n    nodeClick() {\n      this.showMenu = false;\n      const selectedNode = this.jm.get_selected_node();\n      console.log(selectedNode.id)\n      //let newNode1 = this.jm.add_node(selectedNode, \"table1\", \"topic1\");*/\n      if (!selectedNode) return;\n      //console.log(selectedNode.type)\n      if (selectedNode.data) {\n        if (selectedNode.children.length != 0) {\n          this.jm.toggle_node(selectedNode);\n        } else if (selectedNode.type == 1) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let nodeid7 = jsMind.util.uuid.newid();\n          let nodeid8 = jsMind.util.uuid.newid();\n          let nodeid9 = jsMind.util.uuid.newid();\n          let nodeid10 = jsMind.util.uuid.newid();\n          let topic1 = \"董事长\";\n          let topic2 = \"总裁\";\n          let topic3 = \"首席运营官\";\n          let topic4 = \"监事\";\n          let topic5 = \"董事会秘书\";\n          let topic6 = \"发行\";\n          let topic7 = \"参股公司\";\n          let topic8 = \"控股股东\";\n          let topic9 = \"大股东\";\n          let topic10 = \"投资\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          let newNode7 = this.jm.add_node(selectedNode, nodeid7, topic7);\n          let newNode8 = this.jm.add_node(selectedNode, nodeid8, topic8);\n          let newNode9 = this.jm.add_node(selectedNode, nodeid9, topic9);\n          let newNode10 = this.jm.add_node(selectedNode, nodeid10, topic10);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          newNode7.type = \"3\";\n          newNode8.type = \"3\";\n          newNode9.type = \"3\";\n          newNode10.type = \"3\";\n          this.jm.set_node_color(\n            newNode1.id,\n            this.bgMap[newNode1.type].bgcolor,\n            this.bgMap[newNode1.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode2.id,\n            this.bgMap[newNode2.type].bgcolor,\n            this.bgMap[newNode2.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode3.id,\n            this.bgMap[newNode3.type].bgcolor,\n            this.bgMap[newNode3.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode4.id,\n            this.bgMap[newNode4.type].bgcolor,\n            this.bgMap[newNode4.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode5.id,\n            this.bgMap[newNode5.type].bgcolor,\n            this.bgMap[newNode5.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode6.id,\n            this.bgMap[newNode6.type].bgcolor,\n            this.bgMap[newNode6.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode7.id,\n            this.bgMap[newNode7.type].bgcolor,\n            this.bgMap[newNode7.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode8.id,\n            this.bgMap[newNode8.type].bgcolor,\n            this.bgMap[newNode8.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode9.id,\n            this.bgMap[newNode9.type].bgcolor,\n            this.bgMap[newNode9.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode10.id,\n            this.bgMap[newNode10.type].bgcolor,\n            this.bgMap[newNode10.type].fgcolor\n          );\n          this.add_company(newNode1, selectedNode.topic);\n          this.add_company(newNode2, selectedNode.topic);\n          this.add_company(newNode3, selectedNode.topic);\n          this.add_company(newNode4, selectedNode.topic);\n          this.add_company(newNode5, selectedNode.topic);\n          this.add_company(newNode6, selectedNode.topic);\n          this.add_company(newNode7, selectedNode.topic);\n          this.add_company(newNode8, selectedNode.topic);\n          this.add_company(newNode9, selectedNode.topic);\n          this.add_company(newNode10, selectedNode.topic);\n        } else if (selectedNode.type == 4) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let nodeid2 = jsMind.util.uuid.newid();\n          let nodeid3 = jsMind.util.uuid.newid();\n          let nodeid4 = jsMind.util.uuid.newid();\n          let nodeid5 = jsMind.util.uuid.newid();\n          let nodeid6 = jsMind.util.uuid.newid();\n          let topic1 = \"担任董事长\";\n          let topic2 = \"担任总裁\";\n          let topic3 = \"担任首席运营官\";\n          let topic4 = \"担任监事\";\n          let topic5 = \"担任董事会秘书\";\n          let topic6 = \"实际控制人\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          let newNode3 = this.jm.add_node(selectedNode, nodeid3, topic3);\n          let newNode4 = this.jm.add_node(selectedNode, nodeid4, topic4);\n          let newNode5 = this.jm.add_node(selectedNode, nodeid5, topic5);\n          let newNode6 = this.jm.add_node(selectedNode, nodeid6, topic6);\n          newNode1.type = \"3\";\n          newNode2.type = \"3\";\n          newNode3.type = \"3\";\n          newNode4.type = \"3\";\n          newNode5.type = \"3\";\n          newNode6.type = \"3\";\n          this.jm.set_node_color(\n            newNode1.id,\n            this.bgMap[newNode1.type].bgcolor,\n            this.bgMap[newNode1.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode2.id,\n            this.bgMap[newNode2.type].bgcolor,\n            this.bgMap[newNode2.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode3.id,\n            this.bgMap[newNode3.type].bgcolor,\n            this.bgMap[newNode3.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode4.id,\n            this.bgMap[newNode4.type].bgcolor,\n            this.bgMap[newNode4.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode5.id,\n            this.bgMap[newNode5.type].bgcolor,\n            this.bgMap[newNode5.type].fgcolor\n          );\n          this.jm.set_node_color(\n            newNode6.id,\n            this.bgMap[newNode6.type].bgcolor,\n            this.bgMap[newNode6.type].fgcolor\n          );\n          this.add_person(newNode1, selectedNode.topic);\n          this.add_person(newNode2, selectedNode.topic);\n          this.add_person(newNode3, selectedNode.topic);\n          this.add_person(newNode4, selectedNode.topic);\n          this.add_person(newNode5, selectedNode.topic);\n          this.add_person(newNode6, selectedNode.topic);\n        } else if (selectedNode.type == 5) {\n          let nodeid1 = jsMind.util.uuid.newid();\n          let topic1 = \"发行公司\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid1, topic1);\n          newNode1.type = \"3\";\n          this.jm.set_node_color(\n            newNode1.id,\n            this.bgMap[newNode1.type].bgcolor,\n            this.bgMap[newNode1.type].fgcolor\n          );\n          this.add_stock(newNode1, selectedNode.topic);\n        } else {\n          this.$message({\n            showClose: true,\n            message: \"没有\" + selectedNode.topic,\n          });\n        }\n      } else {\n        this.$message.error(\"wrong\");\n      }\n    },\n    delCard() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.remove_node(selectedNode.id);\n        // 获取数据\n        console.log(this.jm.get_data(\"node_tree\"));\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 滚轮缩放\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      e.preventDefault();\n      this.jm.resize();\n    },\n\n    // 更改颜色\n    changecolor() {\n      console.log(this.bgMap[4].bgcolor);\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, (item) =>\n        this.jm.set_node_color(\n          item.id,\n          this.bgMap[item.type || 3].bgcolor,\n          this.bgMap[item.type || 3].fgcolor\n        )\n      );\n      this.dialogVisible2 = false;\n    },\n    // 导出图片\n    screen_shot() {\n      // 去除透明度\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, (item) =>\n        this.jm.set_node_color(\n          item.id,\n          this.bgMap[item.type || 3].bgcolor,\n          this.bgMap[item.type || 3].fgcolor\n        )\n      );\n      try {\n        this.jm.screenshot.shootDownload();\n      } catch (error) {\n        console.log(error);\n      }\n      setTimeout(() => {\n        this.setColor();\n      }, 1000);\n    },\n    // 鼠标拖拽\n    mouseDrag() {\n      // 里层\n      const el = document.querySelector(\".jsmind-inner\");\n      // 选中节点\n      let selected;\n\n      el.onmousedown = (ev) => {\n        // 选中节点\n        selected = this.jm.get_selected_node();\n        // 标识 是否拖拽节点 避免冲突\n        this.dragNodeFlag = !!selected;\n\n        const disX = ev.clientX;\n        const disY = ev.clientY;\n        const originalScrollLeft = el.scrollLeft;\n        const originalScrollTop = el.scrollTop;\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\n        const originalPointerEvents = el.style[\"pointer-events\"];\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\n        el.style[\"scroll-behavior\"] = \"auto\";\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\n        document.onmousemove = (ev) => {\n          if (this.dragNodeFlag) return;\n          this.drag = false;\n          ev.preventDefault();\n          // 计算拖拽的偏移距离\n          const distanceX = ev.clientX - disX;\n          const distanceY = ev.clientY - disY;\n\n          el.scrollTo(\n            originalScrollLeft - distanceX,\n            originalScrollTop - distanceY\n          );\n\n          // 在鼠标拖动的时候将点击事件屏蔽掉\n          el.style[\"pointer-events\"] = \"none\";\n          el.style.cursor = \"grabbing\";\n        };\n        document.onmouseup = () => {\n          if (!this.dragNodeFlag) {\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\n            el.style[\"pointer-events\"] = originalPointerEvents;\n            el.style.cursor = \"grab\";\n          }\n          document.onmousemove = document.onmouseup = null;\n        };\n      };\n    },\n  },\n  mounted() {\n    this.jm = jsMind.show(this.options, this.mind);\n    this.init();\n    this.mouseWheel();\n    this.mouseDrag();\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\n  },\n};\n</script>\n\n<style lang=\"less\">\n@import \"../assets/css/style.less\";\n</style>\n"],"mappings":";AAmPA,OAAAA,IAAA;AACA,OAAAC,KAAA;AACA;EACAC,UAAA;IACAC,MAAA,EAAAH;EACA;EAEAI,KAAA;IACA,YAAAC,CAAAC,GAAA;MACA,MAAAC,IAAA,GAAAD,GAAA;MACA,KAAAE,EAAA,CAAAC,IAAA,CAAAC,OAAA,CAAAH,IAAA;IACA;IACAI,YAAAC,CAAA;MACA,KAAAC,YAAA,MAAAC,IAAA,CAAAC,IAAA,CAAAC,QAAA,EAAAC,IAAA;QACA,IAAAL,CAAA,CAAAM,MAAA;UACA,IAAAN,CAAA,CAAAO,QAAA,CAAAF,IAAA,CAAAG,IAAA;YACA,KAAAZ,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;YACA,KAAAjB,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,KAAAH,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;QACA;UACA,KAAAjB,EAAA,CAAAa,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,KAAAH,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;QACA;MACA;IACA;EACA;EACAE,QAAA;IACAC,UAAA;MACA,iBAAAR,IAAA;QACA,YAAAS,SAAA,CAAAC,MAAA,KAAAV,IAAA,GACA,KAAAS,SAAA,CAAAE,eAAA,GACA,KAAAF,SAAA,CAAAG,gBAAA;MACA;IACA;IACAC,UAAA;MACA,iBAAAb,IAAA;QACA,YAAAS,SAAA,CAAAC,MAAA,KAAAV,IAAA,GACA,KAAAS,SAAA,CAAAK,eAAA,GACA,KAAAL,SAAA,CAAAM,gBAAA;MACA;IACA;EACA;EACApB,KAAA;IACA;MACAqB,IAAA;MAEAC,KAAA;MACAC,KAAA;MACAC,MAAA;MACAC,OAAA;MAAA;MACAC,UAAA;MACAC,KAAA;MACA5B,IAAA;QACA6B,IAAA;UACAC,IAAA;UACAC,MAAA;UACAC,OAAA;QACA;QACAC,MAAA;QACAhC,IAAA;UACAO,EAAA;UACA0B,KAAA;UACA5B,IAAA;UACA6B,QAAA;UACAjC,QAAA,GACA;YACAM,EAAA;YAAA;YACA0B,KAAA;YAAA;YACAE,SAAA;YAAA;YACAD,QAAA;YAAA;YACA7B,IAAA;UACA;QAEA;MACA;;MACA+B,OAAA;QACAC,SAAA;QAAA;QACAC,QAAA;QAAA;QACAC,YAAA;QAAA;QACAC,KAAA;QAAA;QACA9C,IAAA;UACA+C,MAAA;UAAA;UACAC,OAAA;UAAA;UACAC,OAAA;UAAA;UACAC,UAAA;UAAA;UACAC,UAAA;QACA;;QACAC,MAAA;UACAC,MAAA;UAAA;UACAC,MAAA;UAAA;UACAC,MAAA;QACA;;QACAC,QAAA;UACA;UACAC,MAAA;QACA;MACA;MACA3D,IAAA;QACA4D,KAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;MACA;;MACA9C,KAAA;QACA;QACA;UACAC,OAAA;UACAC,OAAA;UACA6C,QAAA;UACA5C,WAAA;QACA;QACA;QACA;UACAF,OAAA;UACAC,OAAA;UACA6C,QAAA;UACA5C,WAAA;QACA;QACA;UACA;UACAF,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA,IACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA,GACA;UACAD,OAAA;UACAC,OAAA;QACA,GACA;UACAD,OAAA;UACAC,OAAA;QACA,EACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;QACA;UACA;UACAD,OAAA;UACAC,OAAA;QACA;MACA;MACAI,SAAA;QACAC,MAAA;QACAE,gBAAA;QACAD,eAAA;QACAI,gBAAA;QACAD,eAAA;MACA;MACAqC,aAAA;MACAC,cAAA;MACAC,cAAA;QACAnD,EAAA;QACAoD,IAAA;MACA;MAAA;MACAC,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}