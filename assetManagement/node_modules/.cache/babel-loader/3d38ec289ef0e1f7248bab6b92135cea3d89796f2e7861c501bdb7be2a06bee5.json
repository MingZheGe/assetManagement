{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar echarts = require(\"echarts\");\nexport default {\n  props: [\"title\", \"kdata\"],\n  data() {\n    return {\n      charts: null,\n      foundMatch: false\n\n      // k线配置项\n    };\n  },\n\n  watch: {\n    kdata: {\n      handler: 'init',\n      // 调用 init 方法\n      immediate: true // 在组件创建时立即调用 handler\n    }\n  },\n\n  mounted() {\n    console.log(\"我挂载了\");\n    setTimeout(() => {\n      console.log(\"出现\");\n      // 这里实现的是一个比较简单的，可以按照需求将函数移动到methods函数中\n      var data0 = splitData(this.kdata);\n      console.log(data0);\n      console.log(\"kdata在这里\");\n      console.log(this.kdata); //没传过来\n      // macd计算\n      function splitData(rawData) {\n        var categoryData = [];\n        var values = [];\n        var macds = [];\n        var difs = [];\n        var deas = [];\n        var vol = [];\n        for (var i = 0; i < rawData.length; i++) {\n          categoryData.push(rawData[i].splice(0, 1)[0]);\n          values.push(rawData[i]);\n          macds.push(rawData[i][6]);\n          difs.push(rawData[i][7]);\n          deas.push(rawData[i][8]);\n          vol.push(rawData[i][4]);\n        }\n        console.log(\"values在这里\");\n        console.log(vol);\n        return {\n          categoryData: categoryData,\n          values: values,\n          macds: macds,\n          difs: difs,\n          deas: deas,\n          vol: vol\n        };\n      }\n      // ma均线函数\n      function calculateMA(dayCount) {\n        var result = [];\n        for (var i = 0, len = data0.values.length; i < len; i++) {\n          if (i < dayCount) {\n            result.push(\"-\");\n            continue;\n          }\n          var sum = 0;\n          for (var j = 0; j < dayCount; j++) {\n            sum += data0.values[i - j][1];\n          }\n          result.push(sum / dayCount);\n        }\n        return result;\n      }\n      var foundMatch = false;\n      var foundMatch2 = false;\n      var data1 = \"\";\n      var option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\"\n          }\n        },\n        grid: [{\n          left: \"3%\",\n          top: \"0%\",\n          height: \"70%\"\n        }\n        /*\r\n        {\r\n        left: \"3%\",\r\n        right: \"10%\",\r\n        top: \"75%\",\r\n        height: \"15%\"\r\n        }\r\n        */],\n\n        xAxis: [{\n          type: \"category\",\n          data: data0.categoryData,\n          scale: true,\n          boundaryGap: false,\n          axisLabel: {\n            //this.interval\n            //  formatter: function (value, index) {\n\n            // 判断是否进行了放大缩小\n            //    if (value === data0.categoryData[index]) {\n            /*\r\n            console.log(\"疯了\")\r\n            console.log(value)\r\n            // 未进行放大缩小时，显示每个月的01号\r\n            const year = value.substr(0, 4);\r\n            const month = value.substr(4, 2);\r\n            const day = value.substr(6, 2);\r\n            // return `${year}-${month}-${day}`;\r\n            return year +  month + \"01\";\r\n            */\n            /*\r\n            } \r\n            else {\r\n            // 其他情况显示原始日期\r\n            return value;\r\n            } \r\n            return value;\r\n            },\r\n            */\n            // let foundMatch = false, // 在外部作用域定义 foundMatch 变量\n\n            interval: function (index, data) {\n              const lastTwoDigits = data.substr(-4);\n              const lastFourDigits = data.substr(-4);\n\n              // 定义要查找的后四位数字的开头\n              const targetStartsWith = [\"03\", \"06\", \"09\", \"12\"];\n              const targetStartsWith2 = [\"06\", \"09\", \"12\"];\n              if (data === data0.categoryData[index]) {\n                for (const targetStart of targetStartsWith) {\n                  if (lastFourDigits.startsWith(targetStart) && !foundMatch) {\n                    foundMatch = true; // 标记已找到匹配值\n                    data1 = data;\n                    return data;\n                  }\n                }\n                /*\r\n                if(foundMatch==true)\r\n                {\r\n                return data1\r\n                }\r\n                */\n                for (const targetStart of targetStartsWith2) {\n                  if (lastFourDigits.startsWith(targetStart) && !foundMatch2) {\n                    foundMatch2 = true; // 标记已找到匹配值\n                    return data;\n                  }\n                }\n              } else {\n                // 如果没有找到匹配的值，返回0表示不显示刻度\n                return data;\n              }\n            }\n            /*\r\n            formatter: function (value, index) {\r\n            // 显示刻度值的后四个数字\r\n            return value;\r\n            },\r\n            */\n          },\n\n          axisLine: {\n            onZero: false,\n            lineStyle: {\n              color: \"red\" //鼠标放上去动的线颜色\n            }\n          },\n\n          splitLine: {\n            show: false\n          },\n          splitNumber: 20\n        }\n        /*\r\n        {\r\n        type: \"category\",\r\n        gridIndex: 1,\r\n        data: data0.categoryData,\r\n        axisLabel: { show: false }\r\n        }\r\n        */],\n\n        yAxis: [{\n          scale: true,\n          splitArea: {\n            show: true\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"red\" //鼠标放上去动的线颜色\n            }\n          },\n\n          position: \"right\"\n        }\n        /*\r\n        {\r\n        gridIndex: 1,\r\n        splitNumber: 3,\r\n        axisLine: { onZero: false },\r\n        axisTick: { show: false },\r\n        splitLine: { show: false },\r\n        axisLabel: { show: true },\r\n        axisLine: {\r\n        lineStyle: {\r\n        color: \"red\"\r\n        }\r\n        },\r\n        position: \"right\"\r\n        }\r\n        */],\n\n        dataZoom: [{\n          type: \"inside\",\n          start: 0,\n          //100,\n          end: 100 //80\n        }, {\n          show: true,\n          type: \"slider\",\n          y: \"75%\",\n          //底下滑轮位置\n          start: 0,\n          //50,\n          end: 100\n        }, {\n          show: false,\n          xAxisIndex: [0, 1],\n          type: \"slider\",\n          start: 0,\n          //20,\n          end: 100\n        }],\n        series: [{\n          name: this.title,\n          type: \"candlestick\",\n          data: data0.values,\n          markPoint: {\n            data: [{\n              coord: [\"2023-08-01\", data0.values[data0.categoryData.indexOf(\"20211015\")]],\n              symbol: \"circle\",\n              // 标注的形状\n              symbolSize: 8,\n              // 标注的大小\n              itemStyle: {\n                color: \"red\" // 标注的颜色\n              },\n\n              label: {\n                show: true,\n                position: \"top\",\n                formatter: \"20211015\" // 标注的文本\n              }\n            }]\n          },\n\n          markLine: {\n            silent: true,\n            data: [{\n              yAxis: 2222\n            }]\n          }\n        }, {\n          name: \"MA5\",\n          type: \"line\",\n          data: calculateMA(5),\n          smooth: true,\n          lineStyle: {\n            normal: {\n              opacity: 0.5\n            }\n          }\n        }, {\n          name: \"MA10\",\n          type: \"line\",\n          data: calculateMA(10),\n          smooth: true,\n          lineStyle: {\n            normal: {\n              opacity: 0.5\n            }\n          }\n        }, {\n          name: \"MA20\",\n          type: \"line\",\n          data: calculateMA(20),\n          smooth: true,\n          lineStyle: {\n            normal: {\n              opacity: 0.5\n            }\n          }\n        }, {\n          name: \"MA30\",\n          type: \"line\",\n          data: calculateMA(30),\n          smooth: true,\n          lineStyle: {\n            normal: {\n              opacity: 0.5\n            }\n          }\n        }]\n      };\n\n      // 进行初始化\n      this.charts = echarts.init(this.$refs.echartContainer);\n      this.charts.setOption(option);\n    }, 500);\n  },\n  methods: {\n    init() {\n      this.charts = '';\n      console.log(\"我挂载了\");\n      setTimeout(() => {\n        console.log(\"出现\");\n        // 这里实现的是一个比较简单的，可以按照需求将函数移动到methods函数中\n        var data0 = splitData(this.kdata);\n        console.log(data0);\n        console.log(\"kdata在这里\");\n        console.log(this.kdata); //没传过来\n        // macd计算\n        function splitData(rawData) {\n          var categoryData = [];\n          var values = [];\n          var macds = [];\n          var difs = [];\n          var deas = [];\n          var vol = [];\n          for (var i = 0; i < rawData.length; i++) {\n            categoryData.push(rawData[i].splice(0, 1)[0]);\n            values.push(rawData[i]);\n            macds.push(rawData[i][6]);\n            difs.push(rawData[i][7]);\n            deas.push(rawData[i][8]);\n            vol.push(rawData[i][4]);\n          }\n          console.log(\"values在这里\");\n          console.log(vol);\n          return {\n            categoryData: categoryData,\n            values: values,\n            macds: macds,\n            difs: difs,\n            deas: deas,\n            vol: vol\n          };\n        }\n        // ma均线函数\n        function calculateMA(dayCount) {\n          var result = [];\n          for (var i = 0, len = data0.values.length; i < len; i++) {\n            if (i < dayCount) {\n              result.push(\"-\");\n              continue;\n            }\n            var sum = 0;\n            for (var j = 0; j < dayCount; j++) {\n              sum += data0.values[i - j][1];\n            }\n            result.push(sum / dayCount);\n          }\n          return result;\n        }\n        var foundMatch = false;\n        var foundMatch2 = false;\n        var data1 = \"\";\n        var option = {\n          tooltip: {\n            trigger: \"axis\",\n            axisPointer: {\n              type: \"cross\"\n            }\n          },\n          grid: [{\n            left: \"3%\",\n            top: \"0%\",\n            height: \"70%\"\n          }\n          /*\r\n          {\r\n          left: \"3%\",\r\n          right: \"10%\",\r\n          top: \"75%\",\r\n          height: \"15%\"\r\n          }\r\n          */],\n\n          xAxis: [{\n            type: \"category\",\n            data: data0.categoryData,\n            scale: true,\n            boundaryGap: false,\n            axisLabel: {\n              //this.interval\n              //  formatter: function (value, index) {\n\n              // 判断是否进行了放大缩小\n              //    if (value === data0.categoryData[index]) {\n              /*\r\n              console.log(\"疯了\")\r\n              console.log(value)\r\n              // 未进行放大缩小时，显示每个月的01号\r\n              const year = value.substr(0, 4);\r\n              const month = value.substr(4, 2);\r\n              const day = value.substr(6, 2);\r\n              // return `${year}-${month}-${day}`;\r\n              return year +  month + \"01\";\r\n              */\n              /*\r\n              } \r\n              else {\r\n              // 其他情况显示原始日期\r\n              return value;\r\n              } \r\n              return value;\r\n              },\r\n              */\n              // let foundMatch = false, // 在外部作用域定义 foundMatch 变量\n\n              interval: function (index, data) {\n                const lastTwoDigits = data.substr(-4);\n                const lastFourDigits = data.substr(-4);\n\n                // 定义要查找的后四位数字的开头\n                const targetStartsWith = [\"03\", \"06\", \"09\", \"12\"];\n                const targetStartsWith2 = [\"06\", \"09\", \"12\"];\n                if (data === data0.categoryData[index]) {\n                  for (const targetStart of targetStartsWith) {\n                    if (lastFourDigits.startsWith(targetStart) && !foundMatch) {\n                      foundMatch = true; // 标记已找到匹配值\n                      data1 = data;\n                      return data;\n                    }\n                  }\n                  /*\r\n                  if(foundMatch==true)\r\n                  {\r\n                  return data1\r\n                  }\r\n                  */\n                  for (const targetStart of targetStartsWith2) {\n                    if (lastFourDigits.startsWith(targetStart) && !foundMatch2) {\n                      foundMatch2 = true; // 标记已找到匹配值\n                      return data;\n                    }\n                  }\n                } else {\n                  // 如果没有找到匹配的值，返回0表示不显示刻度\n                  return data;\n                }\n              }\n              /*\r\n              formatter: function (value, index) {\r\n              // 显示刻度值的后四个数字\r\n              return value;\r\n              },\r\n              */\n            },\n\n            axisLine: {\n              onZero: false,\n              lineStyle: {\n                color: \"red\" //鼠标放上去动的线颜色\n              }\n            },\n\n            splitLine: {\n              show: false\n            },\n            splitNumber: 20\n          }\n          /*\r\n          {\r\n          type: \"category\",\r\n          gridIndex: 1,\r\n          data: data0.categoryData,\r\n          axisLabel: { show: false }\r\n          }\r\n          */],\n\n          yAxis: [{\n            scale: true,\n            splitArea: {\n              show: true\n            },\n            axisLine: {\n              lineStyle: {\n                color: \"red\" //鼠标放上去动的线颜色\n              }\n            },\n\n            position: \"right\"\n          }\n          /*\r\n          {\r\n          gridIndex: 1,\r\n          splitNumber: 3,\r\n          axisLine: { onZero: false },\r\n          axisTick: { show: false },\r\n          splitLine: { show: false },\r\n          axisLabel: { show: true },\r\n          axisLine: {\r\n          lineStyle: {\r\n          color: \"red\"\r\n          }\r\n          },\r\n          position: \"right\"\r\n          }\r\n          */],\n\n          dataZoom: [{\n            type: \"inside\",\n            start: 0,\n            //100,\n            end: 100 //80\n          }, {\n            show: true,\n            type: \"slider\",\n            y: \"75%\",\n            //底下滑轮位置\n            start: 0,\n            //50,\n            end: 100\n          }, {\n            show: false,\n            xAxisIndex: [0, 1],\n            type: \"slider\",\n            start: 0,\n            //20,\n            end: 100\n          }],\n          series: [{\n            name: this.title,\n            type: \"candlestick\",\n            data: data0.values,\n            markPoint: {\n              data: [{\n                coord: [\"2023-08-01\", data0.values[data0.categoryData.indexOf(\"20211015\")]],\n                symbol: \"circle\",\n                // 标注的形状\n                symbolSize: 8,\n                // 标注的大小\n                itemStyle: {\n                  color: \"red\" // 标注的颜色\n                },\n\n                label: {\n                  show: true,\n                  position: \"top\",\n                  formatter: \"20211015\" // 标注的文本\n                }\n              }]\n            },\n\n            markLine: {\n              silent: true,\n              data: [{\n                yAxis: 2222\n              }]\n            }\n          }, {\n            name: \"MA5\",\n            type: \"line\",\n            data: calculateMA(5),\n            smooth: true,\n            lineStyle: {\n              normal: {\n                opacity: 0.5\n              }\n            }\n          }, {\n            name: \"MA10\",\n            type: \"line\",\n            data: calculateMA(10),\n            smooth: true,\n            lineStyle: {\n              normal: {\n                opacity: 0.5\n              }\n            }\n          }, {\n            name: \"MA20\",\n            type: \"line\",\n            data: calculateMA(20),\n            smooth: true,\n            lineStyle: {\n              normal: {\n                opacity: 0.5\n              }\n            }\n          }, {\n            name: \"MA30\",\n            type: \"line\",\n            data: calculateMA(30),\n            smooth: true,\n            lineStyle: {\n              normal: {\n                opacity: 0.5\n              }\n            }\n          }]\n        };\n\n        // 进行初始化\n        this.charts = echarts.init(this.$refs.echartContainer);\n        this.charts.setOption(option);\n      }, 500);\n    },\n    interval(index, data) {\n      const lastTwoDigits = data.substr(-4);\n\n      // 判断最后两个数字是否为 \"01\"，如果是，则显示刻度\n      // return lastTwoDigits === \"01\" ? 1 : 0; // 返回1表示显示刻度，返回0表示不显}\n\n      const lastFourDigits = data.substr(-4);\n\n      // 定义要查找的后四位数字的开头\n      const targetStartsWith = [\"03\", \"06\", \"09\", \"12\"];\n\n      // 定义变量来跟踪是否已经找到匹配值\n      // let foundMatch = false;\n\n      // 循环查找，找到第一个匹配的值就返回\n      for (const targetStart of targetStartsWith) {\n        if (lastFourDigits.startsWith(targetStart) && !foundMatch) {\n          console.log(data);\n          foundMatch = true; // 标记已找到匹配值\n          return data;\n        }\n      }\n\n      // 如果没有找到匹配的值，返回0表示不显示刻度\n      return 0;\n    }\n  }\n};","map":{"version":3,"names":["echarts","require","props","data","charts","foundMatch","watch","kdata","handler","immediate","mounted","console","log","setTimeout","data0","splitData","rawData","categoryData","values","macds","difs","deas","vol","i","length","push","splice","calculateMA","dayCount","result","len","sum","j","foundMatch2","data1","option","tooltip","trigger","axisPointer","type","grid","left","top","height","xAxis","scale","boundaryGap","axisLabel","interval","index","lastTwoDigits","substr","lastFourDigits","targetStartsWith","targetStartsWith2","targetStart","startsWith","axisLine","onZero","lineStyle","color","splitLine","show","splitNumber","yAxis","splitArea","position","dataZoom","start","end","y","xAxisIndex","series","name","title","markPoint","coord","indexOf","symbol","symbolSize","itemStyle","label","formatter","markLine","silent","smooth","normal","opacity","init","$refs","echartContainer","setOption","methods"],"sources":["src/components/k2.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1 align=\"center\">{{ title }}</h1>\r\n    <div\r\n      id=\"echartContainer\"\r\n      ref=\"echartContainer\"\r\n      style=\"width: 100%; height: 400px\"\r\n    ></div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nvar echarts = require(\"echarts\");\r\nexport default {\r\n  props: [\"title\", \"kdata\"],\r\n  data() {\r\n    return {\r\n      charts: null,\r\n      foundMatch: false,\r\n\r\n      // k线配置项\r\n    };\r\n  },\r\n  watch: {\r\n    kdata: {\r\n      handler: 'init', // 调用 init 方法\r\n      immediate: true, // 在组件创建时立即调用 handler\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    console.log(\"我挂载了\");\r\n    setTimeout(() => {\r\n      console.log(\"出现\");\r\n      // 这里实现的是一个比较简单的，可以按照需求将函数移动到methods函数中\r\n      var data0 = splitData(this.kdata);\r\n      console.log(data0);\r\n      console.log(\"kdata在这里\");\r\n      console.log(this.kdata); //没传过来\r\n      // macd计算\r\n      function splitData(rawData) {\r\n        var categoryData = [];\r\n        var values = [];\r\n        var macds = [];\r\n        var difs = [];\r\n        var deas = [];\r\n        var vol = [];\r\n        for (var i = 0; i < rawData.length; i++) {\r\n          categoryData.push(rawData[i].splice(0, 1)[0]);\r\n          values.push(rawData[i]);\r\n          macds.push(rawData[i][6]);\r\n          difs.push(rawData[i][7]);\r\n          deas.push(rawData[i][8]);\r\n          vol.push(rawData[i][4]);\r\n        }\r\n        console.log(\"values在这里\");\r\n        console.log(vol);\r\n        return {\r\n          categoryData: categoryData,\r\n          values: values,\r\n          macds: macds,\r\n          difs: difs,\r\n          deas: deas,\r\n          vol: vol,\r\n        };\r\n      }\r\n      // ma均线函数\r\n      function calculateMA(dayCount) {\r\n        var result = [];\r\n        for (var i = 0, len = data0.values.length; i < len; i++) {\r\n          if (i < dayCount) {\r\n            result.push(\"-\");\r\n            continue;\r\n          }\r\n          var sum = 0;\r\n          for (var j = 0; j < dayCount; j++) {\r\n            sum += data0.values[i - j][1];\r\n          }\r\n          result.push(sum / dayCount);\r\n        }\r\n        return result;\r\n      }\r\n      var foundMatch = false;\r\n      var foundMatch2 = false;\r\n      var data1 = \"\";\r\n      var option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n          },\r\n        },\r\n        grid: [\r\n          {\r\n            left: \"3%\",\r\n            top: \"0%\",\r\n            height: \"70%\",\r\n          },\r\n          /*\r\n  {\r\n    left: \"3%\",\r\n    right: \"10%\",\r\n    top: \"75%\",\r\n    height: \"15%\"\r\n  }\r\n  */\r\n        ],\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            data: data0.categoryData,\r\n            scale: true,\r\n            boundaryGap: false,\r\n\r\n            axisLabel: {\r\n              //this.interval\r\n              //  formatter: function (value, index) {\r\n\r\n              // 判断是否进行了放大缩小\r\n              //    if (value === data0.categoryData[index]) {\r\n              /*\r\n          console.log(\"疯了\")\r\n          console.log(value)\r\n          // 未进行放大缩小时，显示每个月的01号\r\n          const year = value.substr(0, 4);\r\n        const month = value.substr(4, 2);\r\n        const day = value.substr(6, 2);\r\n       // return `${year}-${month}-${day}`;\r\n          return year +  month + \"01\";\r\n          */\r\n              /*\r\n        } \r\n        else {\r\n          // 其他情况显示原始日期\r\n          return value;\r\n        } \r\n        return value;\r\n      },\r\n      */\r\n              // let foundMatch = false, // 在外部作用域定义 foundMatch 变量\r\n\r\n              interval: function (index, data) {\r\n                const lastTwoDigits = data.substr(-4);\r\n\r\n                const lastFourDigits = data.substr(-4);\r\n\r\n                // 定义要查找的后四位数字的开头\r\n                const targetStartsWith = [\"03\", \"06\", \"09\", \"12\"];\r\n                const targetStartsWith2 = [\"06\", \"09\", \"12\"];\r\n                if (data === data0.categoryData[index]) {\r\n                  for (const targetStart of targetStartsWith) {\r\n                    if (lastFourDigits.startsWith(targetStart) && !foundMatch) {\r\n                      foundMatch = true; // 标记已找到匹配值\r\n                      data1 = data;\r\n                      return data;\r\n                    }\r\n                  }\r\n                  /*\r\nif(foundMatch==true)\r\n{\r\n  return data1\r\n}\r\n*/\r\n                  for (const targetStart of targetStartsWith2) {\r\n                    if (\r\n                      lastFourDigits.startsWith(targetStart) &&\r\n                      !foundMatch2\r\n                    ) {\r\n                      foundMatch2 = true; // 标记已找到匹配值\r\n                      return data;\r\n                    }\r\n                  }\r\n                } else {\r\n                  // 如果没有找到匹配的值，返回0表示不显示刻度\r\n                  return data;\r\n                }\r\n              },\r\n              /*\r\n    formatter: function (value, index) {\r\n        // 显示刻度值的后四个数字\r\n        return value;\r\n      },\r\n      */\r\n            },\r\n            axisLine: {\r\n              onZero: false,\r\n              lineStyle: {\r\n                color: \"red\", //鼠标放上去动的线颜色\r\n              },\r\n            },\r\n            splitLine: {\r\n              show: false,\r\n            },\r\n            splitNumber: 20,\r\n          },\r\n          /*\r\n  {\r\n    type: \"category\",\r\n    gridIndex: 1,\r\n    data: data0.categoryData,\r\n    axisLabel: { show: false }\r\n  }\r\n  */\r\n        ],\r\n        yAxis: [\r\n          {\r\n            scale: true,\r\n            splitArea: {\r\n              show: true,\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"red\", //鼠标放上去动的线颜色\r\n              },\r\n            },\r\n            position: \"right\",\r\n          },\r\n          /*\r\n  {\r\n    gridIndex: 1,\r\n    splitNumber: 3,\r\n    axisLine: { onZero: false },\r\n    axisTick: { show: false },\r\n    splitLine: { show: false },\r\n    axisLabel: { show: true },\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: \"red\"\r\n      }\r\n    },\r\n    position: \"right\"\r\n  }\r\n  */\r\n        ],\r\n        dataZoom: [\r\n          {\r\n            type: \"inside\",\r\n            start: 0, //100,\r\n            end: 100, //80\r\n          },\r\n          {\r\n            show: true,\r\n            type: \"slider\",\r\n            y: \"75%\", //底下滑轮位置\r\n            start: 0, //50,\r\n            end: 100,\r\n          },\r\n          {\r\n            show: false,\r\n            xAxisIndex: [0, 1],\r\n            type: \"slider\",\r\n            start: 0, //20,\r\n            end: 100,\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            name: this.title,\r\n            type: \"candlestick\",\r\n            data: data0.values,\r\n            markPoint: {\r\n              data: [\r\n                {\r\n                  coord: [\r\n                    \"2023-08-01\",\r\n                    data0.values[data0.categoryData.indexOf(\"20211015\")],\r\n                  ],\r\n                  symbol: \"circle\", // 标注的形状\r\n                  symbolSize: 8, // 标注的大小\r\n                  itemStyle: {\r\n                    color: \"red\", // 标注的颜色\r\n                  },\r\n                  label: {\r\n                    show: true,\r\n                    position: \"top\",\r\n                    formatter: \"20211015\", // 标注的文本\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n\r\n            markLine: {\r\n              silent: true,\r\n              data: [\r\n                {\r\n                  yAxis: 2222,\r\n                },\r\n              ],\r\n            },\r\n          },\r\n\r\n          {\r\n            name: \"MA5\",\r\n            type: \"line\",\r\n            data: calculateMA(5),\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                opacity: 0.5,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            name: \"MA10\",\r\n            type: \"line\",\r\n            data: calculateMA(10),\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                opacity: 0.5,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            name: \"MA20\",\r\n            type: \"line\",\r\n            data: calculateMA(20),\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                opacity: 0.5,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            name: \"MA30\",\r\n            type: \"line\",\r\n            data: calculateMA(30),\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                opacity: 0.5,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      // 进行初始化\r\n      this.charts = echarts.init(this.$refs.echartContainer);\r\n      this.charts.setOption(option);\r\n    }, 500);\r\n  },\r\n  methods: {\r\n    init(){\r\n        this.charts=''\r\n        console.log(\"我挂载了\");\r\n    setTimeout(() => {\r\n      console.log(\"出现\");\r\n      // 这里实现的是一个比较简单的，可以按照需求将函数移动到methods函数中\r\n      var data0 = splitData(this.kdata);\r\n      console.log(data0);\r\n      console.log(\"kdata在这里\");\r\n      console.log(this.kdata); //没传过来\r\n      // macd计算\r\n      function splitData(rawData) {\r\n        var categoryData = [];\r\n        var values = [];\r\n        var macds = [];\r\n        var difs = [];\r\n        var deas = [];\r\n        var vol = [];\r\n        for (var i = 0; i < rawData.length; i++) {\r\n          categoryData.push(rawData[i].splice(0, 1)[0]);\r\n          values.push(rawData[i]);\r\n          macds.push(rawData[i][6]);\r\n          difs.push(rawData[i][7]);\r\n          deas.push(rawData[i][8]);\r\n          vol.push(rawData[i][4]);\r\n        }\r\n        console.log(\"values在这里\");\r\n        console.log(vol);\r\n        return {\r\n          categoryData: categoryData,\r\n          values: values,\r\n          macds: macds,\r\n          difs: difs,\r\n          deas: deas,\r\n          vol: vol,\r\n        };\r\n      }\r\n      // ma均线函数\r\n      function calculateMA(dayCount) {\r\n        var result = [];\r\n        for (var i = 0, len = data0.values.length; i < len; i++) {\r\n          if (i < dayCount) {\r\n            result.push(\"-\");\r\n            continue;\r\n          }\r\n          var sum = 0;\r\n          for (var j = 0; j < dayCount; j++) {\r\n            sum += data0.values[i - j][1];\r\n          }\r\n          result.push(sum / dayCount);\r\n        }\r\n        return result;\r\n      }\r\n      var foundMatch = false;\r\n      var foundMatch2 = false;\r\n      var data1 = \"\";\r\n      var option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n          },\r\n        },\r\n        grid: [\r\n          {\r\n            left: \"3%\",\r\n            top: \"0%\",\r\n            height: \"70%\",\r\n          },\r\n          /*\r\n  {\r\n    left: \"3%\",\r\n    right: \"10%\",\r\n    top: \"75%\",\r\n    height: \"15%\"\r\n  }\r\n  */\r\n        ],\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            data: data0.categoryData,\r\n            scale: true,\r\n            boundaryGap: false,\r\n\r\n            axisLabel: {\r\n              //this.interval\r\n              //  formatter: function (value, index) {\r\n\r\n              // 判断是否进行了放大缩小\r\n              //    if (value === data0.categoryData[index]) {\r\n              /*\r\n          console.log(\"疯了\")\r\n          console.log(value)\r\n          // 未进行放大缩小时，显示每个月的01号\r\n          const year = value.substr(0, 4);\r\n        const month = value.substr(4, 2);\r\n        const day = value.substr(6, 2);\r\n       // return `${year}-${month}-${day}`;\r\n          return year +  month + \"01\";\r\n          */\r\n              /*\r\n        } \r\n        else {\r\n          // 其他情况显示原始日期\r\n          return value;\r\n        } \r\n        return value;\r\n      },\r\n      */\r\n              // let foundMatch = false, // 在外部作用域定义 foundMatch 变量\r\n\r\n              interval: function (index, data) {\r\n                const lastTwoDigits = data.substr(-4);\r\n\r\n                const lastFourDigits = data.substr(-4);\r\n\r\n                // 定义要查找的后四位数字的开头\r\n                const targetStartsWith = [\"03\", \"06\", \"09\", \"12\"];\r\n                const targetStartsWith2 = [\"06\", \"09\", \"12\"];\r\n                if (data === data0.categoryData[index]) {\r\n                  for (const targetStart of targetStartsWith) {\r\n                    if (lastFourDigits.startsWith(targetStart) && !foundMatch) {\r\n                      foundMatch = true; // 标记已找到匹配值\r\n                      data1 = data;\r\n                      return data;\r\n                    }\r\n                  }\r\n                  /*\r\nif(foundMatch==true)\r\n{\r\n  return data1\r\n}\r\n*/\r\n                  for (const targetStart of targetStartsWith2) {\r\n                    if (\r\n                      lastFourDigits.startsWith(targetStart) &&\r\n                      !foundMatch2\r\n                    ) {\r\n                      foundMatch2 = true; // 标记已找到匹配值\r\n                      return data;\r\n                    }\r\n                  }\r\n                } else {\r\n                  // 如果没有找到匹配的值，返回0表示不显示刻度\r\n                  return data;\r\n                }\r\n              },\r\n              /*\r\n    formatter: function (value, index) {\r\n        // 显示刻度值的后四个数字\r\n        return value;\r\n      },\r\n      */\r\n            },\r\n            axisLine: {\r\n              onZero: false,\r\n              lineStyle: {\r\n                color: \"red\", //鼠标放上去动的线颜色\r\n              },\r\n            },\r\n            splitLine: {\r\n              show: false,\r\n            },\r\n            splitNumber: 20,\r\n          },\r\n          /*\r\n  {\r\n    type: \"category\",\r\n    gridIndex: 1,\r\n    data: data0.categoryData,\r\n    axisLabel: { show: false }\r\n  }\r\n  */\r\n        ],\r\n        yAxis: [\r\n          {\r\n            scale: true,\r\n            splitArea: {\r\n              show: true,\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"red\", //鼠标放上去动的线颜色\r\n              },\r\n            },\r\n            position: \"right\",\r\n          },\r\n          /*\r\n  {\r\n    gridIndex: 1,\r\n    splitNumber: 3,\r\n    axisLine: { onZero: false },\r\n    axisTick: { show: false },\r\n    splitLine: { show: false },\r\n    axisLabel: { show: true },\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: \"red\"\r\n      }\r\n    },\r\n    position: \"right\"\r\n  }\r\n  */\r\n        ],\r\n        dataZoom: [\r\n          {\r\n            type: \"inside\",\r\n            start: 0, //100,\r\n            end: 100, //80\r\n          },\r\n          {\r\n            show: true,\r\n            type: \"slider\",\r\n            y: \"75%\", //底下滑轮位置\r\n            start: 0, //50,\r\n            end: 100,\r\n          },\r\n          {\r\n            show: false,\r\n            xAxisIndex: [0, 1],\r\n            type: \"slider\",\r\n            start: 0, //20,\r\n            end: 100,\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            name: this.title,\r\n            type: \"candlestick\",\r\n            data: data0.values,\r\n            markPoint: {\r\n              data: [\r\n                {\r\n                  coord: [\r\n                    \"2023-08-01\",\r\n                    data0.values[data0.categoryData.indexOf(\"20211015\")],\r\n                  ],\r\n                  symbol: \"circle\", // 标注的形状\r\n                  symbolSize: 8, // 标注的大小\r\n                  itemStyle: {\r\n                    color: \"red\", // 标注的颜色\r\n                  },\r\n                  label: {\r\n                    show: true,\r\n                    position: \"top\",\r\n                    formatter: \"20211015\", // 标注的文本\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n\r\n            markLine: {\r\n              silent: true,\r\n              data: [\r\n                {\r\n                  yAxis: 2222,\r\n                },\r\n              ],\r\n            },\r\n          },\r\n\r\n          {\r\n            name: \"MA5\",\r\n            type: \"line\",\r\n            data: calculateMA(5),\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                opacity: 0.5,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            name: \"MA10\",\r\n            type: \"line\",\r\n            data: calculateMA(10),\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                opacity: 0.5,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            name: \"MA20\",\r\n            type: \"line\",\r\n            data: calculateMA(20),\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                opacity: 0.5,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            name: \"MA30\",\r\n            type: \"line\",\r\n            data: calculateMA(30),\r\n            smooth: true,\r\n            lineStyle: {\r\n              normal: {\r\n                opacity: 0.5,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      // 进行初始化\r\n      this.charts = echarts.init(this.$refs.echartContainer);\r\n      this.charts.setOption(option);\r\n    }, 500);\r\n\r\n    },\r\n    interval(index, data) {\r\n      const lastTwoDigits = data.substr(-4);\r\n\r\n      // 判断最后两个数字是否为 \"01\"，如果是，则显示刻度\r\n      // return lastTwoDigits === \"01\" ? 1 : 0; // 返回1表示显示刻度，返回0表示不显}\r\n\r\n      const lastFourDigits = data.substr(-4);\r\n\r\n      // 定义要查找的后四位数字的开头\r\n      const targetStartsWith = [\"03\", \"06\", \"09\", \"12\"];\r\n\r\n      // 定义变量来跟踪是否已经找到匹配值\r\n      // let foundMatch = false;\r\n\r\n      // 循环查找，找到第一个匹配的值就返回\r\n      for (const targetStart of targetStartsWith) {\r\n        if (lastFourDigits.startsWith(targetStart) && !foundMatch) {\r\n          console.log(data);\r\n          foundMatch = true; // 标记已找到匹配值\r\n          return data;\r\n        }\r\n      }\r\n\r\n      // 如果没有找到匹配的值，返回0表示不显示刻度\r\n      return 0;\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n  <style scoped>\r\n</style>\r\n  "],"mappings":"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cACA;YACA;YACA;AACA;AACA;AACA;AACA;AACA;UACA;;UACAsD,QAAA;YACAC,MAAA;YACAC,SAAA;cACAC,KAAA;YACA;UACA;;UACAC,SAAA;YACAC,IAAA;UACA;UACAC,WAAA;QACA;QACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAPA,CAQA;;QACAC,KAAA,GACA;UACAnB,KAAA;UACAoB,SAAA;YACAH,IAAA;UACA;UACAL,QAAA;YACAE,SAAA;cACAC,KAAA;YACA;UACA;;UACAM,QAAA;QACA;QACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAfA,CAgBA;;QACAC,QAAA,GACA;UACA5B,IAAA;UACA6B,KAAA;UAAA;UACAC,GAAA;QACA,GACA;UACAP,IAAA;UACAvB,IAAA;UACA+B,CAAA;UAAA;UACAF,KAAA;UAAA;UACAC,GAAA;QACA,GACA;UACAP,IAAA;UACAS,UAAA;UACAhC,IAAA;UACA6B,KAAA;UAAA;UACAC,GAAA;QACA,EACA;QACAG,MAAA,GACA;UACAC,IAAA,OAAAC,KAAA;UACAnC,IAAA;UACApC,IAAA,EAAAW,KAAA,CAAAI,MAAA;UACAyD,SAAA;YACAxE,IAAA,GACA;cACAyE,KAAA,GACA,cACA9D,KAAA,CAAAI,MAAA,CAAAJ,KAAA,CAAAG,YAAA,CAAA4D,OAAA,cACA;cACAC,MAAA;cAAA;cACAC,UAAA;cAAA;cACAC,SAAA;gBACApB,KAAA;cACA;;cACAqB,KAAA;gBACAnB,IAAA;gBACAI,QAAA;gBACAgB,SAAA;cACA;YACA;UAEA;;UAEAC,QAAA;YACAC,MAAA;YACAjF,IAAA,GACA;cACA6D,KAAA;YACA;UAEA;QACA,GAEA;UACAS,IAAA;UACAlC,IAAA;UACApC,IAAA,EAAAwB,WAAA;UACA0D,MAAA;UACA1B,SAAA;YACA2B,MAAA;cACAC,OAAA;YACA;UACA;QACA,GACA;UACAd,IAAA;UACAlC,IAAA;UACApC,IAAA,EAAAwB,WAAA;UACA0D,MAAA;UACA1B,SAAA;YACA2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AA;sBACAA,UAAA;sBACA6B,KAAA,GAAA/B,IAAA;sBACA,OAAAA,IAAA;oBACA;kBACA;kBACA;AACA;AACA;AACA;AACA;AACA;kBACA,WAAAoD,WAAA,IAAAD,iBAAA;oBACA,IACAF,cAAA,CAAAI,UAAA,CAAAD,WAAA,KACA,CAAAtB,WAAA,EACA;sBACAA,WAAA;sBACA,OAAA9B,IAAA;oBACA;kBACA;gBACA;kBACA;kBACA,OAAAA,IAAA;gBACA;cACA;cACA;AACA;AACA;AACA;AACA;AACA;YACA;;YACAsD,QAAA;cACAC,MAAA;cACAC,SAAA;gBACAC,KAAA;cACA;YACA;;YACAC,SAAA;cACAC,IAAA;YACA;YACAC,WAAA;UACA;UACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAPA,CAQA;;UACAC,KAAA,GACA;YACAnB,KAAA;YACAoB,SAAA;cACAH,IAAA;YACA;YACAL,QAAA;cACAE,SAAA;gBACAC,KAAA;cACA;YACA;;YACAM,QAAA;UACA;UACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAfA,CAgBA;;UACAC,QAAA,GACA;YACA5B,IAAA;YACA6B,KAAA;YAAA;YACAC,GAAA;UACA,GACA;YACAP,IAAA;YACAvB,IAAA;YACA+B,CAAA;YAAA;YACAF,KAAA;YAAA;YACAC,GAAA;UACA,GACA;YACAP,IAAA;YACAS,UAAA;YACAhC,IAAA;YACA6B,KAAA;YAAA;YACAC,GAAA;UACA,EACA;UACAG,MAAA,GACA;YACAC,IAAA,OAAAC,KAAA;YACAnC,IAAA;YACApC,IAAA,EAAAW,KAAA,CAAAI,MAAA;YACAyD,SAAA;cACAxE,IAAA,GACA;gBACAyE,KAAA,GACA,cACA9D,KAAA,CAAAI,MAAA,CAAAJ,KAAA,CAAAG,YAAA,CAAA4D,OAAA,cACA;gBACAC,MAAA;gBAAA;gBACAC,UAAA;gBAAA;gBACAC,SAAA;kBACApB,KAAA;gBACA;;gBACAqB,KAAA;kBACAnB,IAAA;kBACAI,QAAA;kBACAgB,SAAA;gBACA;cACA;YAEA;;YAEAC,QAAA;cACAC,MAAA;cACAjF,IAAA,GACA;gBACA6D,KAAA;cACA;YAEA;UACA,GAEA;YACAS,IAAA;YACAlC,IAAA;YACApC,IAAA,EAAAwB,WAAA;YACA0D,MAAA;YACA1B,SAAA;cACA2B,MAAA;gBACAC,OAAA;cACA;YACA;UACA,GACA;YACAd,IAAA;YACAlC,IAAA;YACApC,IAAA,EAAAwB,WAAA;YACA0D,MAAA;YACA1B,SAAA;cACA2B,MAAA;gBACAC,OAAA;cACA;YACA;UACA,GACA;YACAd,IAAA;YACAlC,IAAA;YACApC,IAAA,EAAAwB,WAAA;YACA0D,MAAA;YACA1B,SAAA;cACA2B,MAAA;gBACAC,OAAA;cACA;YACA;UACA,GACA;YACAd,IAAA;YACAlC,IAAA;YACApC,IAAA,EAAAwB,WAAA;YACA0D,MAAA;YACA1B,SAAA;cACA2B,MAAA;gBACAC,OAAA;cACA;YACA;UACA;QAEA;;QAEA;QACA,KAAAnF,MAAA,GAAAJ,OAAA,CAAAwF,IAAA,MAAAC,KAAA,CAAAC,eAAA;QACA,KAAAtF,MAAA,CAAAuF,SAAA,CAAAxD,MAAA;MACA;IAEA;IACAa,SAAAC,KAAA,EAAA9C,IAAA;MACA,MAAA+C,aAAA,GAAA/C,IAAA,CAAAgD,MAAA;;MAEA;MACA;;MAEA,MAAAC,cAAA,GAAAjD,IAAA,CAAAgD,MAAA;;MAEA;MACA,MAAAE,gBAAA;;MAEA;MACA;;MAEA;MACA,WAAAE,WAAA,IAAAF,gBAAA;QACA,IAAAD,cAAA,CAAAI,UAAA,CAAAD,WAAA,MAAAlD,UAAA;UACAM,OAAA,CAAAC,GAAA,CAAAT,IAAA;UACAE,UAAA;UACA,OAAAF,IAAA;QACA;MACA;;MAEA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}