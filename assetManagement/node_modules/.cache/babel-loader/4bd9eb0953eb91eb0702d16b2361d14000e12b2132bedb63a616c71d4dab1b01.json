{"ast":null,"code":"export default {\n  computed: {\n    filteredData() {\n      const keyword = this.searchKeyword.toLowerCase();\n      return this.data.filter(item => {\n        console.log(item.name.toLowerCase().includes(keyword));\n        return item.name.toLowerCase().includes(keyword);\n        // 根据名称进行搜索过滤\n      });\n    },\n\n    list() {\n      const filterName = XEUtils.toValueString(this.filterName).trim().toLowerCase();\n      if (filterName) {\n        const filterRE = new RegExp(filterName, 'gi');\n        const options = {\n          children: 'children'\n        };\n        const searchProps = ['name', 'size', 'type', 'date'];\n        const rest = XEUtils.searchTree(this.tableData4, item => searchProps.some(key => XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1), options);\n        XEUtils.eachTree(rest, item => {\n          searchProps.forEach(key => {\n            item[key] = XEUtils.toValueString(item[key]).replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`);\n          });\n        }, options);\n        // 搜索之后默认展开所有子节点\n        this.$nextTick(() => {\n          this.$refs.xTree.setAllTreeExpand(true);\n        });\n        return rest;\n      }\n      return this.tableData4;\n    }\n  },\n  data() {\n    return {\n      filterName: '',\n      loading4: false,\n      tableData4: [],\n      tablePage4: {\n        currentPage: 1,\n        pageSize: 5,\n        pageSizes: [5, 10, 15, 20],\n        totalResult: 0\n      }\n    };\n  },\n  created() {\n    this.findList4();\n    this.tableData4 = window.MOCK_TREE_DATA_LIST;\n  },\n  methods: {\n    search() {\n      // 执行搜索操作，这里不需要写任何代码，因为 filteredData 计算属性已经自动处理了搜索过滤\n    },\n    findList4() {\n      this.loading4 = true;\n      setTimeout(() => {\n        const list = [{\n          id: 10001,\n          name: 'Test1',\n          nickname: 'T1',\n          role: 'Develop',\n          sex: '1',\n          age: 28,\n          address: 'Shenzhen'\n        }, {\n          id: 10002,\n          name: 'Test2',\n          nickname: 'T2',\n          role: 'Test',\n          sex: '0',\n          age: 22,\n          address: 'Guangzhou'\n        }, {\n          id: 10003,\n          name: 'Test3',\n          nickname: 'T3',\n          role: 'PM',\n          sex: '1',\n          age: 32,\n          address: 'Shanghai'\n        }, {\n          id: 10004,\n          name: 'Test4',\n          nickname: 'T4',\n          role: 'Designer',\n          sex: '0',\n          age: 23,\n          address: 'Shenzhen'\n        }, {\n          id: 10005,\n          name: 'Test5',\n          nickname: 'T5',\n          role: 'Develop',\n          sex: '0',\n          age: 30,\n          address: 'Shanghai'\n        }, {\n          id: 10006,\n          name: 'Test6',\n          nickname: 'T6',\n          role: 'Develop',\n          sex: '0',\n          age: 27,\n          address: 'Shanghai'\n        }, {\n          id: 10007,\n          name: 'Test7',\n          nickname: 'T1',\n          role: 'Develop',\n          sex: '1',\n          age: 28,\n          address: 'Shenzhen'\n        }, {\n          id: 10008,\n          name: 'Test8',\n          nickname: 'T2',\n          role: 'Test',\n          sex: '0',\n          age: 22,\n          address: 'Guangzhou'\n        }, {\n          id: 10009,\n          name: 'Test9',\n          nickname: 'T3',\n          role: 'PM',\n          sex: '1',\n          age: 32,\n          address: 'Shanghai'\n        }, {\n          id: 100010,\n          name: 'Test10',\n          nickname: 'T4',\n          role: 'Designer',\n          sex: '0',\n          age: 23,\n          address: 'Shenzhen'\n        }, {\n          id: 100011,\n          name: 'Test11',\n          nickname: 'T5',\n          role: 'PM',\n          sex: '0',\n          age: 35,\n          address: 'Shenzhen'\n        }, {\n          id: 100012,\n          name: 'Test12',\n          nickname: 'T6',\n          role: 'Designer',\n          sex: '1',\n          age: 25,\n          address: 'Shanghai'\n        }, {\n          id: 100013,\n          name: 'Test13',\n          nickname: 'T9',\n          role: 'Develop',\n          sex: '1',\n          age: 33,\n          address: 'Shenzhen'\n        }, {\n          id: 100014,\n          name: 'Test14',\n          nickname: 'T6',\n          role: 'Develop',\n          sex: '0',\n          age: 21,\n          address: 'Shanghai'\n        }, {\n          id: 100015,\n          name: 'Test15',\n          nickname: 'T6',\n          role: 'Develop',\n          sex: '0',\n          age: 19,\n          address: 'Shanghai'\n        }, {\n          id: 100016,\n          name: 'Test16',\n          nickname: 'T8',\n          role: 'Develop',\n          sex: '1',\n          age: 29,\n          address: 'Shenzhen'\n        }];\n        this.loading4 = false;\n        this.tablePage4.totalResult = list.length;\n        this.tableData4 = list.slice((this.tablePage4.currentPage - 1) * this.tablePage4.pageSize, this.tablePage4.currentPage * this.tablePage4.pageSize);\n      }, 300);\n    },\n    handlePageChange4({\n      currentPage,\n      pageSize\n    }) {\n      this.tablePage4.currentPage = currentPage;\n      this.tablePage4.pageSize = pageSize;\n      this.findList4();\n    },\n    getSelectEvent() {\n      const selectRecords = this.$refs.xTable4.getCheckboxRecords();\n      this.$XModal.alert(selectRecords.length);\n    },\n    getSelectReserveEvent() {\n      const selectReserveRecords = this.$refs.xTable4.getCheckboxReserveRecords();\n      this.$XModal.alert(selectReserveRecords.length);\n    }\n  }\n};","map":{"version":3,"names":["computed","filteredData","keyword","searchKeyword","toLowerCase","data","filter","item","console","log","name","includes","list","filterName","XEUtils","toValueString","trim","filterRE","RegExp","options","children","searchProps","rest","searchTree","tableData4","some","key","indexOf","eachTree","forEach","replace","match","$nextTick","$refs","xTree","setAllTreeExpand","loading4","tablePage4","currentPage","pageSize","pageSizes","totalResult","created","findList4","window","MOCK_TREE_DATA_LIST","methods","search","setTimeout","id","nickname","role","sex","age","address","length","slice","handlePageChange4","getSelectEvent","selectRecords","xTable4","getCheckboxRecords","$XModal","alert","getSelectReserveEvent","selectReserveRecords","getCheckboxReserveRecords"],"sources":["src/components/test2.vue"],"sourcesContent":["<template>\r\n    <div class=\"Table\">\r\n      <vxe-toolbar>\r\n          <template v-slot:buttons>\r\n            <vxe-input v-model=\"filterName\" type=\"search\" placeholder=\"试试全表搜索\"></vxe-input>\r\n          </template>\r\n        </vxe-toolbar>\r\n\r\n<!-- size=\"mini\"    :data=\"tableData4\"-->\r\n        <vxe-table\r\n          border\r\n          class=\"mytable-scrollbar\"\r\n          show-overflow\r\n          ref=\"xTable4\"\r\n          height=\"400\"\r\n          row-id=\"id\"\r\n          show-footer\r\n          :loading=\"loading4\"\r\n          :footer-method=\"footerMethod\"\r\n          :seq-config=\"{startIndex: (tablePage4.currentPage - 1) * tablePage4.pageSize}\"\r\n          :checkbox-config=\"{reserve: true}\"\r\n        \r\n          :data=\"tableData4\">\r\n          <vxe-table-column type=\"seq\" width=\"60\" fixed=\"left\"></vxe-table-column>\r\n          <vxe-table-column field=\"name\" title=\"Name\" width=\"300\"></vxe-table-column>\r\n          <vxe-table-column field=\"size\" title=\"size\" width=\"250\"></vxe-table-column>\r\n          <vxe-table-column field=\"age\" title=\"Age\" width=\"250\"></vxe-table-column>\r\n          <vxe-table-column field=\"role\" title=\"Role\" width=\"300\"></vxe-table-column>\r\n          <vxe-table-column field=\"address\" title=\"Address\" width=\"350\" show-overflow></vxe-table-column>\r\n        </vxe-table>\r\n\r\n        <vxe-pager\r\n          perfect\r\n          size=\"mini\"\r\n          :loading=\"loading\"\r\n          :current-page=\"tablePage4.currentPage\"\r\n          :page-size=\"tablePage4.pageSize\"\r\n          :page-sizes=\"tablePage4.pageSizes\"\r\n          :total=\"tablePage4.totalResult\"\r\n          :layouts=\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\"\r\n          @page-change=\"handlePageChange4\">\r\n        </vxe-pager>\r\n        \r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n     export default {\r\n      computed: {\r\n    filteredData() {\r\n      const keyword = this.searchKeyword.toLowerCase();\r\n      return this.data.filter(item => {\r\n        console.log(item.name.toLowerCase().includes(keyword));\r\n        return item.name.toLowerCase().includes(keyword);\r\n        // 根据名称进行搜索过滤\r\n      });\r\n    },\r\n\r\n\r\n\r\n    list () {\r\n              const filterName = XEUtils.toValueString(this.filterName).trim().toLowerCase()\r\n              if (filterName) {\r\n                const filterRE = new RegExp(filterName, 'gi')\r\n                const options = { children: 'children' }\r\n                const searchProps = ['name', 'size', 'type', 'date']\r\n                const rest = XEUtils.searchTree(this.tableData4, item => searchProps.some(key => XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1), options)\r\n                XEUtils.eachTree(rest, item => {\r\n                  searchProps.forEach(key => {\r\n                    item[key] = XEUtils.toValueString(item[key]).replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\r\n                  })\r\n                }, options)\r\n                // 搜索之后默认展开所有子节点\r\n                this.$nextTick(() => {\r\n                  this.$refs.xTree.setAllTreeExpand(true)\r\n                })\r\n                return rest\r\n              }\r\n              return this.tableData4\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n          data () {\r\n            return {\r\n              filterName: '',\r\n         \r\n              loading4: false,\r\n              tableData4: [],\r\n              tablePage4: {\r\n                currentPage: 1,\r\n                pageSize: 5,\r\n                pageSizes: [5, 10, 15, 20],\r\n                totalResult: 0\r\n              }\r\n            }\r\n          },\r\n          created () {\r\n            this.findList4();\r\n            this.tableData4 = window.MOCK_TREE_DATA_LIST;\r\n          },\r\n          methods: {\r\n            search() {\r\n      // 执行搜索操作，这里不需要写任何代码，因为 filteredData 计算属性已经自动处理了搜索过滤\r\n    },\r\n            findList4 () {\r\n              this.loading4 = true\r\n              setTimeout(() => {\r\n                const list = [\r\n                  { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: '1', age: 28, address: 'Shenzhen' },\r\n                  { id: 10002, name: 'Test2', nickname: 'T2', role: 'Test', sex: '0', age: 22, address: 'Guangzhou' },\r\n                  { id: 10003, name: 'Test3', nickname: 'T3', role: 'PM', sex: '1', age: 32, address: 'Shanghai' },\r\n                  { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: '0', age: 23, address: 'Shenzhen' },\r\n                  { id: 10005, name: 'Test5', nickname: 'T5', role: 'Develop', sex: '0', age: 30, address: 'Shanghai' },\r\n                  { id: 10006, name: 'Test6', nickname: 'T6', role: 'Develop', sex: '0', age: 27, address: 'Shanghai' },\r\n                  { id: 10007, name: 'Test7', nickname: 'T1', role: 'Develop', sex: '1', age: 28, address: 'Shenzhen' },\r\n                  { id: 10008, name: 'Test8', nickname: 'T2', role: 'Test', sex: '0', age: 22, address: 'Guangzhou' },\r\n                  { id: 10009, name: 'Test9', nickname: 'T3', role: 'PM', sex: '1', age: 32, address: 'Shanghai' },\r\n                  { id: 100010, name: 'Test10', nickname: 'T4', role: 'Designer', sex: '0', age: 23, address: 'Shenzhen' },\r\n                  { id: 100011, name: 'Test11', nickname: 'T5', role: 'PM', sex: '0', age: 35, address: 'Shenzhen' },\r\n                  { id: 100012, name: 'Test12', nickname: 'T6', role: 'Designer', sex: '1', age: 25, address: 'Shanghai' },\r\n                  { id: 100013, name: 'Test13', nickname: 'T9', role: 'Develop', sex: '1', age: 33, address: 'Shenzhen' },\r\n                  { id: 100014, name: 'Test14', nickname: 'T6', role: 'Develop', sex: '0', age: 21, address: 'Shanghai' },\r\n                  { id: 100015, name: 'Test15', nickname: 'T6', role: 'Develop', sex: '0', age: 19, address: 'Shanghai' },\r\n                  { id: 100016, name: 'Test16', nickname: 'T8', role: 'Develop', sex: '1', age: 29, address: 'Shenzhen' }\r\n                ]\r\n                this.loading4 = false\r\n                this.tablePage4.totalResult = list.length\r\n                this.tableData4 = list.slice((this.tablePage4.currentPage - 1) * this.tablePage4.pageSize, this.tablePage4.currentPage * this.tablePage4.pageSize)\r\n              }, 300)\r\n            },\r\n            handlePageChange4 ({ currentPage, pageSize }) {\r\n              this.tablePage4.currentPage = currentPage\r\n              this.tablePage4.pageSize = pageSize\r\n              this.findList4()\r\n            },\r\n            getSelectEvent () {\r\n              const selectRecords = this.$refs.xTable4.getCheckboxRecords()\r\n              this.$XModal.alert(selectRecords.length)\r\n            },\r\n            getSelectReserveEvent () {\r\n              const selectReserveRecords = this.$refs.xTable4.getCheckboxReserveRecords()\r\n              this.$XModal.alert(selectReserveRecords.length)\r\n            }\r\n          }\r\n        }\r\n    </script>\r\n    \r\n    \r\n    <style lang=\"less\">\r\n\r\n      \r\n        /*滚动条整体部分*/\r\n        .mytable-scrollbar ::-webkit-scrollbar {\r\n          width: 10px;\r\n          height: 10px;\r\n        }\r\n        /*滚动条的轨道*/\r\n        .mytable-scrollbar ::-webkit-scrollbar-track {\r\n          background-color: #FFFFFF;\r\n        }\r\n        /*滚动条里面的小方块，能向上向下移动*/\r\n        .mytable-scrollbar ::-webkit-scrollbar-thumb {\r\n          background-color: #bfbfbf;\r\n          border-radius: 5px;\r\n          border: 1px solid #F1F1F1;\r\n          box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n        }\r\n        .mytable-scrollbar ::-webkit-scrollbar-thumb:hover {\r\n          background-color: #A8A8A8;\r\n        }\r\n        .mytable-scrollbar ::-webkit-scrollbar-thumb:active {\r\n          background-color: #787878;\r\n        }\r\n        /*边角，即两个滚动条的交汇处*/\r\n        .mytable-scrollbar ::-webkit-scrollbar-corner {\r\n          background-color: #FFFFFF;\r\n        }\r\n\r\n        .keyword-lighten {\r\n          color: #000;\r\n          background-color: #FFFF00;\r\n        }\r\n        \r\n        \r\n \r\n      </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}