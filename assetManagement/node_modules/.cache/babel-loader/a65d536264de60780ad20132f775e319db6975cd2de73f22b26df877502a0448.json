{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  props: ['nodeTopic'],\n  watch: {\n    \"zoom.value\"(val) {\n      const zoom = val / 100;\n      this.jm.view.setZoom(zoom);\n      this.scrollPercent = val;\n      console.log(this.scrollPercent);\n      this.$emit('scroll', this.scrollPercent);\n    },\n    selectTypes(v) {\n      this.loopTreeData(this.mind.data.children, item => {\n        if (v.length) {\n          if (v.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, this.bgMap[item.type].fgcolor);\n        }\n      });\n    }\n  },\n  computed: {\n    pathColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.pathActiveColor : this.structure.pathOrginalColor;\n      };\n    },\n    rectColor() {\n      return function (type) {\n        return this.structure.active === type ? this.structure.rectActiveColor : this.structure.rectOrginalColor;\n      };\n    }\n  },\n  data() {\n    return {\n      scrollPercent: '',\n      //缩放百分数\n      Option: 'false',\n      testT: this.nodeTopic,\n      select: false,\n      getData: [],\n      // 根据输入值  查询到的结果  \n      remindData: [],\n      lista: [],\n      listb: [],\n      input: \"\",\n      input_select: \"\",\n      input_node: \"\",\n      mind: {\n        meta: {\n          name: \"下游产品产业链\",\n          author: \"\",\n          version: \"0.2\"\n        },\n        format: \"node_tree\",\n        data: {\n          id: \"root\",\n          topic: \"主产品\",\n          type: \"1\",\n          expanded: false\n        }\n      },\n      options: {\n        container: \"jsmind_containerTest\",\n        // [必选] 容器的ID\n        editable: true,\n        // [可选] 是否启用编辑\n        support_html: true,\n        // 是否支持节点里的HTML元素\n        theme: \"\",\n        // [可选] 主题\n        view: {\n          engine: \"svg\",\n          // 思维导图各节点之间线条的绘制引擎\n          hmargin: 120,\n          // 思维导图距容器外框的最小水平距离\n          vmargin: 50,\n          // 思维导图距容器外框的最小垂直距离\n          line_width: 1,\n          // 思维导图线条的粗细\n          line_color: \"\t#DCDCDC\" // 思维导图线条的颜色\n        },\n\n        layout: {\n          hspace: 120,\n          // 节点之间的水平间距\n          vspace: 25,\n          // 节点之间的垂直间距\n          pspace: 14 // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\n        },\n\n        shortcut: {\n          // 禁用快捷键\n          enable: false\n        }\n      },\n      zoom: {\n        value: 100,\n        // 层级大小\n        min: 10,\n        // 最小层级\n        max: 400 // 最大层级\n      },\n\n      bgMap: {\n        //公司\n        1: {\n          bgcolor: \"#0014B7 \",\n          fgcolor: \" #fff\",\n          original: \"rgb(25, 144, 255)\",\n          transparent: \"rgb(25, 144, 255, 0.2)\"\n        },\n        //产品\n        2: {\n          bgcolor: \"#A16222\",\n          fgcolor: \"#fff\",\n          original: \"rgb(100, 201, 53)\",\n          transparent: \"rgb(100, 201, 53, 0.2)\"\n        },\n        3: {\n          //其他\n          bgcolor: \" \",\n          fgcolor: \"#000\"\n        }\n      },\n      structure: {\n        active: \"right\",\n        pathOrginalColor: \"#2B2F36\",\n        pathActiveColor: \"#3370FF\",\n        rectOrginalColor: \"#C3C6CB\",\n        rectActiveColor: \"#BACEFD\"\n      },\n      dialogVisible: false,\n      dialogVisible2: false,\n      moredia: false,\n      drawer: false,\n      drawerinfo: {\n        title: null,\n        shouxi: null,\n        dongshi: null,\n        share: null,\n        businessMajor: null,\n        totalMV: null\n      },\n      tableData: null,\n      selectNodeInfo: {\n        id: null,\n        Name: \"\"\n      },\n      // 选中节点信息\n      tempNodeInfo: null,\n      // 保存修改之前的信息\n      createType: \"\",\n      // 添加平级or子级\n      showMenu: false,\n      // 是否显示右键菜单栏\n      menuStyle: {\n        top: \"\",\n        bottom: \"\",\n        left: \"\",\n        right: \"\"\n      },\n      typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]),\n      // 选中types Set\n      selectTypes: [\"1\", \"2\", \"3\", \"4\"] // 选中types Array\n    };\n  },\n\n  methods: {\n    querySearch(queryString, cb) {\n      console.log(queryString);\n      this.remindData = [];\n      if (this.input !== \"\") {\n        axios.post(\"http://localhost:8087//ProductTiShi\", {\n          select_name: queryString\n        }).then(response => {\n          console.log(\"finish\");\n          this.getData = response.data;\n          this.getData.forEach(item => {\n            let obj = {\n              value: \"\"\n            };\n            obj.value = item;\n            this.remindData.push(obj);\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n        let nameTipsArray = this.remindData;\n        // 调用 callback 返回建议列表的数据\n        cb(nameTipsArray);\n      }\n    },\n    handleSelect(item) {\n      console.log(item);\n      this.input = item.value;\n    },\n    search() {\n      // this.jm.show(this.mind);\n      this.jm.update_node(\"root\", this.testT);\n      const selectedNode1 = this.jm.get_node(\"root1\");\n      const selectedNode2 = this.jm.get_node(\"root2\");\n      if (selectedNode1.children.length != 0 || selectedNode2.children.length != 0) {\n        this.jm.remove_node(selectedNode1);\n        this.jm.remove_node(selectedNode2);\n        let nodeid = \"root1\";\n        let topic = \"下游产品\";\n        let nodeid2 = \"root2\";\n        let topic2 = \"公司\";\n        let newNode1 = this.jm.add_node(\"root\", nodeid, topic);\n        newNode1.type = \"3\";\n        this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n        let newNode2 = this.jm.add_node(\"root\", nodeid2, topic2);\n        newNode2.type = \"3\";\n        this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n\n        //this.add(newNode2, this.input);\n      }\n\n      const selectedNode1_ = this.jm.get_node(\"root1\");\n      const selectedNode2_ = this.jm.get_node(\"root2\");\n      this.add(selectedNode1_, this.input);\n      this.add(selectedNode2_, this.input);\n    },\n    //删除子节点\n    delChild(node) {\n      if (node.children.length != 0) {\n        console.log(node.children);\n        let len = node.children.length;\n        for (var deli = 0; deli < len;) {\n          console.log(node.children[0]);\n          this.jm.remove_node(node.children[0]);\n          deli = deli + 1;\n        }\n      }\n    },\n    // 重置视图\n    reset() {\n      document.querySelector(\".root\").scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\"\n      });\n    },\n    // 缩小\n    zoomOut() {\n      this.jm.view.zoomOut();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 放大\n    zoomIn() {\n      this.jm.view.zoomIn();\n      this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\n    },\n    // 循环树结构\n    loopTreeData(list, callback) {\n      (function doOneFloor(list) {\n        if (Array.isArray(list)) {\n          for (let i = 0; i < list.length; i++) {\n            const item = list[i];\n            callback(item, i);\n            if (item.children && item.children.length > 0) {\n              doOneFloor(item.children);\n            }\n          }\n        }\n      })(list);\n    },\n    // 设置背景颜色\n    setColor() {\n      this.jm.set_node_color(\"root\", this.bgMap[2].bgcolor, this.bgMap[2].fgcolor);\n      this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\n      this.loopTreeData(this.mind.data.children, item => {\n        if (this.selectTypes.length) {\n          if (this.selectTypes.includes(item.type)) {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor);\n          } else {\n            this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n          }\n        } else {\n          this.jm.set_node_color(item.id, this.bgMap[item.type].transparent, \"#fff\");\n        }\n      });\n    },\n    // 初始化配置\n    init() {\n      console.log(\"传到主界面的根：\" + this.nodeTopic);\n      this.jm.view.minZoom = 0.1;\n      this.jm.view.maxZoom = 5;\n      //this.jm.expand_all();\n      let nodeid = \"root1\";\n      let topic = \"下游产品\";\n      let nodeid2 = \"root2\";\n      let topic2 = \"公司\";\n      let newNode1 = this.jm.add_node(\"root\", nodeid, topic);\n      newNode1.type = \"3\";\n      this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n      let newNode2 = this.jm.add_node(\"root\", nodeid2, topic2);\n      newNode2.type = \"3\";\n      this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n      this.setColor();\n\n      //右键菜单\n      this.jm.view.add_event(this.editor, \"contextmenu\", e => {\n        console.log(\"A\");\n        const selectedNode = this.jm.get_selected_node();\n        console.log(selectedNode);\n        if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\n          e.preventDefault();\n          const el = document.querySelector(\".context-menu .el-menu-item\");\n          const width = parseFloat(window.getComputedStyle(el).width);\n          const height = parseFloat(window.getComputedStyle(el).height) * 3 + 12;\n          const windowHeight = window.innerHeight;\n          const windowWidth = window.innerWidth;\n\n          // 极限位置 避免越界\n          if (e.clientY + height > windowHeight) {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = \"unset\";\n            this.menuStyle.bottom = 0;\n          } else if (e.clientX + width > windowWidth) {\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.left = \"unset\";\n            this.menuStyle.right = 0;\n          } else {\n            this.menuStyle.left = e.clientX + \"px\";\n            this.menuStyle.top = e.clientY + \"px\";\n            this.menuStyle.bottom = \"unset\";\n          }\n          this.showMenu = true;\n          if (selectedNode.topic == \"下游产品\") {\n            this.select = true;\n          } else {\n            this.select = false;\n          }\n        } else {\n          this.showMenu = false;\n        }\n      });\n      this.search();\n      this.add(newNode1, this.testT);\n      this.add(newNode2, this.testT);\n      // this.reset();\n    },\n\n    // 获取选中标签的 ID\n    get_selected_nodeid() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode) {\n        return selectedNode.id;\n      } else {\n        return null;\n      }\n    },\n    sureEditNode() {\n      return;\n    },\n    // 拖拽\n    handleDrop(draggingNode, dropNode) {\n      // 前一个兄弟节点\n      const prevNode = this.jm.find_node_before(dropNode);\n      // 获取移动后的node\n      const dragForm = {\n        modelId: \"\",\n        treeNum: !prevNode ? draggingNode : prevNode.id,\n        thisTreeNum: dropNode\n      };\n      //console.log(\"dragForm\", dragForm);\n\n      // TODO 调接口\n    },\n\n    add(addnode, product) {\n      console.log(addnode);\n      console.log(product);\n      //console.log(addnode);\n      if (addnode.data && addnode.topic == \"下游产品\") {\n        axios.post(\"http://localhost:8087/xiayou\", {\n          select_name: product,\n          relation: \"下游产品\"\n        }).then(response => {\n          /*\r\n          if (!response.data.length) {\r\n          this.$message({\r\n            showClose: true,\r\n            message: \"没有下游产品\",\r\n          });\r\n          }\r\n          */\n          this.lista = response.data;\n          console.log(this.lista);\n          for (var i = 0; i < this.lista.length && i < 12; i++) {\n            let nodeid = jsMind.util.uuid.newid();\n            let topic = this.lista[i];\n            let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n            newNode1.type = \"2\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          }\n          if (this.lista.length > 12) {\n            this.lista = this.lista.slice(12);\n            let nodeid = \"more\" + jsMind.util.uuid.newid();\n            let len = this.lista.length;\n            let newNode1 = this.jm.add_node(addnode, nodeid, \"更多: \" + len, this.lista);\n            console.log(newNode1);\n            newNode1.type = \"2\";\n            this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            console.log(newNode1.id);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (addnode.topic == \"公司\") {\n        axios.post(\"http://localhost:8087/company_product\", {\n          select_name: product,\n          relation: \"生产公司\"\n        }).then(response => {\n          //console.log(\"生产公司\" + response);\n          if (!response.data.length) {\n            /*\r\n            this.$message({\r\n              showClose: true,\r\n              message: \"没有所属公司\",\r\n            });\r\n            */\n          } else {\n            this.listb = response.data;\n            for (var i = 0; i < this.listb.length && i < 12; i++) {\n              let nodeid = jsMind.util.uuid.newid();\n              let topic = this.listb[i];\n              let newNode1 = this.jm.add_node(addnode, nodeid, topic);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n            }\n            if (this.listb.length > 12) {\n              this.listb = this.listb.slice(12);\n              let nodeid = \"more\" + jsMind.util.uuid.newid();\n              let len = this.listb.length;\n              let newNode1 = this.jm.add_node(addnode, nodeid, \"更多: \" + len, this.listb);\n              console.log(newNode1);\n              newNode1.type = \"1\";\n              this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n              console.log(newNode1.id);\n            }\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        this.$message.error(\"something wrong\");\n      }\n      this.jm.collapse_node(addnode);\n      this.reset();\n    },\n    query_conditional() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        this.dialogVisible = true;\n        this.input_node = selectedNode;\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    conditional_query() {\n      const selectedNode = this.input_node;\n      this.dialogVisible = false;\n      this.delChild(selectedNode);\n      const node = selectedNode.parent;\n      axios.post(\"http://localhost:8087/mohu\", {\n        select_name: node.topic,\n        shaixuan: this.input_select\n      }).then(response => {\n        if (!response.data.length) {\n          this.$message({\n            showClose: true,\n            message: \"没有相关产品\"\n          });\n        }\n        this.lista = response.data;\n        var len = this.lista.length;\n        for (var i = 0; i < this.lista.length && i < 12; i++) {\n          let nodeid = jsMind.util.uuid.newid();\n          let topic = this.lista[i];\n          let newNode1 = this.jm.add_node(selectedNode, nodeid, topic);\n          newNode1.type = \"2\";\n          newNode1.expanded = \"false\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n        }\n        if (len > 12) {\n          this.lista = this.lista.slice(12);\n          let nodeid = \"more\" + jsMind.util.uuid.newid();\n          let len = this.lista.length;\n          let newNode1 = this.jm.add_node(selectedNode, nodeid, \"更多: \" + len, this.lista);\n          console.log(newNode1);\n          newNode1.type = \"2\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          console.log(newNode1.id);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    nodeClick() {\n      this.showMenu = false;\n      const selectedNode = this.jm.get_selected_node();\n      if (!selectedNode) {\n        return;\n      }\n      if (!!selectedNode.data) {\n        if (selectedNode.children.length != 0) {\n          this.jm.toggle_node(selectedNode);\n        } else if (selectedNode.topic.indexOf(\"|\") != -1) {\n          console.log(selectedNode.topic);\n          axios.post(\"http://localhost:8086/info\", {\n            select_name: selectedNode.topic\n          }).then(response => {\n            if (!response.data.length) {}\n            console.log(response.data);\n            console.log(response.data);\n            this.drawerinfo.title = selectedNode.topic;\n            this.drawerinfo.businessMajor = response.data.businessMajor;\n            this.drawerinfo.dongshi = response.data.dongshi + \"\";\n            this.drawerinfo.share = response.data.share.replace(/]/g, \"] \\n\");\n            this.drawerinfo.shouxi = response.data.shouxi + \"\";\n            this.drawerinfo.totalMV = response.data.total + \"亿元\";\n          }).catch(function (error) {\n            console.log(error);\n          });\n          //    this.drawer = true;\n          this.Option = true;\n          this.$emit('drawerOption', Option, selectedNode.topic);\n        } else if (selectedNode.id.indexOf(\"more\") != -1) {\n          console.log(\"more\");\n          console.log(selectedNode.data);\n          this.tableData = new Array();\n          for (let i = 0; i < selectedNode.data.length; i++) {\n            let obj = {};\n            obj.name = selectedNode.data[i];\n            this.tableData.push(obj);\n          }\n          console.log(this.tableData);\n          this.moredia = true;\n        } else if (\n        //没有子节点，产品\n        selectedNode.topic != \"下游产品\" && selectedNode.topic.indexOf(\"公司\") == -1) {\n          let nodeid = jsMind.util.uuid.newid();\n          let topic = \"下游产品\";\n          let nodeid2 = jsMind.util.uuid.newid();\n          let topic2 = \"公司\";\n          let newNode1 = this.jm.add_node(selectedNode, nodeid, topic);\n          newNode1.type = \"3\";\n          this.jm.set_node_color(newNode1.id, this.bgMap[newNode1.type].bgcolor, this.bgMap[newNode1.type].fgcolor);\n          let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\n          newNode2.type = \"3\";\n          this.jm.set_node_color(newNode2.id, this.bgMap[newNode2.type].bgcolor, this.bgMap[newNode2.type].fgcolor);\n          let parent = newNode1.parent;\n          this.add(newNode1, parent.topic);\n          let parent2 = newNode2.parent;\n          this.add(newNode2, parent2.topic);\n        } else {\n          //没有子节点，下游产品或公司\n          if (selectedNode.topic == \"下游产品\" || selectedNode.topic == \"公司\") {\n            if (selectedNode.topic == \"公司\") {\n              this.$message({\n                showClose: true,\n                message: \"没有所属公司\"\n              });\n            }\n            if (selectedNode.topic == \"下游产品\") {\n              this.$message({\n                showClose: true,\n                message: \"没有所属下游产品\"\n              });\n            }\n            let parent = selectedNode.parent;\n            this.add(selectedNode, parent.topic);\n          } else {\n            this.$message.error(\"无\" + selectedNode.topic);\n          }\n        }\n      } else {\n        this.$message.error(\"wrong\");\n      }\n    },\n    delCard() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.remove_node(selectedNode.id);\n        // 获取数据\n        console.log(this.jm.get_data(\"node_tree\"));\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    setcolor2() {\n      const selectedNode = this.jm.get_selected_node();\n      if (selectedNode.data) {\n        // TODO\n        this.jm.set_node_color(selectedNode.id, \"#3E241A\", \"#1F1815\");\n        // 获取数据\n      } else {\n        this.$message.error(\"请选择卡片\");\n      }\n      this.showMenu = false;\n    },\n    // 鼠标滚轮放大缩小\n    mouseWheel() {\n      if (document.addEventListener) {\n        document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\n      }\n      this.$refs.container.onmousewheel = this.scrollFunc;\n    },\n    // 滚轮缩放\n    scrollFunc(e) {\n      e = e || window.event;\n      if (e.wheelDelta) {\n        if (e.wheelDelta > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      } else if (e.detail) {\n        if (e.detail > 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n      e.preventDefault();\n      this.jm.resize();\n    },\n    color_conditional() {\n      this.dialogVisible2 = true;\n      this.showMenu = false;\n    },\n    changecolor() {\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor));\n      this.dialogVisible2 = false;\n    },\n    closemore() {\n      this.moredia = false;\n    },\n    // 导出图片\n    screen_shot() {\n      // 去除透明度\n      const node = this.jm.get_node(\"root\");\n      this.loopTreeData(node.children, item => this.jm.set_node_color(item.id, this.bgMap[item.type].bgcolor, this.bgMap[item.type].fgcolor));\n      try {\n        this.jm.screenshot.shootDownload();\n      } catch (error) {\n        console.log(error);\n      }\n      setTimeout(() => {\n        this.setColor();\n      }, 1000);\n    },\n    // 鼠标拖拽\n    mouseDrag() {\n      // 里层\n      const el = document.querySelector(\".jsmind-inner\");\n      // 选中节点\n      let selected;\n      el.onmousedown = ev => {\n        // 选中节点\n        selected = this.jm.get_selected_node();\n        // 标识 是否拖拽节点 避免冲突\n        this.dragNodeFlag = !!selected;\n        const disX = ev.clientX;\n        const disY = ev.clientY;\n        const originalScrollLeft = el.scrollLeft;\n        const originalScrollTop = el.scrollTop;\n        const originalScrollBehavior = el.style[\"scroll-behavior\"];\n        const originalPointerEvents = el.style[\"pointer-events\"];\n        // auto: 默认值，表示滚动框立即滚动到指定位置。\n        el.style[\"scroll-behavior\"] = \"auto\";\n        // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\n        document.onmousemove = ev => {\n          if (this.dragNodeFlag) return;\n          this.drag = false;\n          ev.preventDefault();\n          // 计算拖拽的偏移距离\n          const distanceX = ev.clientX - disX;\n          const distanceY = ev.clientY - disY;\n          el.scrollTo(originalScrollLeft - distanceX, originalScrollTop - distanceY);\n\n          // 在鼠标拖动的时候将点击事件屏蔽掉\n          el.style[\"pointer-events\"] = \"none\";\n          el.style.cursor = \"grabbing\";\n        };\n        document.onmouseup = () => {\n          if (!this.dragNodeFlag) {\n            el.style[\"scroll-behavior\"] = originalScrollBehavior;\n            el.style[\"pointer-events\"] = originalPointerEvents;\n            el.style.cursor = \"grab\";\n          }\n          document.onmousemove = document.onmouseup = null;\n        };\n      };\n    }\n  },\n  mounted() {\n    this.jm = jsMind.show(this.options, this.mind);\n    this.$emit('getJM', this.jm); //传给父组件jm\n    this.init();\n    this.mouseWheel();\n    this.mouseDrag();\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\n  }\n};","map":{"version":3,"names":["axios","props","watch","zoom.value","val","zoom","jm","view","setZoom","scrollPercent","console","log","$emit","selectTypes","v","loopTreeData","mind","data","children","item","length","includes","type","set_node_color","id","bgMap","bgcolor","fgcolor","transparent","computed","pathColor","structure","active","pathActiveColor","pathOrginalColor","rectColor","rectActiveColor","rectOrginalColor","Option","testT","nodeTopic","select","getData","remindData","lista","listb","input","input_select","input_node","meta","name","author","version","format","topic","expanded","options","container","editable","support_html","theme","engine","hmargin","vmargin","line_width","line_color","layout","hspace","vspace","pspace","shortcut","enable","value","min","max","original","dialogVisible","dialogVisible2","moredia","drawer","drawerinfo","title","shouxi","dongshi","share","businessMajor","totalMV","tableData","selectNodeInfo","Name","tempNodeInfo","createType","showMenu","menuStyle","top","bottom","left","right","typeQueue","Set","methods","querySearch","queryString","cb","post","select_name","then","response","forEach","obj","push","catch","error","nameTipsArray","handleSelect","search","update_node","selectedNode1","get_node","selectedNode2","remove_node","nodeid","nodeid2","topic2","newNode1","add_node","newNode2","selectedNode1_","selectedNode2_","add","delChild","node","len","deli","reset","document","querySelector","scrollIntoView","block","behavior","zoomOut","parseInt","actualZoom","zoomIn","list","callback","doOneFloor","Array","isArray","i","setColor","set_node_font_style","init","minZoom","maxZoom","add_event","editor","e","selectedNode","get_selected_node","preventDefault","el","width","parseFloat","window","getComputedStyle","height","windowHeight","innerHeight","windowWidth","innerWidth","clientY","clientX","get_selected_nodeid","sureEditNode","handleDrop","draggingNode","dropNode","prevNode","find_node_before","dragForm","modelId","treeNum","thisTreeNum","addnode","product","relation","jsMind","util","uuid","newid","slice","$message","collapse_node","query_conditional","conditional_query","parent","shaixuan","showClose","message","nodeClick","toggle_node","indexOf","replace","total","parent2","delCard","get_data","setcolor2","mouseWheel","addEventListener","scrollFunc","$refs","onmousewheel","event","wheelDelta","detail","resize","color_conditional","changecolor","closemore","screen_shot","screenshot","shootDownload","setTimeout","mouseDrag","selected","onmousedown","ev","dragNodeFlag","disX","disY","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","originalScrollBehavior","style","originalPointerEvents","onmousemove","drag","distanceX","distanceY","scrollTo","cursor","onmouseup","mounted","show","beforeDestroy","removeEventListener"],"sources":["src/views/query4.vue"],"sourcesContent":["<template>\r\n    <div class=\"jsmindTest\" style=\"white-space:pre-line\">\r\n\r\n          <!--\r\n      <el-drawer title=\"我是标题\" :visible.sync=\"drawer\" :with-header=\"false\">\r\n        <span\r\n          style=\"\r\n            display: inline-block;\r\n            font-weight: bold;\r\n            font-size: 25px;\r\n            margin: 10px 10px;\r\n          \"\r\n          >{{ drawerinfo.title }}</span\r\n        >\r\n  \r\n        <el-descriptions :column=\"1\" border=\"true\">\r\n          <el-descriptions-item\r\n            label=\"董事长/实际控制人\"\r\n            :contentStyle=\"{ 'text-align': 'left', 'font-size': '15px' }\"\r\n            :labelStyle=\"{ width: '100px', 'font-size': '15px' }\"\r\n            >{{ drawerinfo.dongshi }}</el-descriptions-item\r\n          >\r\n      \r\n          <el-descriptions-item\r\n            label=\"主营信息\"\r\n            :contentStyle=\"{ 'text-align': 'left', 'font-size': '15px' }\"\r\n            :labelStyle=\"{ width: '100px', 'font-size': '15px' }\"\r\n            >{{ drawerinfo.businessMajor }}</el-descriptions-item\r\n          >\r\n          <el-descriptions-item\r\n            label=\"市值\"\r\n            :contentStyle=\"{ 'text-align': 'left', 'font-size': '15px' }\"\r\n            :labelStyle=\"{ width: '100px', 'font-size': '15px' }\"\r\n            >{{ drawerinfo.totalMV }}</el-descriptions-item\r\n          >\r\n          <el-descriptions-item\r\n            label=\"发行股票\"\r\n            :contentStyle=\"{ 'text-align': 'left', 'font-size': '15px' }\"\r\n            :labelStyle=\"{ width: '100px', 'font-size': '15px' }\"\r\n            >{{ drawerinfo.share }}</el-descriptions-item\r\n          >\r\n        </el-descriptions>\r\n      </el-drawer>\r\n\r\n    -->\r\n\r\n      <!-- 右上角菜单 -->\r\n   <!--\r\n      <div class=\"toolbar\">\r\n        <ul class=\"toolbar-list\">\r\n          <li class=\"item\">\r\n            <span\r\n              size=\"16\"\r\n              class=\"percent\"\r\n              style=\"font-size: 14px; color: rgb(29, 29, 31)\"\r\n              @click=\"zoom.value = 100\"\r\n              >{{ zoom.value }}%\r\n            </span>\r\n            <div class=\"scale-slide\">\r\n              <ul>\r\n                <li class=\"normal-item\" title=\"缩小\" @click=\"zoomOut\">\r\n                  <svg\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-5.66 1.22a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7zM4.76 6.6h5.12c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36z\"\r\n                      fill=\"#2B2F36\"\r\n                      fill-rule=\"nonzero\"\r\n                    ></path>\r\n                  </svg>\r\n                </li>\r\n  \r\n                <li class=\"slider\">\r\n                  <el-slider\r\n                    v-model=\"zoom.value\"\r\n                    :show-tooltip=\"false\"\r\n                    :min=\"zoom.min\"\r\n                    :max=\"zoom.max\"\r\n                  ></el-slider>\r\n                </li>\r\n  \r\n                <li class=\"normal-item\" title=\"画布放大\" @click=\"zoomIn\">\r\n                  <svg\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M12.98 11.95l2.91 2.9c.15.15.15.38 0 .53l-.51.51a.37.37 0 01-.52 0L11.95 13a7.32 7.32 0 111.03-1.03zm-6.4-5.36V4.76c0-.2.17-.37.37-.37h.73c.2 0 .37.16.37.37v1.83h1.83c.2 0 .37.16.37.36v.73c0 .2-.17.37-.37.37H8.05v1.83c0 .2-.16.37-.37.37h-.73a.37.37 0 01-.36-.37V8.05H4.76a.37.37 0 01-.37-.37v-.73c0-.2.16-.36.37-.36h1.83zm.74 6.58a5.85 5.85 0 100-11.7 5.85 5.85 0 000 11.7z\"\r\n                      fill=\"#2B2F36\"\r\n                      fill-rule=\"nonzero\"\r\n                    ></path>\r\n                  </svg>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <div class=\"layout item\" @click=\"color_conditional\">\r\n            <svg\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M12.56 4.06c1.41 0 2.8.28 4.05.8l-.99 1.21a9.3 9.3 0 00-2.67-.5l-.4-.01h-.43a9.14 9.14 0 00-5.28 2c-.72.61-1.3 1.32-1.69 2.09a5.1 5.1 0 000 4.82c.39.74.95 1.41 1.68 2 .73.59 1.59 1.06 2.55 1.39a9.75 9.75 0 004.5.42l.44-.06.53-.11.06-.02c.07-.03.14-.1.2-.2a.8.8 0 00.1-.47l-.03-.12-.03-.1-.05-.22a3.32 3.32 0 01.46-2.53c.52-.8 1.36-1.3 2.27-1.36H19.45l.1-.01c.48-.07.87-.53.96-1.1l.02-.14v-.25l-.02-.22-.05-.29a5.6 5.6 0 00-1.13-2.4l.96-1.2a7.08 7.08 0 011.63 3.34l.06.34.04.34v.37c-.08 1.45-1.12 2.6-2.4 2.7H18.02c-.48 0-.94.26-1.23.7-.22.34-.32.75-.28 1.16l.02.18.07.27a2.3 2.3 0 01-.2 1.75c-.24.41-.6.72-1 .86l-.17.05-.57.12c-.42.08-.84.13-1.26.16l-.42.03h-.44c-1.26 0-2.5-.2-3.65-.6a9.85 9.85 0 01-3-1.63 7.91 7.91 0 01-2.07-2.47 6.58 6.58 0 010-6.19A8.24 8.24 0 015.9 6.42a9.85 9.85 0 013-1.72c.92-.32 1.86-.53 2.81-.6l.41-.02.43-.01h.02zM7.4 12.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm12.29-9.01a.5.5 0 01.63-.13l.07.05.4.31c.18.16.23.42.12.63l-.05.08-7.69 9.6-1.14.51a.2.2 0 01-.28-.17v-.05L12 13l7.69-9.61zM8.4 8.4a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2zm4.2-1.5a1.1 1.1 0 110 2.2 1.1 1.1 0 010-2.2z\"\r\n                fill=\"#2B2F36\"\r\n                fill-rule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n          <div\r\n            class=\"reset item normal-item\"\r\n            title=\"定位到中心主题\"\r\n            @click=\"reset\"\r\n          >\r\n            <svg\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 16 16\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M.77 0h3.46c.21 0 .38.17.38.38v.77c0 .22-.17.39-.38.39h-2.7v2.7c0 .2-.16.38-.38.38H.38A.38.38 0 010 4.23V.77C0 .34.34 0 .77 0zm14.45 16h-3.46a.38.38 0 01-.38-.39v-.76c0-.22.17-.39.38-.39h2.7v-2.7c0-.2.17-.38.38-.38h.77c.21 0 .38.18.38.39v3.46c0 .43-.34.77-.77.77zM0 15.23v-3.46c0-.21.17-.39.38-.39h.77c.22 0 .39.18.39.39v2.7h2.69c.21 0 .38.16.38.38v.77c0 .2-.17.38-.38.38H.77a.77.77 0 01-.77-.77zM16 .78v3.46c0 .21-.17.38-.38.38h-.77a.38.38 0 01-.39-.38v-2.7h-2.69a.38.38 0 01-.38-.38V.4c0-.2.17-.38.38-.38h3.46c.43 0 .77.34.77.77zm-8 9.99a2.77 2.77 0 110-5.54 2.77 2.77 0 010 5.54z\"\r\n                fill=\"#2B2F36\"\r\n                fill-rule=\"nonzero\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n\r\n-->\r\n\r\n\r\n      <div class=\"top-bar\">\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"10\" :offset=\"6\">\r\n            <el-autocomplete\r\n              v-model=\"input\"\r\n              :popper-append-to-body=\"false\"\r\n              placeholder=\"请输入查询产品名称\"\r\n              size=\"medium\"\r\n              label-width=400px\r\n              :fetch-suggestions=\"querySearch\"\r\n              @select=\"handleSelect\"\r\n            ></el-autocomplete>\r\n          </el-col>\r\n\r\n          <el-col :span=\"3\">\r\n            <el-button type=\"primary\" @click=\"search\">查 询</el-button></el-col\r\n          >\r\n          <el-col :span=\"3\" :offset=\"1\"\r\n            ><el-button\r\n              class=\"export\"\r\n              icon=\"el-icon-download\"\r\n              type=\"primary\"\r\n              @click=\"screen_shot\"\r\n            ></el-button>\r\n          </el-col>\r\n        </el-row>\r\n      </div>\r\n\r\n      <div class=\"jsmind_layout\">\r\n        <div\r\n          id=\"jsmind_containerTest\"\r\n          ref=\"container\"\r\n          @click=\"nodeClick\"\r\n          @contextmenu.prevent=\"\"\r\n        ></div>\r\n        <!--\r\n        <el-dialog\r\n          :title=\"'条件查询'\"\r\n          :visible.sync=\"dialogVisible\"\r\n          width=\"600px\"\r\n          @closed=\"form = {}\"\r\n          :destroy-on-close=\"true\"\r\n          :lock-scroll=\"false\"\r\n          :append-to-body=\"true\"\r\n          v-if=\"selectNodeInfo\"\r\n        >\r\n          <el-form label-width=\"80px\" class=\"form-con\">\r\n            <el-form-item label=\"查询内容\">\r\n              <el-input\r\n                type=\"text\"\r\n                :rows=\"2\"\r\n                v-model=\"input_select\"\r\n                class=\"ele-width\"\r\n                maxLength=\"64\"\r\n              ></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n          <template v-slot:footer>\r\n            <div class=\"right mr-10\">\r\n              <el-button\r\n                type=\"primary\"\r\n                class=\"common-btn\"\r\n                @click=\"conditional_query\"\r\n                size=\"medium\"\r\n                >确 定</el-button\r\n              >\r\n            </div>\r\n          </template>\r\n        </el-dialog>\r\n-->\r\n        <el-dialog\r\n          :title=\"'颜色选择器'\"\r\n          :visible.sync=\"dialogVisible2\"\r\n          width=\"600px\"\r\n          @closed=\"form = {}\"\r\n          :destroy-on-close=\"true\"\r\n          :lock-scroll=\"false\"\r\n          :append-to-body=\"true\"\r\n          v-if=\"selectNodeInfo\"\r\n        >\r\n          <el-row>\r\n            <el-col :span=\"12\"\r\n              ><div class=\"block\">\r\n                <el-tag>产品</el-tag>\r\n              </div></el-col\r\n            >\r\n            <el-col :span=\"12\">\r\n              <div class=\"block\">\r\n                <el-tag>公司</el-tag>\r\n              </div></el-col\r\n            >\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"12\"\r\n              ><div class=\"block\">\r\n                <el-color-picker\r\n                  v-model=\"bgMap[2].bgcolor\"\r\n                ></el-color-picker></div\r\n            ></el-col>\r\n            <el-col :span=\"12\">\r\n              <div class=\"block\">\r\n                <el-color-picker\r\n                  v-model=\"bgMap[1].bgcolor\"\r\n                ></el-color-picker></div\r\n            ></el-col>\r\n          </el-row>\r\n  \r\n          <template v-slot:footer>\r\n            <div class=\"right mr-10\">\r\n              <el-button\r\n                type=\"primary\"\r\n                class=\"common-btn\"\r\n                @click=\"changecolor\"\r\n                size=\"medium\"\r\n                >确 定</el-button\r\n              >\r\n            </div>\r\n          </template>\r\n        </el-dialog>\r\n\r\n        <el-dialog\r\n          :title=\"'更多'\"\r\n          :visible.sync=\"moredia\"\r\n          width=\"600px\"\r\n          @closed=\"form = {}\"\r\n          :destroy-on-close=\"true\"\r\n          :lock-scroll=\"false\"\r\n          :append-to-body=\"true\"\r\n          v-if=\"selectNodeInfo\"\r\n        >\r\n          <template>\r\n            <el-table :data=\"tableData\" max-height=\"250\" style=\"width: 100%\">\r\n              <el-table-column prop=\"name\" label=\"产品\"> </el-table-column>\r\n            </el-table>\r\n          </template>\r\n          <template v-slot:footer>\r\n            <div class=\"right mr-10\">\r\n              <el-button\r\n                type=\"primary\"\r\n                class=\"common-btn\"\r\n                @click=\"closemore\"\r\n                size=\"medium\"\r\n                >确 定</el-button\r\n              >\r\n            </div>\r\n          </template>\r\n        </el-dialog>\r\n      </div>\r\n      <!-- 右键菜单 -->\r\n      <el-menu\r\n        class=\"context-menu\"\r\n        v-show=\"showMenu\"\r\n        :style=\"{\r\n          left: menuStyle.left,\r\n          top: menuStyle.top,\r\n          bottom: menuStyle.bottom,\r\n          right: menuStyle.right,\r\n        }\"\r\n        ref=\"context\"\r\n      >\r\n        <slot>\r\n          <el-menu-item @click=\"query_conditional\" v-if=\"select\"\r\n            >条件查询</el-menu-item\r\n          >\r\n          <el-menu-item @click=\"delCard\">隐藏节点</el-menu-item>\r\n        </slot>\r\n      </el-menu>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import axios from \"axios\";\r\n  export default {\r\n    props:['nodeTopic'],\r\n    watch: {\r\n      \"zoom.value\"(val) {\r\n        const zoom = val / 100;\r\n        this.jm.view.setZoom(zoom);\r\n        this.scrollPercent=val;\r\n      console.log(this.scrollPercent);\r\n        this.$emit('scroll', this.scrollPercent);\r\n      },\r\n      \r\n      selectTypes(v) {\r\n        this.loopTreeData(this.mind.data.children, (item) => {\r\n          if (v.length) {\r\n            if (v.includes(item.type)) {\r\n              this.jm.set_node_color(\r\n                item.id,\r\n                this.bgMap[item.type].bgcolor,\r\n                this.bgMap[item.type].fgcolor\r\n              );\r\n            } else {\r\n              this.jm.set_node_color(\r\n                item.id,\r\n                this.bgMap[item.type].transparent,\r\n                this.bgMap[item.type].fgcolor\r\n              );\r\n            }\r\n          } else {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].transparent,\r\n              this.bgMap[item.type].fgcolor\r\n            );\r\n          }\r\n        });\r\n      },\r\n      \r\n    },\r\n    computed: {\r\n      pathColor() {\r\n        return function (type) {\r\n          return this.structure.active === type\r\n            ? this.structure.pathActiveColor\r\n            : this.structure.pathOrginalColor;\r\n        };\r\n      },\r\n      rectColor() {\r\n        return function (type) {\r\n          return this.structure.active === type\r\n            ? this.structure.rectActiveColor\r\n            : this.structure.rectOrginalColor;\r\n        };\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        scrollPercent: '',//缩放百分数\r\n        Option:'false',\r\n        testT:this.nodeTopic,\r\n        select: false,\r\n        getData: [],// 根据输入值  查询到的结果  \r\n        remindData: [],\r\n        lista: [],\r\n        listb: [],\r\n        input: \"\",\r\n        input_select: \"\",\r\n        input_node: \"\",\r\n        mind: {\r\n          meta: {\r\n            name: \"下游产品产业链\",\r\n            author: \"\",\r\n            version: \"0.2\",\r\n          },\r\n          format: \"node_tree\",\r\n          data: {\r\n            id: \"root\",\r\n            topic: \"主产品\",\r\n            type: \"1\",\r\n            expanded: false,\r\n          },\r\n        },\r\n        options: {\r\n          container: \"jsmind_containerTest\", // [必选] 容器的ID\r\n          editable: true, // [可选] 是否启用编辑\r\n          support_html: true, // 是否支持节点里的HTML元素\r\n          theme: \"\", // [可选] 主题\r\n          view: {\r\n            engine: \"svg\", // 思维导图各节点之间线条的绘制引擎\r\n            hmargin: 120, // 思维导图距容器外框的最小水平距离\r\n            vmargin: 50, // 思维导图距容器外框的最小垂直距离\r\n            line_width: 1, // 思维导图线条的粗细\r\n            line_color: \"\t#DCDCDC\", // 思维导图线条的颜色\r\n          },\r\n          layout: {\r\n            hspace: 120, // 节点之间的水平间距\r\n            vspace: 25, // 节点之间的垂直间距\r\n            pspace: 14, // 节点与连接线之间的水平间距（用于容纳节点收缩/展开控制器）\r\n          },\r\n          shortcut: {\r\n            // 禁用快捷键\r\n            enable: false,\r\n          },\r\n        },\r\n        zoom: {\r\n          value: 100, // 层级大小\r\n          min: 10, // 最小层级\r\n          max: 400, // 最大层级\r\n        },\r\n        bgMap: {\r\n          //公司\r\n          1: {\r\n            bgcolor: \"#0014B7 \",\r\n            fgcolor: \" #fff\",\r\n            original: \"rgb(25, 144, 255)\",\r\n            transparent: \"rgb(25, 144, 255, 0.2)\",\r\n          },\r\n          //产品\r\n          2: {\r\n            bgcolor: \"#A16222\",\r\n            fgcolor: \"#fff\",\r\n            original: \"rgb(100, 201, 53)\",\r\n            transparent: \"rgb(100, 201, 53, 0.2)\",\r\n          },\r\n          3: {\r\n            //其他\r\n            bgcolor: \" \",\r\n            fgcolor: \"#000\",\r\n          },\r\n        },\r\n        structure: {\r\n          active: \"right\",\r\n          pathOrginalColor: \"#2B2F36\",\r\n          pathActiveColor: \"#3370FF\",\r\n          rectOrginalColor: \"#C3C6CB\",\r\n          rectActiveColor: \"#BACEFD\",\r\n        },\r\n        dialogVisible: false,\r\n        dialogVisible2: false,\r\n        moredia: false,\r\n        drawer: false,\r\n        drawerinfo: {\r\n          title: null,\r\n          shouxi: null,\r\n          dongshi: null,\r\n          share: null,\r\n          businessMajor: null,\r\n          totalMV:null,\r\n        },\r\n        tableData: null,\r\n        selectNodeInfo: {\r\n          id: null,\r\n          Name: \"\",\r\n        }, // 选中节点信息\r\n        tempNodeInfo: null, // 保存修改之前的信息\r\n        createType: \"\", // 添加平级or子级\r\n        showMenu: false, // 是否显示右键菜单栏\r\n        menuStyle: {\r\n          top: \"\",\r\n          bottom: \"\",\r\n          left: \"\",\r\n          right: \"\",\r\n        },\r\n        typeQueue: new Set([\"1\", \"2\", \"3\", \"4\"]), // 选中types Set\r\n        selectTypes: [\"1\", \"2\", \"3\", \"4\"], // 选中types Array\r\n      };\r\n    },\r\n    methods: {\r\n      querySearch(queryString, cb) {\r\n        console.log(queryString)\r\n        this.remindData=[]\r\n        if (this.input !== \"\") {\r\n          axios\r\n          .post(\"http://localhost:8087//ProductTiShi\", {\r\n            select_name: queryString\r\n          })\r\n          .then((response) => {\r\n            console.log(\"finish\")\r\n            this.getData = response.data; \r\n            this.getData.forEach((item) => { \r\n            let obj = { value: \"\"}; \r\n            obj.value = item; \r\n            this.remindData.push(obj);})\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n          let nameTipsArray = this.remindData;\r\n          // 调用 callback 返回建议列表的数据\r\n          cb(nameTipsArray);\r\n        }\r\n        \r\n      },\r\n  \r\n      handleSelect(item) {\r\n        console.log(item);\r\n        this.input = item.value;\r\n        \r\n      },\r\n      search() {\r\n        // this.jm.show(this.mind);\r\n        this.jm.update_node(\"root\", this.testT);\r\n        const selectedNode1 = this.jm.get_node(\"root1\");\r\n        const selectedNode2 = this.jm.get_node(\"root2\");\r\n        if (\r\n          selectedNode1.children.length != 0 ||\r\n          selectedNode2.children.length != 0\r\n        ) {\r\n          this.jm.remove_node(selectedNode1);\r\n          this.jm.remove_node(selectedNode2);\r\n          let nodeid = \"root1\";\r\n          let topic = \"下游产品\";\r\n          let nodeid2 = \"root2\";\r\n          let topic2 = \"公司\";\r\n          let newNode1 = this.jm.add_node(\"root\", nodeid, topic);\r\n          newNode1.type = \"3\";\r\n          this.jm.set_node_color(\r\n            newNode1.id,\r\n            this.bgMap[newNode1.type].bgcolor,\r\n            this.bgMap[newNode1.type].fgcolor\r\n          );\r\n          let newNode2 = this.jm.add_node(\"root\", nodeid2, topic2);\r\n          newNode2.type = \"3\";\r\n          this.jm.set_node_color(\r\n            newNode2.id,\r\n            this.bgMap[newNode2.type].bgcolor,\r\n            this.bgMap[newNode2.type].fgcolor\r\n          );\r\n  \r\n          //this.add(newNode2, this.input);\r\n        }\r\n        const selectedNode1_ = this.jm.get_node(\"root1\");\r\n        const selectedNode2_ = this.jm.get_node(\"root2\");\r\n        this.add(selectedNode1_, this.input);\r\n        this.add(selectedNode2_, this.input);\r\n      },\r\n      //删除子节点\r\n      delChild(node) {\r\n        if (node.children.length != 0) {\r\n          console.log(node.children);\r\n          let len = node.children.length;\r\n          for (var deli = 0; deli < len; ) {\r\n            console.log(node.children[0]);\r\n            this.jm.remove_node(node.children[0]);\r\n            deli = deli + 1;\r\n          }\r\n        }\r\n      },\r\n      // 重置视图\r\n      reset() {\r\n        document.querySelector(\".root\").scrollIntoView({\r\n          block: \"center\",\r\n          behavior: \"smooth\",\r\n        });\r\n      },\r\n  \r\n      // 缩小\r\n      zoomOut() {\r\n        this.jm.view.zoomOut();\r\n        this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\r\n      },\r\n      // 放大\r\n      zoomIn() {\r\n        this.jm.view.zoomIn();\r\n        this.zoom.value = parseInt(this.jm.view.actualZoom * 100);\r\n      },\r\n  \r\n      // 循环树结构\r\n      loopTreeData(list, callback) {\r\n        (function doOneFloor(list) {\r\n          if (Array.isArray(list)) {\r\n            for (let i = 0; i < list.length; i++) {\r\n              const item = list[i];\r\n              callback(item, i);\r\n              if (item.children && item.children.length > 0) {\r\n                doOneFloor(item.children);\r\n              }\r\n            }\r\n          }\r\n        })(list);\r\n      },\r\n  \r\n      // 设置背景颜色\r\n      setColor() {\r\n        this.jm.set_node_color(\r\n          \"root\",\r\n          this.bgMap[2].bgcolor,\r\n          this.bgMap[2].fgcolor\r\n        );\r\n        this.jm.set_node_font_style(\"root\", 17, \"normal\", \"normal\");\r\n        this.loopTreeData(this.mind.data.children, (item) => {\r\n          if (this.selectTypes.length) {\r\n            if (this.selectTypes.includes(item.type)) {\r\n              this.jm.set_node_color(\r\n                item.id,\r\n                this.bgMap[item.type].bgcolor,\r\n                this.bgMap[item.type].fgcolor\r\n              );\r\n            } else {\r\n              this.jm.set_node_color(\r\n                item.id,\r\n                this.bgMap[item.type].transparent,\r\n                \"#fff\"\r\n              );\r\n            }\r\n          } else {\r\n            this.jm.set_node_color(\r\n              item.id,\r\n              this.bgMap[item.type].transparent,\r\n              \"#fff\"\r\n            );\r\n          }\r\n        });\r\n      },\r\n  \r\n      // 初始化配置\r\n      init() {\r\n        console.log(\"传到主界面的根：\"+this.nodeTopic);\r\n        this.jm.view.minZoom = 0.1;\r\n        this.jm.view.maxZoom = 5;\r\n        //this.jm.expand_all();\r\n        let nodeid = \"root1\";\r\n        let topic = \"下游产品\";\r\n        let nodeid2 = \"root2\";\r\n        let topic2 = \"公司\";\r\n        let newNode1 = this.jm.add_node(\"root\", nodeid, topic);\r\n        newNode1.type = \"3\";\r\n        this.jm.set_node_color(\r\n          newNode1.id,\r\n          this.bgMap[newNode1.type].bgcolor,\r\n          this.bgMap[newNode1.type].fgcolor\r\n        );\r\n        let newNode2 = this.jm.add_node(\"root\", nodeid2, topic2);\r\n        newNode2.type = \"3\";\r\n        this.jm.set_node_color(\r\n          newNode2.id,\r\n          this.bgMap[newNode2.type].bgcolor,\r\n          this.bgMap[newNode2.type].fgcolor\r\n        );\r\n        this.setColor();\r\n  \r\n        //右键菜单\r\n        this.jm.view.add_event(this.editor, \"contextmenu\", (e) => {\r\n          console.log(\"A\");\r\n          const selectedNode = this.jm.get_selected_node();\r\n          console.log(selectedNode);\r\n          if (selectedNode && (selectedNode.type || selectedNode.data.type)) {\r\n            e.preventDefault();\r\n            const el = document.querySelector(\".context-menu .el-menu-item\");\r\n            const width = parseFloat(window.getComputedStyle(el).width);\r\n            const height =\r\n              parseFloat(window.getComputedStyle(el).height) * 3 + 12;\r\n            const windowHeight = window.innerHeight;\r\n            const windowWidth = window.innerWidth;\r\n  \r\n            // 极限位置 避免越界\r\n            if (e.clientY + height > windowHeight) {\r\n              this.menuStyle.left = e.clientX + \"px\";\r\n              this.menuStyle.top = \"unset\";\r\n              this.menuStyle.bottom = 0;\r\n            } else if (e.clientX + width > windowWidth) {\r\n              this.menuStyle.top = e.clientY + \"px\";\r\n              this.menuStyle.left = \"unset\";\r\n              this.menuStyle.right = 0;\r\n            } else {\r\n              this.menuStyle.left = e.clientX + \"px\";\r\n              this.menuStyle.top = e.clientY + \"px\";\r\n              this.menuStyle.bottom = \"unset\";\r\n            }\r\n            this.showMenu = true;\r\n            if (selectedNode.topic == \"下游产品\") {\r\n              this.select = true;\r\n            } else {\r\n              this.select = false;\r\n            }\r\n          } else {\r\n            this.showMenu = false;\r\n          }\r\n        });\r\n        this.search();\r\n        this.add(newNode1,this.testT);\r\n        this.add(newNode2,this.testT);\r\n       // this.reset();\r\n      },\r\n  \r\n      // 获取选中标签的 ID\r\n      get_selected_nodeid() {\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (selectedNode) {\r\n          return selectedNode.id;\r\n        } else {\r\n          return null;\r\n        }\r\n      },\r\n      sureEditNode() {\r\n        return;\r\n      },\r\n      // 拖拽\r\n      handleDrop(draggingNode, dropNode) {\r\n        // 前一个兄弟节点\r\n        const prevNode = this.jm.find_node_before(dropNode);\r\n        // 获取移动后的node\r\n        const dragForm = {\r\n          modelId: \"\",\r\n          treeNum: !prevNode ? draggingNode : prevNode.id,\r\n          thisTreeNum: dropNode,\r\n        };\r\n        //console.log(\"dragForm\", dragForm);\r\n  \r\n        // TODO 调接口\r\n      },\r\n  \r\n      add(addnode, product) {\r\n        console.log(addnode);\r\n        console.log(product);\r\n        //console.log(addnode);\r\n        if (addnode.data && addnode.topic == \"下游产品\") {\r\n          axios\r\n            .post(\"http://localhost:8087/xiayou\", {\r\n              select_name: product,\r\n              relation: \"下游产品\",\r\n            })\r\n            .then((response) => {\r\n                /*\r\n              if (!response.data.length) {\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: \"没有下游产品\",\r\n                });\r\n              }\r\n              */\r\n              this.lista = response.data;\r\n              console.log(this.lista);\r\n              for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n                let nodeid = jsMind.util.uuid.newid();\r\n                let topic = this.lista[i];\r\n                let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                newNode1.type = \"2\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n              }\r\n              if (this.lista.length > 12) {\r\n                this.lista = this.lista.slice(12);\r\n                let nodeid = \"more\" + jsMind.util.uuid.newid();\r\n                let len = this.lista.length;\r\n                let newNode1 = this.jm.add_node(\r\n                  addnode,\r\n                  nodeid,\r\n                  \"更多: \" + len,\r\n                  this.lista\r\n                );\r\n                console.log(newNode1);\r\n                newNode1.type = \"2\";\r\n                this.jm.set_node_color(\r\n                  newNode1.id,\r\n                  this.bgMap[newNode1.type].bgcolor,\r\n                  this.bgMap[newNode1.type].fgcolor\r\n                );\r\n                console.log(newNode1.id);\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else if (addnode.topic == \"公司\") {\r\n          axios\r\n            .post(\"http://localhost:8087/company_product\", {\r\n              select_name: product,\r\n              relation: \"生产公司\",\r\n            })\r\n            .then((response) => {\r\n              //console.log(\"生产公司\" + response);\r\n              if (!response.data.length) {\r\n                /*\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: \"没有所属公司\",\r\n                });\r\n                */\r\n              } else {\r\n                this.listb = response.data;\r\n                for (var i = 0; i < this.listb.length && i < 12; i++) {\r\n                  let nodeid = jsMind.util.uuid.newid();\r\n                  let topic = this.listb[i];\r\n                  let newNode1 = this.jm.add_node(addnode, nodeid, topic);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                }\r\n                if (this.listb.length > 12) {\r\n                  this.listb = this.listb.slice(12);\r\n                  let nodeid = \"more\" + jsMind.util.uuid.newid();\r\n                  let len = this.listb.length;\r\n                  let newNode1 = this.jm.add_node(\r\n                    addnode,\r\n                    nodeid,\r\n                    \"更多: \" + len,\r\n                    this.listb\r\n                  );\r\n                  console.log(newNode1);\r\n                  newNode1.type = \"1\";\r\n                  this.jm.set_node_color(\r\n                    newNode1.id,\r\n                    this.bgMap[newNode1.type].bgcolor,\r\n                    this.bgMap[newNode1.type].fgcolor\r\n                  );\r\n                  console.log(newNode1.id);\r\n                }\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n        } else {\r\n          this.$message.error(\"something wrong\");\r\n        }\r\n        this.jm.collapse_node(addnode);\r\n        this.reset();\r\n      },\r\n      query_conditional() {\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (selectedNode.data) {\r\n          this.dialogVisible = true;\r\n          this.input_node = selectedNode;\r\n        } else {\r\n          this.$message.error(\"请选择卡片\");\r\n        }\r\n  \r\n        this.showMenu = false;\r\n      },\r\n      conditional_query() {\r\n        const selectedNode = this.input_node;\r\n        this.dialogVisible = false;\r\n        this.delChild(selectedNode);\r\n        const node = selectedNode.parent;\r\n        axios\r\n          .post(\"http://localhost:8087/mohu\", {\r\n            select_name: node.topic,\r\n            shaixuan: this.input_select,\r\n          })\r\n          .then((response) => {\r\n            if (!response.data.length) {\r\n              this.$message({\r\n                showClose: true,\r\n                message: \"没有相关产品\",\r\n              });\r\n            }\r\n            this.lista = response.data;\r\n            var len = this.lista.length;\r\n            for (var i = 0; i < this.lista.length && i < 12; i++) {\r\n              let nodeid = jsMind.util.uuid.newid();\r\n              let topic = this.lista[i];\r\n              let newNode1 = this.jm.add_node(selectedNode, nodeid, topic);\r\n              newNode1.type = \"2\";\r\n              newNode1.expanded = \"false\";\r\n              this.jm.set_node_color(\r\n                newNode1.id,\r\n                this.bgMap[newNode1.type].bgcolor,\r\n                this.bgMap[newNode1.type].fgcolor\r\n              );\r\n            }\r\n            if (len > 12) {\r\n              this.lista = this.lista.slice(12);\r\n              let nodeid = \"more\" + jsMind.util.uuid.newid();\r\n              let len = this.lista.length;\r\n              let newNode1 = this.jm.add_node(\r\n                selectedNode,\r\n                nodeid,\r\n                \"更多: \" + len,\r\n                this.lista\r\n              );\r\n              console.log(newNode1);\r\n              newNode1.type = \"2\";\r\n              this.jm.set_node_color(\r\n                newNode1.id,\r\n                this.bgMap[newNode1.type].bgcolor,\r\n                this.bgMap[newNode1.type].fgcolor\r\n              );\r\n              console.log(newNode1.id);\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      },\r\n      nodeClick() {\r\n        this.showMenu = false;\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (!selectedNode) {\r\n          return;\r\n        }\r\n        if (!!selectedNode.data) {\r\n          if (selectedNode.children.length != 0) {\r\n            this.jm.toggle_node(selectedNode);\r\n          } else if (selectedNode.topic.indexOf(\"|\") != -1) {\r\n            console.log(selectedNode.topic);\r\n            axios\r\n              .post(\"http://localhost:8086/info\", {\r\n                select_name: selectedNode.topic,\r\n              })\r\n              .then((response) => {\r\n                if (!response.data.length) {\r\n                }\r\n                console.log(response.data);\r\n                console.log(response.data)\r\n                this.drawerinfo.title = selectedNode.topic;\r\n                this.drawerinfo.businessMajor = response.data.businessMajor;\r\n                this.drawerinfo.dongshi = response.data.dongshi + \"\";\r\n                this.drawerinfo.share = response.data.share.replace(/]/g,\"] \\n\");\r\n                this.drawerinfo.shouxi = response.data.shouxi + \"\";\r\n                this.drawerinfo.totalMV = response.data.total + \"亿元\";\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n        //    this.drawer = true;\r\n            this.Option=true;\r\n            this.$emit('drawerOption',Option,selectedNode.topic);\r\n          } else if (selectedNode.id.indexOf(\"more\") != -1) {\r\n            console.log(\"more\");\r\n            console.log(selectedNode.data);\r\n  \r\n            this.tableData = new Array();\r\n            for (let i = 0; i < selectedNode.data.length; i++) {\r\n              let obj = {};\r\n              obj.name = selectedNode.data[i];\r\n              this.tableData.push(obj);\r\n            }\r\n  \r\n            console.log(this.tableData);\r\n  \r\n            this.moredia = true;\r\n          } else if (\r\n            //没有子节点，产品\r\n            selectedNode.topic != \"下游产品\" &&\r\n            selectedNode.topic.indexOf(\"公司\") == -1\r\n          ) {\r\n            let nodeid = jsMind.util.uuid.newid();\r\n            let topic = \"下游产品\";\r\n            let nodeid2 = jsMind.util.uuid.newid();\r\n            let topic2 = \"公司\";\r\n            let newNode1 = this.jm.add_node(selectedNode, nodeid, topic);\r\n            newNode1.type = \"3\";\r\n            this.jm.set_node_color(\r\n              newNode1.id,\r\n              this.bgMap[newNode1.type].bgcolor,\r\n              this.bgMap[newNode1.type].fgcolor\r\n            );\r\n            let newNode2 = this.jm.add_node(selectedNode, nodeid2, topic2);\r\n            newNode2.type = \"3\";\r\n            this.jm.set_node_color(\r\n              newNode2.id,\r\n              this.bgMap[newNode2.type].bgcolor,\r\n              this.bgMap[newNode2.type].fgcolor\r\n            );\r\n            let parent = newNode1.parent;\r\n            this.add(newNode1, parent.topic);\r\n            let parent2 = newNode2.parent;\r\n            this.add(newNode2, parent2.topic);\r\n          } else {\r\n            //没有子节点，下游产品或公司\r\n            if (\r\n              selectedNode.topic == \"下游产品\" ||\r\n              selectedNode.topic == \"公司\"\r\n            ) {\r\n\r\n                if (selectedNode.topic == \"公司\") {\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: \"没有所属公司\",\r\n                });\r\n              }\r\n              if (selectedNode.topic == \"下游产品\") {\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: \"没有所属下游产品\",\r\n                });\r\n              }\r\n\r\n\r\n              let parent = selectedNode.parent;\r\n              this.add(selectedNode, parent.topic);\r\n            } else {\r\n              this.$message.error(\"无\" + selectedNode.topic);\r\n            }\r\n          }\r\n        } else {\r\n          this.$message.error(\"wrong\");\r\n        }\r\n      },\r\n      delCard() {\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (selectedNode.data) {\r\n          // TODO\r\n          this.jm.remove_node(selectedNode.id);\r\n          // 获取数据\r\n          console.log(this.jm.get_data(\"node_tree\"));\r\n        } else {\r\n          this.$message.error(\"请选择卡片\");\r\n        }\r\n        this.showMenu = false;\r\n      },\r\n      setcolor2() {\r\n        const selectedNode = this.jm.get_selected_node();\r\n        if (selectedNode.data) {\r\n          // TODO\r\n          this.jm.set_node_color(selectedNode.id, \"#3E241A\", \"#1F1815\");\r\n          // 获取数据\r\n        } else {\r\n          this.$message.error(\"请选择卡片\");\r\n        }\r\n        this.showMenu = false;\r\n      },\r\n      // 鼠标滚轮放大缩小\r\n      mouseWheel() {\r\n        if (document.addEventListener) {\r\n          document.addEventListener(\"domMouseScroll\", this.scrollFunc, false);\r\n        }\r\n        this.$refs.container.onmousewheel = this.scrollFunc;\r\n      },\r\n      // 滚轮缩放\r\n      scrollFunc(e) {\r\n        e = e || window.event;\r\n        if (e.wheelDelta) {\r\n          if (e.wheelDelta > 0) {\r\n            this.zoomIn();\r\n          } else {\r\n            this.zoomOut();\r\n          }\r\n        } else if (e.detail) {\r\n          if (e.detail > 0) {\r\n            this.zoomIn();\r\n          } else {\r\n            this.zoomOut();\r\n          }\r\n        }\r\n        e.preventDefault();\r\n        this.jm.resize();\r\n      },\r\n      color_conditional() {\r\n        this.dialogVisible2 = true;\r\n        this.showMenu = false;\r\n      },\r\n      changecolor() {\r\n        const node = this.jm.get_node(\"root\");\r\n        this.loopTreeData(node.children, (item) =>\r\n          this.jm.set_node_color(\r\n            item.id,\r\n            this.bgMap[item.type].bgcolor,\r\n            this.bgMap[item.type].fgcolor\r\n          )\r\n        );\r\n        this.dialogVisible2 = false;\r\n      },\r\n      closemore() {\r\n        this.moredia = false;\r\n      },\r\n      // 导出图片\r\n      screen_shot() {\r\n        // 去除透明度\r\n        const node = this.jm.get_node(\"root\");\r\n        this.loopTreeData(node.children, (item) =>\r\n          this.jm.set_node_color(\r\n            item.id,\r\n            this.bgMap[item.type].bgcolor,\r\n            this.bgMap[item.type].fgcolor\r\n          )\r\n        );\r\n        try {\r\n          this.jm.screenshot.shootDownload();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        setTimeout(() => {\r\n          this.setColor();\r\n        }, 1000);\r\n      },\r\n      // 鼠标拖拽\r\n      mouseDrag() {\r\n        // 里层\r\n        const el = document.querySelector(\".jsmind-inner\");\r\n        // 选中节点\r\n        let selected;\r\n  \r\n        el.onmousedown = (ev) => {\r\n          // 选中节点\r\n          selected = this.jm.get_selected_node();\r\n          // 标识 是否拖拽节点 避免冲突\r\n          this.dragNodeFlag = !!selected;\r\n  \r\n          const disX = ev.clientX;\r\n          const disY = ev.clientY;\r\n          const originalScrollLeft = el.scrollLeft;\r\n          const originalScrollTop = el.scrollTop;\r\n          const originalScrollBehavior = el.style[\"scroll-behavior\"];\r\n          const originalPointerEvents = el.style[\"pointer-events\"];\r\n          // auto: 默认值，表示滚动框立即滚动到指定位置。\r\n          el.style[\"scroll-behavior\"] = \"auto\";\r\n          // 鼠标移动事件是监听的整个document，这样可以使鼠标能够在元素外部移动的时候也能实现拖动\r\n          document.onmousemove = (ev) => {\r\n            if (this.dragNodeFlag) return;\r\n            this.drag = false;\r\n            ev.preventDefault();\r\n            // 计算拖拽的偏移距离\r\n            const distanceX = ev.clientX - disX;\r\n            const distanceY = ev.clientY - disY;\r\n  \r\n            el.scrollTo(\r\n              originalScrollLeft - distanceX,\r\n              originalScrollTop - distanceY\r\n            );\r\n  \r\n            // 在鼠标拖动的时候将点击事件屏蔽掉\r\n            el.style[\"pointer-events\"] = \"none\";\r\n            el.style.cursor = \"grabbing\";\r\n          };\r\n          document.onmouseup = () => {\r\n            if (!this.dragNodeFlag) {\r\n              el.style[\"scroll-behavior\"] = originalScrollBehavior;\r\n              el.style[\"pointer-events\"] = originalPointerEvents;\r\n              el.style.cursor = \"grab\";\r\n            }\r\n            document.onmousemove = document.onmouseup = null;\r\n          };\r\n        };\r\n      },\r\n    },\r\n    mounted() {\r\n      this.jm = jsMind.show(this.options, this.mind);\r\n      this.$emit('getJM',this.jm);//传给父组件jm\r\n      this.init();\r\n      this.mouseWheel();\r\n      this.mouseDrag();\r\n    },\r\n    beforeDestroy() {\r\n      document.removeEventListener(\"domMouseScroll\", this.scrollFunc, false);\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style lang=\"less\">\r\n  @import \"../assets/css/style.less\";\r\n\r\n  \r\n  #jsmind_containerTest {//这个是思维图在页面大小\r\n    position: fixed;\r\n  top: 230px;\r\n  left: 290px;\r\n  width: 85%;\r\n // height: 74%;\r\n height: 100%;\r\n  \r\n        background-color: #ffffff;\r\n    \r\n      }\r\n\r\n\r\n      .jsmindTest {\r\n  position: fixed;\r\n  top: 230px;\r\n  left: 250px;\r\n  width: 85%;\r\n  height: 73%;\r\n  background-color: #ffffff;\r\n \r\n  overflow-x:hidden;\r\noverflow-y:hidden;\r\n\r\n  &.full {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #fff;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    width: 80%;\r\n    margin-bottom: 20px\r\n   \r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #dddddd;\r\n    text-align: left;\r\n    padding: 8px;\r\n    width:50px;\r\n    height:50px;\r\n  }\r\n  \r\n  th {\r\n    background-color: #dddddd;\r\n  }\r\n\r\n  .toolbar2 {\r\n    float: right;\r\n    z-index: 2;\r\n    position: absolute;\r\n    right: 100px;\r\n    top: -30px;\r\n    z-index: 99;\r\n    border: 1px solid #dee0e3;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    -webkit-box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n    box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    text-align: center;\r\n\r\n    .toolbar-list2 {\r\n \r\n      padding: 6px 0;\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n\r\n      .item {\r\n        \r\n        position: relative;\r\n        width: 48px;\r\n        height: 36px;\r\n        cursor: pointer;\r\n        font-size: 14px;\r\n        line-height: 36px;\r\n        text-align: center;\r\n        margin-bottom: 12px;\r\n\r\n        svg {\r\n          vertical-align: middle;\r\n        }\r\n\r\n        .percent {\r\n          color: rgb(29, 29, 31);\r\n          line-height: 1.45;\r\n        }\r\n\r\n        &:hover {\r\n          .scale-slide {\r\n            opacity: 1;\r\n            visibility: visible;\r\n          }\r\n        }\r\n\r\n        &.layout {\r\n          &:hover {\r\n            .structure {\r\n              opacity: 1;\r\n              visibility: visible;\r\n            }\r\n          }\r\n        }\r\n\r\n        .scale-slide {\r\n          position: absolute;\r\n          top: -7px;\r\n          right: 58px;\r\n          overflow: hidden;\r\n          width: 244px;\r\n          height: 44px;\r\n          opacity: 1;\r\n          -webkit-transition: all 0.1s linear;\r\n          transition: all 0.1s linear;\r\n          opacity: 0;\r\n          visibility: hidden;\r\n\r\n          &:hover {\r\n            opacity: 1;\r\n            visibility: visible;\r\n          }\r\n\r\n          ul {\r\n            position: absolute;\r\n            display: -webkit-box;\r\n            display: -ms-flexbox;\r\n            display: flex;\r\n            width: 244px;\r\n            height: 44px;\r\n            padding: 4px 8px;\r\n            border: 1px solid #dee0e3;\r\n            background-color: #fff;\r\n            border-radius: 5px;\r\n            -webkit-box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n            box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n            list-style: none;\r\n\r\n            .normal-item {\r\n              display: flex;\r\n              width: 36px;\r\n              height: 36px;\r\n              -webkit-box-align: center;\r\n              -ms-flex-align: center;\r\n              align-items: center;\r\n              -webkit-box-pack: center;\r\n              -ms-flex-pack: center;\r\n              justify-content: center;\r\n              cursor: pointer;\r\n            }\r\n\r\n            .slider {\r\n              width: 100%;\r\n\r\n              /deep/.el-slider__runway {\r\n                height: 2px;\r\n                background-color: #bbbfc4;\r\n\r\n                .el-slider__bar {\r\n                  background: none;\r\n                }\r\n\r\n                .el-slider__button {\r\n                  border: 0.5px solid #dee0e3;\r\n                }\r\n              }\r\n            }\r\n\r\n            .style__zoom-scroll-bar___3n1YHZLZ {\r\n              display: flex;\r\n\r\n              .style__zoom-bar___rp3v2Kdv {\r\n                position: relative;\r\n                display: -webkit-box;\r\n                display: -ms-flexbox;\r\n                display: flex;\r\n                width: 120px;\r\n                height: 36px;\r\n                -webkit-box-align: center;\r\n                -ms-flex-align: center;\r\n                align-items: center;\r\n                cursor: pointer;\r\n\r\n                .style__process-bar___2nCsCTk0 {\r\n                  position: relative;\r\n                  left: 50%;\r\n                  width: 104px;\r\n                  height: 2px;\r\n                  -ms-flex-item-align: center;\r\n                  align-self: center;\r\n                  margin-left: -52px;\r\n                  background-color: #bbbfc4;\r\n                  border-radius: 2px;\r\n                }\r\n\r\n                .style__process-btn___azlkuc9i {\r\n                  position: absolute;\r\n                  width: 16px;\r\n                  height: 16px;\r\n                  border: 0.5px solid #dee0e3;\r\n                  background-color: #fff;\r\n                  border-radius: 8px;\r\n                  -webkit-box-shadow: 0 2px 3px 0 rgb(0 0 0 / 15%);\r\n                  box-shadow: 0 2px 3px 0 rgb(0 0 0 / 15%);\r\n                  cursor: pointer;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        .structure {\r\n          position: absolute;\r\n          top: 0;\r\n          right: 58px;\r\n          width: 244px;\r\n          min-height: 120px;\r\n          max-height: calc(100vh - 200px);\r\n          cursor: default;\r\n          opacity: 0;\r\n          overflow-y: overlay;\r\n          -webkit-transition: all 0.1s linear;\r\n          transition: all 0.1s linear;\r\n          visibility: hidden;\r\n          z-index: 1000;\r\n\r\n          &:hover {\r\n            opacity: 1;\r\n            visibility: visible;\r\n          }\r\n\r\n          .tab-content {\r\n            padding: 24px 24px 10px;\r\n            border: 1px solid #dee0e3;\r\n            background-color: #fff;\r\n            border-radius: 5px;\r\n            -webkit-box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n            box-shadow: 0 0 8px 4px rgb(31 35 41 / 6%);\r\n\r\n            .tab-label {\r\n              margin-bottom: 12px;\r\n              color: #1f2329;\r\n              font-size: 16px;\r\n              font-weight: 500;\r\n              line-height: 1.5;\r\n              text-align: left;\r\n            }\r\n\r\n            .struct-list {\r\n              display: -webkit-box;\r\n              display: -ms-flexbox;\r\n              display: flex;\r\n              -webkit-box-orient: horizontal;\r\n              -webkit-box-direction: normal;\r\n              -ms-flex-direction: row;\r\n              flex-direction: row;\r\n              -webkit-box-pack: justify;\r\n              -ms-flex-pack: justify;\r\n              justify-content: space-between;\r\n              margin: 0 0 20px;\r\n              list-style: none;\r\n\r\n              li {\r\n                width: 32px;\r\n                height: 32px;\r\n                cursor: pointer;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .reset {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .top-bar {\r\n    .filter {\r\n      float: left;\r\n\r\n      li {\r\n        display: inline-block;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        margin-right: 20px;\r\n        padding: 0 20px;\r\n        background-color: #ddd;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n\r\n        &.active {\r\n          color: #fff;\r\n        }\r\n\r\n        &.kd {\r\n          &.active {\r\n            background-color: #1990ff;\r\n          }\r\n        }\r\n\r\n        &.zsd {\r\n          &.active {\r\n            background-color: #d42a2a;\r\n          }\r\n        }\r\n\r\n        &.zskp {\r\n          &.active {\r\n            background-color: #64c935;\r\n          }\r\n        }\r\n\r\n        &.st {\r\n          &.active {\r\n            background-color: #4332ad;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .export {\r\n      float: right;\r\n      padding: 0 20px;\r\n      height: 40px;\r\n      position: relative;\r\n      left: 40px;\r\n      line-height: 40px;\r\n      background: #1990ff;\r\n      border-radius: 10px;\r\n      border: 1px solid #ccc;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .head{\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    height: 300px;\r\n    padding: 0 10px 0px 10px;\r\n    height: auto;\r\n    background: #161616;\r\n\r\n  }\r\n\r\n  .jsmind_layout {\r\n    background-color: #ffffff;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    .jsmind_toolbar {\r\n      width: 100%;\r\n      padding: 0 10px 0px 10px;\r\n      height: auto;\r\n      flex-shrink: 0;\r\n      display: flex;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      background-color: #f8f9fa;\r\n      box-shadow: 0 0 4px #b8b8b8;\r\n    }\r\n\r\n    /deep/ .el-button--medium,\r\n    /deep/ .el-input--medium {\r\n      margin-top: 10px;\r\n    }\r\n\r\n   \r\n\r\n    /deep/.el-upload-list {\r\n      display: none !important;\r\n    }\r\n\r\n    .pad {\r\n      margin-right: 10px;\r\n    }\r\n\r\n    .pad-left {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    jmnode {\r\n      max-width: unset;\r\n      color: #fff;\r\n      background-color: #ddd;\r\n\r\n      &.selected {\r\n        color: #fff !important;\r\n        border: 1px solid #777;\r\n        transition: 0s;\r\n      }\r\n    }\r\n\r\n    /deep/ jmnode.selected {\r\n      background-color: #b9b9b9;\r\n      color: #fff;\r\n      box-shadow: 2px 2px 8px #777;\r\n    }\r\n\r\n    /deep/ jmnode:hover {\r\n      box-shadow: 2px 2px 8px #777;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  .context-menu {\r\n    width: 150px;\r\n    padding: 12px 0px;\r\n    position: fixed;\r\n    z-index: 100;\r\n    background: rgb(255, 255, 255);\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 12px 0px;\r\n    border-radius: 5px;\r\n    font-size: 12px;\r\n    display: block;\r\n    left: 912px;\r\n    top: 535px;\r\n\r\n    .el-menu-item {\r\n      width: 150px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n    }\r\n  }\r\n\r\n  .jsmind-inner {\r\n    \r\n    position:relative;\r\n    width: 85%;\r\n    height:60%;\r\n    margin-bottom: 50%;\r\n    margin-top: 3%;\r\n    margin-left: 5%;\r\n  \r\n    \r\n    background-color:#ffffff8c;\r\n    &::-webkit-scrollbar {\r\n      height: 10px;\r\n    }\r\n    \r\n  }\r\n\r\n  .form-con {\r\n    padding-top: 20px;\r\n  }\r\n\r\n  .ele-width {\r\n    width: 96%;\r\n  }\r\n  .el-popper[x-placement^=bottom]{\r\n\t\twidth:500px !important;\r\n\t}\r\n  .el-autocomplete {\r\n    width: 500px;\r\n  }\r\n  .el-input{\r\n    width: 500px;\r\n  }\r\n\r\n  #jsmind_containerTest {//这个是思维图在页面大小\r\n    position: fixed;\r\n  top: 230px;\r\n  left: 290px;\r\n  width: 85%;\r\n // height: 74%;\r\n height: 100%;\r\n  \r\n        background-color: #ffffff;\r\n    \r\n      }\r\n\r\n}\r\n  </style>\r\n  "],"mappings":";AAqTA,OAAAA,KAAA;AACA;EACAC,KAAA;EACAC,KAAA;IACA,YAAAC,CAAAC,GAAA;MACA,MAAAC,IAAA,GAAAD,GAAA;MACA,KAAAE,EAAA,CAAAC,IAAA,CAAAC,OAAA,CAAAH,IAAA;MACA,KAAAI,aAAA,GAAAL,GAAA;MACAM,OAAA,CAAAC,GAAA,MAAAF,aAAA;MACA,KAAAG,KAAA,gBAAAH,aAAA;IACA;IAEAI,YAAAC,CAAA;MACA,KAAAC,YAAA,MAAAC,IAAA,CAAAC,IAAA,CAAAC,QAAA,EAAAC,IAAA;QACA,IAAAL,CAAA,CAAAM,MAAA;UACA,IAAAN,CAAA,CAAAO,QAAA,CAAAF,IAAA,CAAAG,IAAA;YACA,KAAAhB,EAAA,CAAAiB,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAI,OAAA,EACA,KAAAD,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;YACA,KAAArB,EAAA,CAAAiB,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,KAAAH,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;UACA;QACA;UACA,KAAArB,EAAA,CAAAiB,cAAA,CACAJ,IAAA,CAAAK,EAAA,EACA,KAAAC,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAM,WAAA,EACA,KAAAH,KAAA,CAAAN,IAAA,CAAAG,IAAA,EAAAK,OAAA,CACA;QACA;MACA;IACA;EAEA;EACAE,QAAA;IACAC,UAAA;MACA,iBAAAR,IAAA;QACA,YAAAS,SAAA,CAAAC,MAAA,KAAAV,IAAA,GACA,KAAAS,SAAA,CAAAE,eAAA,GACA,KAAAF,SAAA,CAAAG,gBAAA;MACA;IACA;IACAC,UAAA;MACA,iBAAAb,IAAA;QACA,YAAAS,SAAA,CAAAC,MAAA,KAAAV,IAAA,GACA,KAAAS,SAAA,CAAAK,eAAA,GACA,KAAAL,SAAA,CAAAM,gBAAA;MACA;IACA;EACA;EACApB,KAAA;IACA;MACAR,aAAA;MAAA;MACA6B,MAAA;MACAC,KAAA,OAAAC,SAAA;MACAC,MAAA;MACAC,OAAA;MAAA;MACAC,UAAA;MACAC,KAAA;MACAC,KAAA;MACAC,KAAA;MACAC,YAAA;MACAC,UAAA;MACAhC,IAAA;QACAiC,IAAA;UACAC,IAAA;UACAC,MAAA;UACAC,OAAA;QACA;QACAC,MAAA;QACApC,IAAA;UACAO,EAAA;UACA8B,KAAA;UACAhC,IAAA;UACAiC,QAAA;QACA;MACA;MACAC,OAAA;QACAC,SAAA;QAAA;QACAC,QAAA;QAAA;QACAC,YAAA;QAAA;QACAC,KAAA;QAAA;QACArD,IAAA;UACAsD,MAAA;UAAA;UACAC,OAAA;UAAA;UACAC,OAAA;UAAA;UACAC,UAAA;UAAA;UACAC,UAAA;QACA;;QACAC,MAAA;UACAC,MAAA;UAAA;UACAC,MAAA;UAAA;UACAC,MAAA;QACA;;QACAC,QAAA;UACA;UACAC,MAAA;QACA;MACA;MACAlE,IAAA;QACAmE,KAAA;QAAA;QACAC,GAAA;QAAA;QACAC,GAAA;MACA;;MACAjD,KAAA;QACA;QACA;UACAC,OAAA;UACAC,OAAA;UACAgD,QAAA;UACA/C,WAAA;QACA;QACA;QACA;UACAF,OAAA;UACAC,OAAA;UACAgD,QAAA;UACA/C,WAAA;QACA;QACA;UACA;UACAF,OAAA;UACAC,OAAA;QACA;MACA;MACAI,SAAA;QACAC,MAAA;QACAE,gBAAA;QACAD,eAAA;QACAI,gBAAA;QACAD,eAAA;MACA;MACAwC,aAAA;MACAC,cAAA;MACAC,OAAA;MACAC,MAAA;MACAC,UAAA;QACAC,KAAA;QACAC,MAAA;QACAC,OAAA;QACAC,KAAA;QACAC,aAAA;QACAC,OAAA;MACA;MACAC,SAAA;MACAC,cAAA;QACAhE,EAAA;QACAiE,IAAA;MACA;MAAA;MACAC,YAAA;MAAA;MACAC,UAAA;MAAA;MACAC,QAAA;MAAA;MACAC,SAAA;QACAC,GAAA;QACAC,MAAA;QACAC,IAAA;QACAC,KAAA;MACA;MACAC,SAAA,MAAAC,GAAA;MAAA;MACAtF,WAAA;IACA;EACA;;EACAuF,OAAA;IACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}