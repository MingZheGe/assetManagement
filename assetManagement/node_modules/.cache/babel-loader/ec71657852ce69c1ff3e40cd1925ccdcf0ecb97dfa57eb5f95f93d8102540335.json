{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport loading from '../components/loading.vue';\nexport default {\n  components: {\n    loading\n  },\n  data() {\n    var checkEmail = (rule, value, callback) => {\n      var reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\n      if (!value) {\n        return callback(new Error('邮箱不能为空'));\n      }\n      setTimeout(() => {\n        if (!reg.test(value)) {\n          callback(new Error('请输入正确的邮箱'));\n        } else {\n          callback();\n        }\n      }, 1000);\n    };\n    var validatePass = (rule, value, callback) => {\n      let reg = /(?!^[0-9]+$)(?!^[A-z]+$)(?!^[^A-z0-9]+$)^[^\\s\\u4e00-\\u9fa5]{6,16}$/;\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (!reg.test(value)) {\n        callback(new Error('密码长度需6-16位，且包含字母和字符'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        checkPass: '',\n        pass: '',\n        email: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: checkEmail,\n          trigger: 'blur'\n        }]\n      },\n      load: false\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      if (valid) {\n        console.log(this.ruleForm);\n        this.$api.user.register({\n          email: this.ruleForm.email,\n          password: this.ruleForm.pass,\n          recheck: this.ruleForm.checkPass\n        }).then(res => {\n          console.log(res);\n          this.load = false;\n          if (res.data.status == '0') {\n            this.$alert('注册成功, 请您到您的邮箱中点击激活链接来激活您的帐号', '提示', {\n              confirmButtonText: '确定',\n              callback: action => {\n                // this.$router.go(0)\n                this.$router.push('/login');\n              }\n            });\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        });\n      } else {\n        console.log('error submit!!');\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["loading","components","data","checkEmail","rule","value","callback","reg","RegExp","Error","setTimeout","test","validatePass","ruleForm","checkPass","$refs","validateField","validatePass2","pass","email","rules","validator","trigger","load","methods","submitForm","formName","valid","console","log","$api","user","register","password","recheck","then","res","status","$alert","confirmButtonText","action","$router","push","$message","error","msg"],"sources":["src/views/register.vue"],"sourcesContent":["<template>\r\n    <div class=\"login\">\r\n        <div class=\"logo\">\r\n\r\n            <span>V-login</span>\r\n        </div>\r\n        <p>个人资产助手注册</p>\r\n        <div class=\"login-input\">\r\n            <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\"  class=\"demo-ruleForm\">\r\n                 <el-form-item label=\"\" prop=\"email\">\r\n                 <el-input v-model=\"ruleForm.email\" clearable placeholder=\"邮箱\"></el-input>\r\n                 </el-form-item>\r\n                 <el-form-item label=\"\" prop=\"pass\">\r\n                     <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\" placeholder=\"密码\" clearable></el-input>\r\n                 </el-form-item> \r\n                 <el-form-item label=\"\" prop=\"checkPass\">\r\n                     <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\" placeholder=\"确认密码\" clearable></el-input>\r\n                 </el-form-item>\r\n                 <el-form-item>\r\n                     <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">\r\n                         <loading v-if=\"load\"></loading>\r\n                         <span v-else>注册</span>\r\n                     </el-button>\r\n                 </el-form-item>\r\n             </el-form>\r\n             <p class='register'><router-link to='/login'>已有账号,去登录</router-link></p>\r\n        </div>\r\n        \r\n    </div>\r\n </template>\r\n \r\n <script>\r\n import loading from '../components/loading.vue'\r\n export default {\r\n     components:{loading},\r\n     data(){\r\n         var checkEmail = (rule, value, callback) => {\r\n             var reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\r\n             if (!value) {\r\n                 return callback(new Error('邮箱不能为空'));\r\n             }\r\n             setTimeout(() => {\r\n             if (!reg.test(value)) {\r\n                 callback(new Error('请输入正确的邮箱'));\r\n             }else{\r\n                  callback();\r\n             } \r\n             }, 1000);\r\n         };\r\n         var validatePass = (rule, value, callback) => {\r\n             let reg = /(?!^[0-9]+$)(?!^[A-z]+$)(?!^[^A-z0-9]+$)^[^\\s\\u4e00-\\u9fa5]{6,16}$/;\r\n             if (value === '') {\r\n                 callback(new Error('请输入密码'));\r\n             }else if(!reg.test(value)){\r\n                 callback(new Error('密码长度需6-16位，且包含字母和字符'))\r\n             } else {\r\n             if (this.ruleForm.checkPass !== '') {\r\n                 this.$refs.ruleForm.validateField('checkPass');\r\n             }\r\n                 callback();\r\n             }\r\n         };\r\n         var validatePass2 = (rule, value, callback) => {\r\n             if (value === '') {\r\n                 callback(new Error('请再次输入密码'));\r\n             } else if (value !== this.ruleForm.pass) {\r\n                 callback(new Error('两次输入密码不一致!'));\r\n             } else {\r\n                 callback();\r\n             }\r\n         };\r\n         return{\r\n             ruleForm: {\r\n                 checkPass: '',\r\n                 pass: '',\r\n                 email: ''\r\n             },\r\n             rules: {\r\n                 pass: [\r\n                     { validator: validatePass, trigger: 'blur' }\r\n                 ],\r\n                 checkPass: [\r\n                     { validator: validatePass2, trigger: 'blur' }\r\n                 ],\r\n                 email: [\r\n                     { validator: checkEmail, trigger: 'blur' }\r\n                 ]\r\n             },\r\n             load:false\r\n         }\r\n     },\r\n     methods: {\r\n       submitForm(formName) {\r\n\r\n           if (valid) {\r\n               console.log(this.ruleForm)\r\n               this.$api.user.register({\r\n                   email:this.ruleForm.email,\r\n                   password:this.ruleForm.pass,\r\n                   recheck:this.ruleForm.checkPass\r\n               }).then((res)=>{\r\n                   console.log(res)\r\n                   this.load=false\r\n                   if(res.data.status=='0'){\r\n                       this.$alert('注册成功, 请您到您的邮箱中点击激活链接来激活您的帐号', '提示', {\r\n                         confirmButtonText: '确定',\r\n                         callback: action => {\r\n                             // this.$router.go(0)\r\n                             this.$router.push('/login')\r\n                         }\r\n                     });\r\n                   }else {\r\n                       this.$message.error(res.data.msg);\r\n                   }\r\n                   \r\n               })\r\n           } else {\r\n             console.log('error submit!!');\r\n             return false;\r\n           }\r\n      \r\n       }\r\n     }\r\n }\r\n </script>\r\n \r\n <style lang='scss'>\r\n .login{\r\n     width: 100%;\r\n     height: 100%;\r\n     background: rgb(48,49,62);\r\n     display: flex;\r\n     flex-direction: column;\r\n     align-items: center;\r\n     justify-content: center;\r\n     color: #fff;\r\n     .logo{\r\n         color:rgb(3,174,189);\r\n         font-size: 30px;\r\n         // font-style: italic;\r\n         font-weight: bold;\r\n         margin-bottom: 20px;\r\n         img{\r\n             width: 74px;\r\n             vertical-align: middle;\r\n             margin-right: 10px;\r\n         }\r\n     }\r\n     .login-input{\r\n         width:290px;\r\n         padding: 10px;\r\n         margin-top: 10px;\r\n         .el-input{\r\n             // margin-bottom: 20px;\r\n             .el-input__inner{\r\n                 border-radius: 30px!important;\r\n                 text-align: center;\r\n             }\r\n         }\r\n         .el-button{\r\n              border-radius: 30px!important;\r\n              width: 270px;\r\n              background: rgb(3,174,189);\r\n              color: #fff;\r\n              border: 0;\r\n         }\r\n         .register{\r\n             text-align: right;\r\n             margin: 10px;\r\n             a{\r\n                 color: #fff\r\n             }\r\n         }\r\n         \r\n     }\r\n }\r\n \r\n </style>"],"mappings":";AAgCA,OAAAA,OAAA;AACA;EACAC,UAAA;IAAAD;EAAA;EACAE,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAC,GAAA,OAAAC,MAAA;MACA,KAAAH,KAAA;QACA,OAAAC,QAAA,KAAAG,KAAA;MACA;MACAC,UAAA;QACA,KAAAH,GAAA,CAAAI,IAAA,CAAAN,KAAA;UACAC,QAAA,KAAAG,KAAA;QACA;UACAH,QAAA;QACA;MACA;IACA;IACA,IAAAM,YAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAC,GAAA;MACA,IAAAF,KAAA;QACAC,QAAA,KAAAG,KAAA;MACA,YAAAF,GAAA,CAAAI,IAAA,CAAAN,KAAA;QACAC,QAAA,KAAAG,KAAA;MACA;QACA,SAAAI,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAV,QAAA;MACA;IACA;IACA,IAAAW,aAAA,GAAAA,CAAAb,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAG,KAAA;MACA,WAAAJ,KAAA,UAAAQ,QAAA,CAAAK,IAAA;QACAZ,QAAA,KAAAG,KAAA;MACA;QACAH,QAAA;MACA;IACA;IACA;MACAO,QAAA;QACAC,SAAA;QACAI,IAAA;QACAC,KAAA;MACA;MACAC,KAAA;QACAF,IAAA,GACA;UAAAG,SAAA,EAAAT,YAAA;UAAAU,OAAA;QAAA,EACA;QACAR,SAAA,GACA;UAAAO,SAAA,EAAAJ,aAAA;UAAAK,OAAA;QAAA,EACA;QACAH,KAAA,GACA;UAAAE,SAAA,EAAAlB,UAAA;UAAAmB,OAAA;QAAA;MAEA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MAEA,IAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,MAAAhB,QAAA;QACA,KAAAiB,IAAA,CAAAC,IAAA,CAAAC,QAAA;UACAb,KAAA,OAAAN,QAAA,CAAAM,KAAA;UACAc,QAAA,OAAApB,QAAA,CAAAK,IAAA;UACAgB,OAAA,OAAArB,QAAA,CAAAC;QACA,GAAAqB,IAAA,CAAAC,GAAA;UACAR,OAAA,CAAAC,GAAA,CAAAO,GAAA;UACA,KAAAb,IAAA;UACA,IAAAa,GAAA,CAAAlC,IAAA,CAAAmC,MAAA;YACA,KAAAC,MAAA;cACAC,iBAAA;cACAjC,QAAA,EAAAkC,MAAA;gBACA;gBACA,KAAAC,OAAA,CAAAC,IAAA;cACA;YACA;UACA;YACA,KAAAC,QAAA,CAAAC,KAAA,CAAAR,GAAA,CAAAlC,IAAA,CAAA2C,GAAA;UACA;QAEA;MACA;QACAjB,OAAA,CAAAC,GAAA;QACA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}