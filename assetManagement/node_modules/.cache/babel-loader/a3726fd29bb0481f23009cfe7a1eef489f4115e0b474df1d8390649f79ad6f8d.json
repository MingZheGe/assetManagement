{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport loading from '../components/loading';\nexport default {\n  components: {\n    loading\n  },\n  data() {\n    var checkEmail = (rule, value, callback) => {\n      var reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\n      if (!value) {\n        return callback(new Error('邮箱不能为空'));\n      }\n      setTimeout(() => {\n        if (!reg.test(value)) {\n          callback(new Error('请输入正确的邮箱'));\n        } else {\n          callback();\n        }\n      }, 1000);\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    return {\n      load: false,\n      ruleForm: {\n        pass: '',\n        email: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: checkEmail,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$router.push('/login');\n      this.load = true;\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$api.user.login({\n            email: this.ruleForm.email,\n            password: this.ruleForm.pass\n          }).then(({\n            data\n          }) => {\n            this.load = false;\n            if (data.status == '0') {\n              this.$store.dispatch('UserLogin', data.result.token);\n              this.$store.dispatch('UserName', data.result.email);\n              let redirect = decodeURIComponent(this.$route.query.redirect || '/');\n              this.$router.push({\n                path: redirect\n              });\n            } else {\n              this.$message.error(data.msg);\n            }\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["loading","components","data","checkEmail","rule","value","callback","reg","RegExp","Error","setTimeout","test","validatePass","ruleForm","checkPass","$refs","validateField","load","pass","email","rules","validator","trigger","methods","submitForm","formName","$router","push","validate","valid","$api","user","login","password","then","status","$store","dispatch","result","token","redirect","decodeURIComponent","$route","query","path","$message","error","msg","console","log"],"sources":["src/views/login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login\">\r\n        <div class=\"logo\">\r\n            \r\n            <span>V-login</span>\r\n        </div>\r\n        <p>stay foolish,stay hungry</p>\r\n        <div class=\"login-input\" >\r\n            <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\"  class=\"demo-ruleForm\">\r\n                 <el-form-item label=\"\" prop=\"email\">\r\n                     <el-input v-model=\"ruleForm.email\" clearable placeholder=\"邮箱\"></el-input>\r\n                 </el-form-item>\r\n                 <el-form-item label=\"\" prop=\"pass\">\r\n                     <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\" placeholder=\"密码\" clearable></el-input>\r\n                 </el-form-item> \r\n                 <el-form-item>\r\n                     <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">\r\n                         <loading v-if=\"load\"></loading>\r\n                         <span v-else>登录</span>\r\n                     </el-button>\r\n                 </el-form-item>\r\n             </el-form>\r\n            <p class='register'><router-link to='/register'>还没有账号？注册</router-link></p>\r\n        </div>\r\n    </div>\r\n </template>\r\n \r\n <script>\r\n import loading from '../components/loading'\r\n export default {\r\n     components:{loading},\r\n     data(){\r\n         var checkEmail = (rule, value, callback) => {\r\n             var reg = new RegExp(\"^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$\");\r\n             if (!value) {\r\n                 return callback(new Error('邮箱不能为空'));\r\n             }\r\n             setTimeout(() => {\r\n             if (!reg.test(value)) {\r\n                 callback(new Error('请输入正确的邮箱'));\r\n             }else{\r\n                  callback();\r\n             } \r\n             }, 1000);\r\n         };\r\n         var validatePass = (rule, value, callback) => {\r\n             if (value === '') {\r\n                 callback(new Error('请输入密码'));\r\n             } else {\r\n             if (this.ruleForm.checkPass !== '') {\r\n                 this.$refs.ruleForm.validateField('checkPass');\r\n             }\r\n                 callback();\r\n             }\r\n         };\r\n         return{\r\n             load:false,\r\n             ruleForm: {\r\n                 pass: '',\r\n                 email: ''\r\n             },\r\n             rules: {\r\n                 pass: [\r\n                     { validator: validatePass, trigger: 'blur' }\r\n                 ],\r\n                 email: [\r\n                     { validator: checkEmail, trigger: 'blur' }\r\n                 ]\r\n             }\r\n         }\r\n     },\r\n     methods: {\r\n       submitForm(formName) {\r\n        this.$router.push('/login')\r\n           this.load=true\r\n         this.$refs[formName].validate((valid) => {\r\n           if (valid) {\r\n               this.$api.user.login({\r\n                   email:this.ruleForm.email,\r\n                   password:this.ruleForm.pass\r\n               }).then(({data})=>{\r\n                   this.load=false\r\n                   if(data.status=='0'){\r\n                       this.$store.dispatch('UserLogin', data.result.token)\r\n                       this.$store.dispatch('UserName', data.result.email)\r\n                       let redirect = decodeURIComponent(this.$route.query.redirect || '/');\r\n                       this.$router.push({\r\n                         path: redirect\r\n                       })\r\n                   }else {\r\n                       this.$message.error(data.msg);\r\n                   }\r\n                   \r\n               })\r\n           } else {\r\n             console.log('error submit!!');\r\n             return false;\r\n           }\r\n         });\r\n       }\r\n     }\r\n }\r\n </script>\r\n \r\n <style lang='scss'>\r\n .login{\r\n     width: 100%;\r\n     height: 100%;\r\n     background: rgb(48,49,62);\r\n     display: flex;\r\n     flex-direction: column;\r\n     align-items: center;\r\n     justify-content: center;\r\n     color: #fff;\r\n     .logo{\r\n         color:rgb(3,174,189);\r\n         font-size: 30px;\r\n         // font-style: italic;\r\n         font-weight: bold;\r\n         margin-bottom: 20px;\r\n         img{\r\n             width: 74px;\r\n             vertical-align: middle;\r\n             margin-right: 10px;\r\n         }\r\n     }\r\n     .login-input{\r\n         width:290px;\r\n         padding: 10px;\r\n         margin-top: 10px;\r\n         .el-input{\r\n             // margin-bottom: 20px;\r\n             .el-input__inner{\r\n                 border-radius: 30px!important;\r\n                 text-align: center;\r\n             }\r\n         }\r\n         .el-button{\r\n              border-radius: 30px!important;\r\n              width: 270px;\r\n              background: rgb(3,174,189);\r\n              color: #fff;\r\n              border: 0;\r\n         }\r\n         .register{\r\n             text-align: right;\r\n             margin: 10px;\r\n             a{\r\n                 color: #fff\r\n             }\r\n         }\r\n         \r\n     }\r\n }\r\n \r\n </style>"],"mappings":";AA4BA,OAAAA,OAAA;AACA;EACAC,UAAA;IAAAD;EAAA;EACAE,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAC,GAAA,OAAAC,MAAA;MACA,KAAAH,KAAA;QACA,OAAAC,QAAA,KAAAG,KAAA;MACA;MACAC,UAAA;QACA,KAAAH,GAAA,CAAAI,IAAA,CAAAN,KAAA;UACAC,QAAA,KAAAG,KAAA;QACA;UACAH,QAAA;QACA;MACA;IACA;IACA,IAAAM,YAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAG,KAAA;MACA;QACA,SAAAI,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAV,QAAA;MACA;IACA;IACA;MACAW,IAAA;MACAJ,QAAA;QACAK,IAAA;QACAC,KAAA;MACA;MACAC,KAAA;QACAF,IAAA,GACA;UAAAG,SAAA,EAAAT,YAAA;UAAAU,OAAA;QAAA,EACA;QACAH,KAAA,GACA;UAAAE,SAAA,EAAAlB,UAAA;UAAAmB,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;MACA,KAAAV,IAAA;MACA,KAAAF,KAAA,CAAAU,QAAA,EAAAG,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA;YACAb,KAAA,OAAAN,QAAA,CAAAM,KAAA;YACAc,QAAA,OAAApB,QAAA,CAAAK;UACA,GAAAgB,IAAA;YAAAhC;UAAA;YACA,KAAAe,IAAA;YACA,IAAAf,IAAA,CAAAiC,MAAA;cACA,KAAAC,MAAA,CAAAC,QAAA,cAAAnC,IAAA,CAAAoC,MAAA,CAAAC,KAAA;cACA,KAAAH,MAAA,CAAAC,QAAA,aAAAnC,IAAA,CAAAoC,MAAA,CAAAnB,KAAA;cACA,IAAAqB,QAAA,GAAAC,kBAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAH,QAAA;cACA,KAAAd,OAAA,CAAAC,IAAA;gBACAiB,IAAA,EAAAJ;cACA;YACA;cACA,KAAAK,QAAA,CAAAC,KAAA,CAAA5C,IAAA,CAAA6C,GAAA;YACA;UAEA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}