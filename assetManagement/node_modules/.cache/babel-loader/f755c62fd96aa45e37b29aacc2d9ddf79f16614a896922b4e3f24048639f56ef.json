{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      testOption2: {\n        backgroundColor: '',\n        //设置背景色透明\n        xAxis: {\n          max: 'dataMax'\n        },\n        yAxis: {\n          type: 'category',\n          data: ['苹果', '香蕉', '火龙果', '西瓜', '猕猴桃', '哈密瓜', '黄瓜', '西红柿', '水蜜桃', '橘子'],\n          inverse: true,\n          animationDuration: 300,\n          animationDurationUpdate: 300,\n          max: 10\n        },\n        series: [{\n          realtimeSort: true,\n          name: 'X',\n          type: 'bar',\n          data: [],\n          label: {\n            show: true,\n            position: 'right',\n            valueAnimation: true\n          }\n        }],\n        legend: {\n          show: true\n        },\n        animationDuration: 0,\n        animationDurationUpdate: 3000,\n        animationEasing: 'linear',\n        animationEasingUpdate: 'linear'\n      }\n    };\n  },\n  components: {},\n  mounted() {\n    //测试二\n    let chartTest2 = this.$echarts.init(document.getElementById(\"chart-test2\"), 'dark');\n    //初始化数据\n    let test2_Data = [];\n    for (let i = 0; i < 10; ++i) {\n      test2_Data.push(Math.round(Math.random() * 200));\n    }\n    this.testOption2.series[0].data = test2_Data; //初始化数据\n    chartTest2.setOption(this.testOption2); //初始化图表\n\n    let that = this;\n    setTimeout(function () {\n      that.getData();\n    }, 0);\n    setInterval(function () {\n      that.getData();\n    }, 3000);\n  },\n  methods: {\n    //模拟获取数据\n    getData() {\n      let chartTest2 = this.$echarts.init(document.getElementById(\"chart-test2\"), 'dark');\n      var data = this.testOption2.series[0].data;\n      for (var i = 0; i < data.length; ++i) {\n        if (Math.random() > 0.9) {\n          data[i] += Math.round(Math.random() * 2000);\n        } else {\n          data[i] += Math.round(Math.random() * 200);\n        }\n      }\n      this.testOption2.series[0].data = data;\n      chartTest2.setOption(this.testOption2); //得到数据后重新渲染图表\n    }\n  }\n};","map":{"version":3,"names":["data","testOption2","backgroundColor","xAxis","max","yAxis","type","inverse","animationDuration","animationDurationUpdate","series","realtimeSort","name","label","show","position","valueAnimation","legend","animationEasing","animationEasingUpdate","components","mounted","chartTest2","$echarts","init","document","getElementById","test2_Data","i","push","Math","round","random","setOption","that","setTimeout","getData","setInterval","methods","length"],"sources":["src/views/test2.vue"],"sourcesContent":["<template>\r\n  <div id=\"chart-test2\" :style=\"{ height: '500px',width:'1000px'}\"></div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n      data() {\r\n          return {\r\n              testOption2: {\r\n                  backgroundColor: '', //设置背景色透明\r\n                  xAxis: {\r\n                      max: 'dataMax',\r\n                  },\r\n                  yAxis: {\r\n                      type: 'category',\r\n                      data: ['苹果', '香蕉', '火龙果', '西瓜', '猕猴桃', '哈密瓜', '黄瓜', '西红柿', '水蜜桃', '橘子'],\r\n                      inverse: true,\r\n                      animationDuration: 300,\r\n                      animationDurationUpdate: 300,\r\n                      max: 10\r\n                  },\r\n                  series: [{\r\n                      realtimeSort: true,\r\n                      name: 'X',\r\n                      type: 'bar',\r\n                      data: [],\r\n                      label: {\r\n                          show: true,\r\n                          position: 'right',\r\n                          valueAnimation: true\r\n                      }\r\n                  }],\r\n                  legend: {\r\n                      show: true\r\n                  },\r\n                  animationDuration: 0,\r\n                  animationDurationUpdate: 3000,\r\n                  animationEasing: 'linear',\r\n                  animationEasingUpdate: 'linear'\r\n              },\r\n          };\r\n      },\r\n      components: {},\r\n      mounted() {\r\n          //测试二\r\n          let chartTest2 = this.$echarts.init(document.getElementById(\"chart-test2\"), 'dark');\r\n          //初始化数据\r\n          let test2_Data = [];\r\n          for (let i = 0; i < 10; ++i) {\r\n              test2_Data.push(Math.round(Math.random() * 200));\r\n          }\r\n          this.testOption2.series[0].data = test2_Data //初始化数据\r\n          chartTest2.setOption(this.testOption2) //初始化图表\r\n\r\n          let that = this;\r\n          setTimeout(function() {\r\n              that.getData();\r\n          }, 0);\r\n          setInterval(function() {\r\n              that.getData();\r\n          }, 3000);\r\n      },\r\n      methods: {\r\n          //模拟获取数据\r\n          getData() {\r\n              let chartTest2 = this.$echarts.init(document.getElementById(\"chart-test2\"), 'dark');\r\n              var data = this.testOption2.series[0].data;\r\n              for (var i = 0; i < data.length; ++i) {\r\n                  if (Math.random() > 0.9) {\r\n                      data[i] += Math.round(Math.random() * 2000);\r\n                  } else {\r\n                      data[i] += Math.round(Math.random() * 200);\r\n                  }\r\n              }\r\n              this.testOption2.series[0].data = data\r\n              chartTest2.setOption(this.testOption2); //得到数据后重新渲染图表\r\n          }\r\n      }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";AAKA;EACAA,KAAA;IACA;MACAC,WAAA;QACAC,eAAA;QAAA;QACAC,KAAA;UACAC,GAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAN,IAAA;UACAO,OAAA;UACAC,iBAAA;UACAC,uBAAA;UACAL,GAAA;QACA;QACAM,MAAA;UACAC,YAAA;UACAC,IAAA;UACAN,IAAA;UACAN,IAAA;UACAa,KAAA;YACAC,IAAA;YACAC,QAAA;YACAC,cAAA;UACA;QACA;QACAC,MAAA;UACAH,IAAA;QACA;QACAN,iBAAA;QACAC,uBAAA;QACAS,eAAA;QACAC,qBAAA;MACA;IACA;EACA;EACAC,UAAA;EACAC,QAAA;IACA;IACA,IAAAC,UAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;IACA;IACA,IAAAC,UAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,SAAAA,CAAA;MACAD,UAAA,CAAAE,IAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;IACA;IACA,KAAA/B,WAAA,CAAAS,MAAA,IAAAV,IAAA,GAAA2B,UAAA;IACAL,UAAA,CAAAW,SAAA,MAAAhC,WAAA;;IAEA,IAAAiC,IAAA;IACAC,UAAA;MACAD,IAAA,CAAAE,OAAA;IACA;IACAC,WAAA;MACAH,IAAA,CAAAE,OAAA;IACA;EACA;EACAE,OAAA;IACA;IACAF,QAAA;MACA,IAAAd,UAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,IAAA1B,IAAA,QAAAC,WAAA,CAAAS,MAAA,IAAAV,IAAA;MACA,SAAA4B,CAAA,MAAAA,CAAA,GAAA5B,IAAA,CAAAuC,MAAA,IAAAX,CAAA;QACA,IAAAE,IAAA,CAAAE,MAAA;UACAhC,IAAA,CAAA4B,CAAA,KAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;QACA;UACAhC,IAAA,CAAA4B,CAAA,KAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;QACA;MACA;MACA,KAAA/B,WAAA,CAAAS,MAAA,IAAAV,IAAA,GAAAA,IAAA;MACAsB,UAAA,CAAAW,SAAA,MAAAhC,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}