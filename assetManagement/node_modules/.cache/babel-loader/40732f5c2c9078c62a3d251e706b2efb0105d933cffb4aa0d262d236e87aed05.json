{"ast":null,"code":"import { ref, onMounted } from \"vue\";\n// canvas控件对象\n\nexport default {\n  __name: 'App',\n  setup(__props) {\n    const canvasDom = ref(null);\n    // video 控件对象\n    const videoDom = ref(null);\n    // 照片路径\n    const imgurl = ref(null);\n    const openCamera = () => {\n      // 检测浏览器是否支持mediaDevices\n      if (navigator.mediaDevices) {\n        navigator.mediaDevices\n        // 开启视频，关闭音频\n        .getUserMedia({\n          audio: false,\n          video: true\n        }).then(stream => {\n          // 将视频流传入viedo控件\n          videoDom.value.srcObject = stream;\n          // 播放\n          videoDom.value.play();\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        window.alert(\"该浏览器不支持开启摄像头，请更换最新版浏览器\");\n      }\n    };\n\n    // 拍照\n    const takePhoto = () => {\n      // 如果已经拍照了就重新启动摄像头\n      if (imgurl.value) {\n        imgurl.value = null;\n        openCamera();\n        return;\n      }\n\n      // 设置画布大小与摄像大小一致\n      canvasDom.value.width = videoDom.value.videoWidth;\n      canvasDom.value.height = videoDom.value.videoHeight;\n      // 执行画的操作\n      canvasDom.value.getContext(\"2d\").drawImage(videoDom.value, 0, 0);\n      // 将结果转换为可展示的格式\n      imgurl.value = canvasDom.value.toDataURL(\"image/webp\");\n      // 关闭摄像头\n      stop();\n    };\n\n    // 关闭摄像头\n    const stop = () => {\n      let stream = videoDom.value.srcObject;\n      if (!stream) return;\n      let tracks = stream.getTracks();\n      tracks.forEach(x => {\n        x.stop();\n      });\n    };\n\n    // 打开摄像头\n    onMounted(() => {\n      openCamera();\n    });\n    return {\n      __sfc: true,\n      canvasDom,\n      videoDom,\n      imgurl,\n      openCamera,\n      takePhoto,\n      stop\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","canvasDom","videoDom","imgurl","openCamera","navigator","mediaDevices","getUserMedia","audio","video","then","stream","value","srcObject","play","catch","err","console","log","window","alert","takePhoto","width","videoWidth","height","videoHeight","getContext","drawImage","toDataURL","stop","tracks","getTracks","forEach","x"],"sources":["App.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <!-- 画笔控件 用来拍照 -->\n    <canvas style=\"display: none\" ref=\"canvasDom\"/>\n    <!-- 播放器，用来播放拍摄的视频 -->\n    <video v-if=\"!imgurl\" class=\"camera_video\" ref=\"videoDom\"/>\n    <!--  显示照片  -->\n    <img v-else :src=\"imgurl\"/>\n    <br/>\n    <button @click=\"takePhoto\">{{ imgurl ? \"重拍\" : \"拍照\" }}</button>\n  </div>\n</template>\n\n\n<script setup>\nimport {ref, onMounted} from \"vue\";\n// canvas控件对象\nconst canvasDom = ref(null);\n// video 控件对象\nconst videoDom = ref(null);\n// 照片路径\nconst imgurl = ref(null);\n\n\nconst openCamera = () => {\n  // 检测浏览器是否支持mediaDevices\n  if (navigator.mediaDevices) {\n    navigator.mediaDevices\n        // 开启视频，关闭音频\n        .getUserMedia({audio: false, video: true})\n        .then((stream) => {\n          // 将视频流传入viedo控件\n          videoDom.value.srcObject = stream;\n          // 播放\n          videoDom.value.play();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  } else {\n    window.alert(\"该浏览器不支持开启摄像头，请更换最新版浏览器\");\n  }\n};\n\n// 拍照\nconst takePhoto = () => {\n  // 如果已经拍照了就重新启动摄像头\n  if (imgurl.value) {\n    imgurl.value = null;\n    openCamera()\n    return;\n  }\n\n  // 设置画布大小与摄像大小一致\n  canvasDom.value.width = videoDom.value.videoWidth;\n  canvasDom.value.height = videoDom.value.videoHeight;\n  // 执行画的操作\n  canvasDom.value.getContext(\"2d\").drawImage(videoDom.value, 0, 0);\n  // 将结果转换为可展示的格式\n  imgurl.value = canvasDom.value.toDataURL(\"image/webp\");\n  // 关闭摄像头\n  stop();\n}\n\n\n// 关闭摄像头\nconst stop = () => {\n  let stream = videoDom.value.srcObject;\n  if (!stream) return;\n  let tracks = stream.getTracks();\n  tracks.forEach((x) => {\n    x.stop();\n  });\n\n};\n\n// 打开摄像头\nonMounted(() => {\n  openCamera();\n});\n</script>\n\n<style scoped>\n.main {\n  width: 800px;\n  height: 500px;\n  margin: auto auto;\n}\n\n.camera_video {\n  width: 100%;\n  height: 100%;\n  border: 2px black solid;\n}\n</style>\n\n"],"mappings":"AAeA,SAAQA,GAAG,EAAEC,SAAS,QAAO,KAAK;AAClC;;;;;IACA,MAAMC,SAAS,GAAGF,GAAG,CAAC,IAAI,CAAC;IAC3B;IACA,MAAMG,QAAQ,GAAGH,GAAG,CAAC,IAAI,CAAC;IAC1B;IACA,MAAMI,MAAM,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAGxB,MAAMK,UAAU,GAAGA,CAAA,KAAM;MACvB;MACA,IAAIC,SAAS,CAACC,YAAY,EAAE;QAC1BD,SAAS,CAACC;QACN;QAAA,CACCC,YAAY,CAAC;UAACC,KAAK,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAI,CAAC,CAAC,CACzCC,IAAI,CAAEC,MAAM,IAAK;UAChB;UACAT,QAAQ,CAACU,KAAK,CAACC,SAAS,GAAGF,MAAM;UACjC;UACAT,QAAQ,CAACU,KAAK,CAACE,IAAI,EAAE;QACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;UACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAClB,CAAC,CAAC;MACR,CAAC,MAAM;QACLG,MAAM,CAACC,KAAK,CAAC,wBAAwB,CAAC;MACxC;IACF,CAAC;;IAED;IACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACtB;MACA,IAAIlB,MAAM,CAACS,KAAK,EAAE;QAChBT,MAAM,CAACS,KAAK,GAAG,IAAI;QACnBR,UAAU,EAAE;QACZ;MACF;;MAEA;MACAH,SAAS,CAACW,KAAK,CAACU,KAAK,GAAGpB,QAAQ,CAACU,KAAK,CAACW,UAAU;MACjDtB,SAAS,CAACW,KAAK,CAACY,MAAM,GAAGtB,QAAQ,CAACU,KAAK,CAACa,WAAW;MACnD;MACAxB,SAAS,CAACW,KAAK,CAACc,UAAU,CAAC,IAAI,CAAC,CAACC,SAAS,CAACzB,QAAQ,CAACU,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MAChE;MACAT,MAAM,CAACS,KAAK,GAAGX,SAAS,CAACW,KAAK,CAACgB,SAAS,CAAC,YAAY,CAAC;MACtD;MACAC,IAAI,EAAE;IACR,CAAC;;IAGD;IACA,MAAMA,IAAI,GAAGA,CAAA,KAAM;MACjB,IAAIlB,MAAM,GAAGT,QAAQ,CAACU,KAAK,CAACC,SAAS;MACrC,IAAI,CAACF,MAAM,EAAE;MACb,IAAImB,MAAM,GAAGnB,MAAM,CAACoB,SAAS,EAAE;MAC/BD,MAAM,CAACE,OAAO,CAAEC,CAAC,IAAK;QACpBA,CAAC,CAACJ,IAAI,EAAE;MACV,CAAC,CAAC;IAEJ,CAAC;;IAED;IACA7B,SAAS,CAAC,MAAM;MACdI,UAAU,EAAE;IACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}